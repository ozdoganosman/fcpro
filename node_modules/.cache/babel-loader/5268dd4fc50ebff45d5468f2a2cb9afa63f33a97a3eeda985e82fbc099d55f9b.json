{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\fcpro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TrainingMenu from './TrainingMenu';\nimport { createClubData, loadTurkishLeaguesFromCSV, advanceWeek, generateRealisticFixtures } from './data';\nimport './styles.css';\nimport FinanceModal from './components/FinanceModal';\nimport StandingsModal from './components/StandingsModal';\nimport FixtureModal from './components/FixtureModal';\nimport SquadModal from './components/SquadModal';\nimport TeamSelection from './components/TeamSelection';\nimport ManagerSelectionModal from './components/ManagerSelectionModal';\nimport ManagerDetailModal from './components/ManagerDetailModal';\nimport TrainingFacilitiesModal from './components/TrainingFacilitiesModal';\nimport YouthFacilitiesModal from './components/YouthFacilitiesModal';\nimport YouthSquadModal from './components/YouthSquadModal';\nimport FanSatisfactionModal from './components/FanSatisfactionModal';\nimport StadiumModal from './components/StadiumModal';\nimport PitchImprovementModal from './components/PitchImprovementModal';\nimport StadiumFacilitiesModal from './components/StadiumFacilitiesModal';\nimport TribuneUpgradeModal from './components/TribuneUpgradeModal';\nimport MatchPlayModal from './components/MatchPlayModal';\nimport OtherMatchesModal from './components/OtherMatchesModal';\nimport PlayerStatsModal from './components/PlayerStatsModal';\nimport WeeklyReportModal from './components/WeeklyReportModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getResultColor = result => {\n  if (typeof result === 'string') {\n    if (result === 'M') return 'var(--loss)';\n    if (result === 'G') return 'var(--win)';\n    if (result === 'B') return 'var(--draw)';\n    return '#ccc';\n  } else if (typeof result === 'object' && result.homeScore !== undefined) {\n    // Yeni format: obje\n    if (result.homeScore > result.awayScore) return 'var(--win)';\n    if (result.homeScore < result.awayScore) return 'var(--loss)';\n    return 'var(--draw)';\n  }\n  return '#ccc';\n};\nfunction App() {\n  _s();\n  const [club, setClub] = useState(null);\n  const [showFixture, setShowFixture] = useState(false);\n  const [showStandings, setShowStandings] = useState(false);\n  const [showFinance, setShowFinance] = useState(false);\n  const [showSquad, setShowSquad] = useState(false);\n  const [showTrainingMenu, setShowTrainingMenu] = useState(false);\n  const [showTeamSelection, setShowTeamSelection] = useState(true);\n  const [showManagerSelection, setShowManagerSelection] = useState(false);\n  const [showManagerDetail, setShowManagerDetail] = useState(false);\n  const [showTrainingFacilities, setShowTrainingFacilities] = useState(false);\n  const [showYouthFacilities, setShowYouthFacilities] = useState(false);\n  const [showYouthSquad, setShowYouthSquad] = useState(false);\n  const [showFanSatisfaction, setShowFanSatisfaction] = useState(false);\n  const [showStadium, setShowStadium] = useState(false);\n  const [showPitchImprovement, setShowPitchImprovement] = useState(false);\n  const [showStadiumFacilities, setShowStadiumFacilities] = useState(false);\n  const [showTribuneUpgrade, setShowTribuneUpgrade] = useState(false);\n  const [selectedTribune, setSelectedTribune] = useState(null);\n  const [showMatchPlay, setShowMatchPlay] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [gameTime, setGameTime] = useState({\n    week: 1,\n    day: 'Hafta Başı'\n  });\n  const [showOtherMatches, setShowOtherMatches] = useState(false);\n  const [showPlayerStats, setShowPlayerStats] = useState(false);\n  const [showWeeklyReport, setShowWeeklyReport] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const [selectedTeamForSquad, setSelectedTeamForSquad] = useState(null);\n  const [fixtureData, setFixtureData] = useState({});\n  const [turkishLeagues, setTurkishLeagues] = useState({});\n\n  // Takım verilerini yükle\n  useEffect(() => {\n    const loadTeams = async () => {\n      try {\n        const leagues = await loadTurkishLeaguesFromCSV();\n        setTurkishLeagues(leagues);\n      } catch (error) {\n        console.error('Takım verileri yüklenirken hata:', error);\n      }\n    };\n    loadTeams();\n  }, []);\n\n  // Fikstürü başlangıçta yükle\n  useEffect(() => {\n    const loadFixtures = async () => {\n      try {\n        const fixtures = {};\n\n        // Her lig için fikstür oluştur\n        Object.keys(turkishLeagues).forEach(leagueName => {\n          const teams = turkishLeagues[leagueName];\n          if (teams && teams.length > 0) {\n            const leagueFixtures = generateRealisticFixtures(teams);\n            fixtures[leagueName] = leagueFixtures;\n            console.log(`${leagueName} fikstürü: ${leagueFixtures.length} maç, ${Math.max(...leagueFixtures.map(f => f.week))} hafta`);\n          }\n        });\n        setFixtureData(fixtures);\n      } catch (error) {\n        console.error('Fikstür yüklenirken hata:', error);\n      }\n    };\n    if (Object.keys(turkishLeagues).length > 0) {\n      loadFixtures();\n    }\n  }, [turkishLeagues]);\n\n  // Oyuncu istatistikleri state'i\n  const [playerStats, setPlayerStats] = useState({});\n  const [currentMatchWeek, setCurrentMatchWeek] = useState(1);\n\n  // Ana menüde gösterilecek lig sıralamasını hesapla\n  const calculateCurrentLeaguePosition = () => {\n    if (!club || !fixtureData[club.league]) return club.lig || 1;\n    const leagueFixtures = fixtureData[club.league];\n    const leagueTeams = turkishLeagues[club.league];\n\n    // Henüz hiç maç oynanmamışsa başlangıç pozisyonunu göster\n    const hasPlayedMatches = leagueFixtures.some(fixture => fixture.played);\n    if (!hasPlayedMatches) {\n      return club.lig || 1;\n    }\n    const calculateTeamStats = teamName => {\n      let played = 0,\n        wins = 0,\n        draws = 0,\n        losses = 0,\n        goalsFor = 0,\n        goalsAgainst = 0;\n      leagueFixtures.forEach(fixture => {\n        if (fixture.played && (fixture.homeTeam === teamName || fixture.awayTeam === teamName)) {\n          played++;\n          const [homeScore, awayScore] = fixture.result.split('-').map(Number);\n          if (fixture.homeTeam === teamName) {\n            goalsFor += homeScore;\n            goalsAgainst += awayScore;\n            if (homeScore > awayScore) wins++;else if (homeScore < awayScore) losses++;else draws++;\n          } else {\n            goalsFor += awayScore;\n            goalsAgainst += homeScore;\n            if (awayScore > homeScore) wins++;else if (awayScore < homeScore) losses++;else draws++;\n          }\n        }\n      });\n      return {\n        played,\n        wins,\n        draws,\n        losses,\n        goalsFor,\n        goalsAgainst,\n        points: wins * 3 + draws\n      };\n    };\n\n    // Takımları sırala\n    const sortedTeams = leagueTeams.map(team => {\n      const stats = calculateTeamStats(team.name);\n      return {\n        ...team,\n        ...stats\n      };\n    }).sort((a, b) => {\n      if (b.points !== a.points) return b.points - a.points;\n      const aAvg = a.goalsFor - a.goalsAgainst;\n      const bAvg = b.goalsFor - b.goalsAgainst;\n      if (bAvg !== aAvg) return bAvg - aAvg;\n      return b.goalsFor - a.goalsFor;\n    });\n\n    // Kullanıcının takımının pozisyonunu bul\n    const userTeamIndex = sortedTeams.findIndex(team => team.name === club.name);\n    return userTeamIndex !== -1 ? userTeamIndex + 1 : club.lig || 1;\n  };\n\n  // OtherMatchesModal açıldığında diğer maçları oyna\n  useEffect(() => {\n    if (showOtherMatches && club) {\n      generateOtherTeamResults();\n    }\n  }, [showOtherMatches, club]);\n  const [technicalStaff, setTechnicalStaff] = useState({\n    assistant: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    physio: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    coach: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    scout: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }]\n  });\n  const handleTeamSelect = async (selectedTeam, selectedLeague) => {\n    const newClubData = await createClubData(selectedTeam, selectedLeague);\n    setClub(newClubData);\n    setShowTeamSelection(false);\n    setShowManagerSelection(true); // Menajer seçim ekranını göster\n  };\n  const handleManagerSelect = manager => {\n    setSelectedManager(manager);\n    setShowManagerSelection(false);\n  };\n\n  // Hazırlık maçları - global state olarak tut\n  const [preSeasonFixtures, setPreSeasonFixtures] = useState([]);\n\n  // Takım seçildiğinde hazırlık maçlarını oluştur\n  useEffect(() => {\n    if (club && Object.keys(turkishLeagues).length > 0) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n\n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      const newPreSeasonFixtures = [{\n        homeTeam: club.name,\n        awayTeam: randomTeams[0],\n        matchday: -1,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[1],\n        matchday: -2,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[2],\n        matchday: -3,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }];\n      setPreSeasonFixtures(newPreSeasonFixtures);\n    }\n  }, [club, turkishLeagues]);\n  const generateRandomMatch = () => {\n    // Bu hafta için hazırlık maçını bul\n    const currentWeek = gameTime.week;\n    console.log('Hafta', currentWeek, 'için hazırlık maçı aranıyor...');\n    console.log('Mevcut preSeasonFixtures:', preSeasonFixtures);\n\n    // Önce bu hafta için oynanmamış maç ara\n    let currentFixture = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && !fixture.played);\n\n    // Eğer bulunamazsa, herhangi bir oynanmamış maç ara\n    if (!currentFixture) {\n      currentFixture = preSeasonFixtures.find(fixture => !fixture.played);\n      console.log('Bu hafta için maç bulunamadı, oynanmamış maç arandı:', currentFixture);\n    }\n    if (currentFixture) {\n      console.log('Mevcut hazırlık maçı bulundu:', currentFixture);\n      return {\n        awayTeam: currentFixture.awayTeam,\n        type: 'friendly',\n        fixture: currentFixture\n      };\n    }\n    console.log('Hiç oynanmamış hazırlık maçı bulunamadı, yeni maç oluşturuluyor...');\n\n    // Eğer fikstürde yoksa, bu hafta için yeni hazırlık maçı oluştur\n    const allTeams = [];\n    Object.values(turkishLeagues).forEach(league => {\n      league.forEach(team => {\n        if (team !== club.name) {\n          allTeams.push(team);\n        }\n      });\n    });\n    const randomTeam = allTeams[Math.floor(Math.random() * allTeams.length)];\n\n    // Yeni hazırlık maçını fikstüre ekle\n    const newFixture = {\n      homeTeam: club.name,\n      awayTeam: randomTeam,\n      matchday: -currentWeek,\n      isPreSeason: true,\n      result: null,\n      played: false,\n      week: null\n    };\n    console.log('Yeni hazırlık maçı oluşturuldu:', newFixture);\n\n    // State'i güncelle ve yeni fixture'ı döndür\n    const updatedFixtures = [...preSeasonFixtures, newFixture];\n    setPreSeasonFixtures(updatedFixtures);\n    return {\n      awayTeam: randomTeam,\n      type: 'friendly',\n      fixture: newFixture\n    };\n  };\n  const generateOtherTeamResults = () => {\n    if (!club) return;\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    console.log(`Lig haftası ${currentWeek} için diğer maçlar oynanıyor...`);\n\n    // Tüm geçmiş haftaları da kontrol et (1'den currentWeek'e kadar)\n    let totalPlayedCount = 0;\n    const updatedFixtures = {\n      ...fixtureData\n    };\n    const updatedLeagueFixtures = [...leagueFixtures];\n\n    // 1. haftadan mevcut haftaya kadar tüm haftaları kontrol et\n    for (let week = 1; week <= currentWeek; week++) {\n      const weekFixtures = updatedLeagueFixtures.filter(fixture => fixture.week === week);\n\n      // Bu hafta kullanıcının maçı oynanmış mı?\n      const userMatchPlayed = weekFixtures.some(fixture => (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && fixture.played);\n      console.log(`Hafta ${week}: ${weekFixtures.length} maç, kullanıcı maçı oynanmış: ${userMatchPlayed}`);\n\n      // Eğer kullanıcının maçı oynanmışsa, diğer maçları da oyna\n      if (userMatchPlayed) {\n        let weekPlayedCount = 0;\n        weekFixtures.forEach(fixture => {\n          if (!fixture.played && fixture.homeTeam !== club.name && fixture.awayTeam !== club.name) {\n            // Rastgele skor üret (0-4 arası)\n            const homeScore = Math.floor(Math.random() * 5);\n            const awayScore = Math.floor(Math.random() * 5);\n            fixture.result = `${homeScore}-${awayScore}`;\n            fixture.played = true;\n            weekPlayedCount++;\n            totalPlayedCount++;\n            console.log(`Hafta ${week} - Diğer maç: ${fixture.homeTeam} ${homeScore}-${awayScore} ${fixture.awayTeam}`);\n          }\n        });\n        console.log(`Hafta ${week}: ${weekPlayedCount} diğer maç oynandı`);\n      }\n    }\n\n    // Güncellenmiş fikstürü state'e kaydet\n    updatedFixtures[club.league] = updatedLeagueFixtures;\n    setFixtureData(updatedFixtures);\n    console.log(`Toplam ${totalPlayedCount} diğer maç oynandı`);\n  };\n\n  // Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\n\n  const getCurrentFixture = () => {\n    // Fikstürden mevcut haftanın maçını al\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    console.log(`Lig maçı aranıyor: Hafta ${currentWeek}, ${club.league}, ${club.name}`);\n\n    // Eğer bu hafta için maç varsa ve henüz oynanmamışsa\n    const currentFixture = leagueFixtures.find(fixture => fixture.week === currentWeek && (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && !fixture.played);\n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.homeTeam === club.name ? currentFixture.awayTeam : currentFixture.homeTeam,\n        type: 'league',\n        fixture: currentFixture,\n        isHome: currentFixture.homeTeam === club.name\n      };\n    }\n\n    // Eğer bu hafta için maç yoksa, gelecek haftaya bak\n    const nextWeek = currentWeek + 1;\n    const nextFixture = leagueFixtures.find(fixture => fixture.week === nextWeek && (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && !fixture.played);\n    if (nextFixture) {\n      return {\n        awayTeam: nextFixture.homeTeam === club.name ? nextFixture.awayTeam : nextFixture.homeTeam,\n        type: 'league',\n        fixture: nextFixture,\n        isHome: nextFixture.homeTeam === club.name\n      };\n    }\n    return null;\n  };\n\n  // Hafta sonu maç kontrolü\n  useEffect(() => {\n    if (gameTime.day === 'Hafta Sonu' && !currentMatch) {\n      // İlk 3 hafta hazırlık maçları\n      if (gameTime.week <= 3) {\n        const newMatch = generateRandomMatch();\n        setCurrentMatch(newMatch);\n      } else {\n        // 4. haftadan itibaren lig maçları\n        const fixtureMatch = getCurrentFixture();\n        if (fixtureMatch) {\n          setCurrentMatch(fixtureMatch);\n        } else {\n          // Lig maçı bulunamadıysa maç yok\n          console.log('Bu hafta için lig maçı bulunamadı');\n        }\n      }\n    }\n  }, [gameTime.day]);\n\n  // HF SONU güncelleme\n  useEffect(() => {\n    if (club) {\n      if (gameTime.day === 'Hafta Başı') {\n        club.hfSonu = `Hafta ${gameTime.week} Başı`;\n      } else if (gameTime.day === 'Hafta İçi') {\n        club.hfSonu = `Hafta ${gameTime.week} İçi`;\n      } else if (gameTime.day === 'Hafta Sonu') {\n        club.hfSonu = `Hafta ${gameTime.week} Sonu`;\n      }\n    }\n  }, [gameTime, club]);\n\n  // Hazırlık maçlarını sadece ilk kez takım seçildiğinde oluştur\n  useEffect(() => {\n    if (club && preSeasonFixtures.length === 0) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n\n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      setPreSeasonFixtures([{\n        homeTeam: club.name,\n        awayTeam: randomTeams[0],\n        matchday: -1,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[1],\n        matchday: -2,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[2],\n        matchday: -3,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }]);\n    }\n  }, [club, preSeasonFixtures.length]);\n  const handleStaffHire = (staffType, index, staffName) => {\n    // Teknik kadroyu güncelle\n    const newStaff = {\n      ...technicalStaff\n    };\n    newStaff[staffType][index] = {\n      name: staffName,\n      avatar: staffName.split(' ')[0][0],\n      filled: true,\n      available: true\n    };\n    setTechnicalStaff(newStaff);\n\n    // Menajer puanlarını güncelle\n    const updatedManager = {\n      ...selectedManager\n    };\n    if (staffType === 'assistant' || staffType === 'physio') {\n      updatedManager.management = Math.min(100, updatedManager.management + 1);\n    } else if (staffType === 'coach') {\n      updatedManager.attacking = Math.min(100, updatedManager.attacking + 1);\n    } else if (staffType === 'scout') {\n      updatedManager.tactical = Math.min(100, updatedManager.tactical + 1);\n    }\n    setSelectedManager(updatedManager);\n  };\n  const handleTrainingUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = {\n      ...club\n    };\n    updatedClub.money -= expense;\n    updatedClub.antrenman = newLevel;\n    setClub(updatedClub);\n  };\n  const handleYouthUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = {\n      ...club\n    };\n    updatedClub.money -= expense;\n    updatedClub.altyapi = newLevel;\n    setClub(updatedClub);\n  };\n\n  // Takım seçilmemişse seçim ekranını göster\n  if (showTeamSelection || !club) {\n    return /*#__PURE__*/_jsxDEV(TeamSelection, {\n      onTeamSelect: handleTeamSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 12\n    }, this);\n  }\n  if (showManagerSelection) {\n    return /*#__PURE__*/_jsxDEV(ManagerSelectionModal, {\n      setShowManagerSelection: setShowManagerSelection,\n      onManagerSelect: handleManagerSelect,\n      leagueName: club.league,\n      teamValue: club.kadro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-title\",\n        children: \"FOOTBALL CHAIRMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-ribbon\",\n        children: club.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-sub\",\n        children: [club.season, \" \\xA0|\\xA0 \", club.league, \" \\xA0|\\xA0 \", club.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowFixture(true),\n        children: [\"HF SONU\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          children: club.hfSonu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowStandings(true),\n        children: [\"L\\u0130G\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          children: [calculateCurrentLeaguePosition(), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowFinance(true),\n        children: [\"PARA\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          style: {\n            color: 'var(--win)'\n          },\n          children: new Intl.NumberFormat('tr-TR', {\n            style: 'currency',\n            currency: 'TRY',\n            maximumFractionDigits: 0\n          }).format(club.money)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), showFixture && /*#__PURE__*/_jsxDEV(FixtureModal, {\n      setShowFixture: setShowFixture,\n      club: club,\n      preSeasonFixtures: preSeasonFixtures,\n      fixtureData: fixtureData,\n      onShowSquad: teamName => {\n        setSelectedTeamForSquad(teamName);\n        setShowSquad(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 23\n    }, this), showStandings && /*#__PURE__*/_jsxDEV(StandingsModal, {\n      setShowStandings: setShowStandings,\n      club: club,\n      fixtureData: fixtureData,\n      turkishLeagues: turkishLeagues,\n      onShowSquad: teamName => {\n        setSelectedTeamForSquad(teamName);\n        setShowSquad(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 25\n    }, this), showFinance && /*#__PURE__*/_jsxDEV(FinanceModal, {\n      setShowFinance: setShowFinance,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 23\n    }, this), showSquad && /*#__PURE__*/_jsxDEV(SquadModal, {\n      setShowSquad: setShowSquad,\n      club: club,\n      selectedTeam: selectedTeamForSquad,\n      playerStats: playerStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 21\n    }, this), showManagerDetail && /*#__PURE__*/_jsxDEV(ManagerDetailModal, {\n      setShowManagerDetail: setShowManagerDetail,\n      selectedManager: selectedManager,\n      technicalStaff: technicalStaff,\n      onStaffHire: handleStaffHire\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }, this), showTrainingFacilities && /*#__PURE__*/_jsxDEV(TrainingFacilitiesModal, {\n      setShowTrainingFacilities: setShowTrainingFacilities,\n      club: club,\n      onUpgrade: handleTrainingUpgrade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 34\n    }, this), showYouthFacilities && /*#__PURE__*/_jsxDEV(YouthFacilitiesModal, {\n      setShowYouthFacilities: setShowYouthFacilities,\n      club: club,\n      onUpgrade: handleYouthUpgrade,\n      onShowYouthSquad: () => setShowYouthSquad(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 31\n    }, this), showYouthSquad && /*#__PURE__*/_jsxDEV(YouthSquadModal, {\n      setShowYouthSquad: setShowYouthSquad,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 26\n    }, this), showFanSatisfaction && /*#__PURE__*/_jsxDEV(FanSatisfactionModal, {\n      setShowFanSatisfaction: setShowFanSatisfaction,\n      club: club,\n      turkishLeagues: turkishLeagues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 31\n    }, this), showStadium && /*#__PURE__*/_jsxDEV(StadiumModal, {\n      setShowStadium: setShowStadium,\n      onShowFacilities: () => setShowStadiumFacilities(true),\n      onShowTribuneUpgrade: tribune => {\n        setSelectedTribune(tribune);\n        setShowTribuneUpgrade(true);\n      },\n      onShowPitchImprovement: () => setShowPitchImprovement(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 23\n    }, this), showPitchImprovement && /*#__PURE__*/_jsxDEV(PitchImprovementModal, {\n      setShowPitchImprovement: setShowPitchImprovement,\n      club: club,\n      onShowStadium: () => setShowStadium(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 32\n    }, this), showStadiumFacilities && /*#__PURE__*/_jsxDEV(StadiumFacilitiesModal, {\n      setShowStadiumFacilities: setShowStadiumFacilities,\n      onShowStadium: () => setShowStadium(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 33\n    }, this), showTribuneUpgrade && selectedTribune && /*#__PURE__*/_jsxDEV(TribuneUpgradeModal, {\n      setShowTribuneUpgrade: setShowTribuneUpgrade,\n      selectedTribune: selectedTribune,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 49\n    }, this), showMatchPlay && currentMatch && /*#__PURE__*/_jsxDEV(MatchPlayModal, {\n      setShowMatchPlay: setShowMatchPlay,\n      club: club,\n      matchData: currentMatch,\n      onMatchEnd: result => {\n        console.log('Maç sonucu:', result);\n\n        // Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\n        if (result.events) {\n          const newPlayerStats = {\n            ...playerStats\n          };\n          result.events.forEach(event => {\n            if (event.player) {\n              if (!newPlayerStats[event.player]) {\n                newPlayerStats[event.player] = {\n                  goals: 0,\n                  assists: 0,\n                  yellowCards: 0,\n                  redCards: 0,\n                  injuries: []\n                };\n              }\n\n              // Hazırlık maçlarında sadece sakatlıkları kaydet\n              if (currentMatch.type === 'friendly') {\n                if (event.type === 'injury') {\n                  const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                  newPlayerStats[event.player].injuries.push({\n                    type: event.injuryType || 'Sakatlık',\n                    matchesOut: matchesOut,\n                    week: gameTime.week\n                  });\n                }\n              } else {\n                // Lig maçlarında tüm istatistikleri kaydet\n                switch (event.type) {\n                  case 'goal':\n                    newPlayerStats[event.player].goals++;\n                    break;\n                  case 'assist':\n                    newPlayerStats[event.player].assists++;\n                    break;\n                  case 'yellow':\n                    newPlayerStats[event.player].yellowCards++;\n                    break;\n                  case 'red':\n                    newPlayerStats[event.player].redCards++;\n                    break;\n                  case 'injury':\n                    {\n                      const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                      newPlayerStats[event.player].injuries.push({\n                        type: event.injuryType || 'Sakatlık',\n                        matchesOut: matchesOut,\n                        week: gameTime.week\n                      });\n                      break;\n                    }\n                }\n              }\n            }\n          });\n          setPlayerStats(newPlayerStats);\n        }\n\n        // Maç sonucunu fikstüre ekle\n        if (currentMatch.type === 'league' && currentMatch.fixture) {\n          // Lig fikstüründen doğru maçı bul ve güncelle\n          const currentWeek = gameTime.week - 3;\n          const leagueFixtures = fixtureData[club.league] || [];\n          const fixtureToUpdate = leagueFixtures.find(f => f.week === currentWeek && (f.homeTeam === club.name && f.awayTeam === currentMatch.awayTeam || f.awayTeam === club.name && f.homeTeam === currentMatch.awayTeam));\n          if (fixtureToUpdate) {\n            // Ev sahibi/deplasman durumuna göre doğru skoru kaydet\n            if (currentMatch.isHome) {\n              // Kullanıcı ev sahibi, skor doğru\n              fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n            } else {\n              // Kullanıcı deplasman, skoru ters çevir\n              fixtureToUpdate.result = `${result.awayScore}-${result.homeScore}`;\n            }\n            fixtureToUpdate.played = true;\n            console.log('Lig maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n          }\n\n          // Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n\n          // Diğer takımların maçlarını da çalıştır\n          generateOtherTeamResults();\n        } else if (currentMatch.type === 'friendly' && currentMatch.fixture) {\n          // Hazırlık maçı sonucunu fikstüre ekle\n          const currentWeek = gameTime.week;\n\n          // Bu hafta için hazırlık maçını bul ve güncelle\n          let fixtureToUpdate = null;\n          console.log('Hazırlık maçı güncelleniyor:', {\n            currentWeek,\n            awayTeam: currentMatch.awayTeam\n          });\n          console.log('currentMatch.fixture:', currentMatch.fixture);\n\n          // Önce currentMatch.fixture varsa onu kullan (en güvenilir yöntem)\n          if (currentMatch.fixture) {\n            fixtureToUpdate = preSeasonFixtures.find(fixture => fixture === currentMatch.fixture);\n            console.log('Fixture referansı ile bulundu:', fixtureToUpdate);\n          }\n\n          // Eğer bulunamazsa, hafta ve takım adına göre ara\n          if (!fixtureToUpdate) {\n            fixtureToUpdate = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && fixture.awayTeam === currentMatch.awayTeam);\n            console.log('Hafta ve takım adı ile bulundu:', fixtureToUpdate);\n          }\n\n          // Hala bulunamazsa, sadece takım adına göre ara (son çare)\n          if (!fixtureToUpdate) {\n            fixtureToUpdate = preSeasonFixtures.find(fixture => fixture.awayTeam === currentMatch.awayTeam && !fixture.played);\n            console.log('Sadece takım adı ile bulundu:', fixtureToUpdate);\n          }\n          if (fixtureToUpdate) {\n            fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n            fixtureToUpdate.played = true;\n            setPreSeasonFixtures([...preSeasonFixtures]); // State'i güncelle\n            console.log('Hazırlık maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n          } else {\n            console.log('Hazırlık maçı bulunamadı:', {\n              currentWeek,\n              awayTeam: currentMatch.awayTeam\n            });\n            console.log('Mevcut hazırlık maçları:', preSeasonFixtures);\n          }\n        } else if (currentMatch.type === 'friendly') {\n          // Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\n          console.log('Rastgele hazırlık maçı sonucu kaydedildi');\n        }\n\n        // Maç sonucunu kulüp geçmişine ekle\n        const matchResult = {\n          homeTeam: club.name,\n          awayTeam: currentMatch.awayTeam,\n          homeScore: result.homeScore,\n          awayScore: result.awayScore,\n          type: currentMatch.type,\n          week: gameTime.week\n        };\n        club.matchResults.push(matchResult);\n\n        // Maç tipini sakla\n        const matchType = currentMatch.type;\n        setCurrentMatch(null);\n\n        // Sadece lig maçlarından sonra diğer maç sonuçlarını göster\n        if (matchType === 'league') {\n          // Önce diğer maçları oyna, sonra modalı aç\n          setTimeout(() => {\n            // Hangi haftanın maç sonuçlarını göstereceğini belirt\n            const matchWeek = gameTime.week - 3; // Lig haftası\n            setShowOtherMatches(true);\n            // Modal'a hangi haftayı göstereceğini geçmek için state ekleyelim\n            setCurrentMatchWeek(matchWeek);\n          }, 100);\n        }\n\n        // Eğer hafta sonu ise gelir-gider raporu göster\n        if (gameTime.day === 'Hafta Sonu') {\n          // Hafta geçişi yap\n          const updatedClub = advanceWeek(club);\n          setClub(updatedClub);\n          setGameTime({\n            week: updatedClub.gameTime.week,\n            day: 'Hafta Başı'\n          });\n\n          // Gelir-gider raporu göster\n          setShowWeeklyReport(true);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 41\n    }, this), showOtherMatches && /*#__PURE__*/_jsxDEV(OtherMatchesModal, {\n      setShowOtherMatches: setShowOtherMatches,\n      club: club,\n      fixtureData: fixtureData,\n      gameTime: gameTime,\n      currentMatchWeek: currentMatchWeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 28\n    }, this), showPlayerStats && /*#__PURE__*/_jsxDEV(PlayerStatsModal, {\n      setShowPlayerStats: setShowPlayerStats,\n      club: club,\n      playerStats: playerStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 27\n    }, this), showWeeklyReport && /*#__PURE__*/_jsxDEV(WeeklyReportModal, {\n      setShowWeeklyReport: setShowWeeklyReport,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowSquad(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"KADRO\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 16\n        }, this), (() => {\n          const allPlayers = [...club.squad.firstTeam, ...club.squad.substitutes];\n          const totalRating = allPlayers.reduce((sum, player) => sum + player.rating, 0);\n          return Math.round(totalRating / allPlayers.length);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowPlayerStats(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"\\u0130STAT\\u0130ST\\u0130K\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 21\n        }, this), \"\\uD83D\\uDCCA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowManagerDetail(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"MENAJER\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 18\n        }, this), selectedManager ? selectedManager.name : club.menajer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowTrainingFacilities(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"ANTRENMAN\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 20\n        }, this), club.antrenman]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowYouthFacilities(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"ALTYAPI\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 18\n        }, this), club.altyapi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => setShowFanSatisfaction(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"TARAFTARLAR MUTLU MU?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.2em'\n          },\n          children: [club.taraftarMutlu, \"% MENAJER\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 110\n          }, this), club.baskanMutlu, \"% BA\\u015EKAN\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => setShowStadium(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"STADYUM\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.2em'\n          },\n          children: \"\\uD83C\\uDFDF\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => {\n          if (currentMatch) {\n            setShowMatchPlay(true);\n          } else {\n            // Zaman ilerlet - advanceWeek fonksiyonunu kullan\n            const updatedClub = advanceWeek(club);\n            setClub(updatedClub);\n            setGameTime(updatedClub.gameTime);\n          }\n        },\n        style: {\n          cursor: 'pointer',\n          background: currentMatch ? 'var(--win)' : 'var(--green)',\n          color: 'white',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          padding: '15px 30px',\n          borderRadius: '8px',\n          border: 'none'\n        },\n        children: currentMatch ? `${currentMatch.awayTeam}` : 'Devam Et'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-dots\",\n      children: club.matchResults.length > 0 ? club.matchResults.map((result, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-dot\",\n        style: {\n          background: getResultColor(result)\n        },\n        children: typeof result === 'string' ? result : `${result.homeScore}-${result.awayScore}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#ccc',\n          fontSize: '14px'\n        },\n        children: \"Hen\\xFCz ma\\xE7 oynanmad\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), showTrainingMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-modal-backdrop\",\n      children: [/*#__PURE__*/_jsxDEV(TrainingMenu, {\n        setShowTrainingMenu: setShowTrainingMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-btn\",\n        style: {\n          position: 'absolute',\n          top: '20px',\n          right: '20px',\n          background: 'red'\n        },\n        onClick: () => setShowTrainingMenu(false),\n        children: \"Kapat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wOgscV5fsgSWMJ6V/jTxW0Bkqec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TrainingMenu","createClubData","loadTurkishLeaguesFromCSV","advanceWeek","generateRealisticFixtures","FinanceModal","StandingsModal","FixtureModal","SquadModal","TeamSelection","ManagerSelectionModal","ManagerDetailModal","TrainingFacilitiesModal","YouthFacilitiesModal","YouthSquadModal","FanSatisfactionModal","StadiumModal","PitchImprovementModal","StadiumFacilitiesModal","TribuneUpgradeModal","MatchPlayModal","OtherMatchesModal","PlayerStatsModal","WeeklyReportModal","jsxDEV","_jsxDEV","getResultColor","result","homeScore","undefined","awayScore","App","_s","club","setClub","showFixture","setShowFixture","showStandings","setShowStandings","showFinance","setShowFinance","showSquad","setShowSquad","showTrainingMenu","setShowTrainingMenu","showTeamSelection","setShowTeamSelection","showManagerSelection","setShowManagerSelection","showManagerDetail","setShowManagerDetail","showTrainingFacilities","setShowTrainingFacilities","showYouthFacilities","setShowYouthFacilities","showYouthSquad","setShowYouthSquad","showFanSatisfaction","setShowFanSatisfaction","showStadium","setShowStadium","showPitchImprovement","setShowPitchImprovement","showStadiumFacilities","setShowStadiumFacilities","showTribuneUpgrade","setShowTribuneUpgrade","selectedTribune","setSelectedTribune","showMatchPlay","setShowMatchPlay","currentMatch","setCurrentMatch","gameTime","setGameTime","week","day","showOtherMatches","setShowOtherMatches","showPlayerStats","setShowPlayerStats","showWeeklyReport","setShowWeeklyReport","selectedManager","setSelectedManager","selectedTeamForSquad","setSelectedTeamForSquad","fixtureData","setFixtureData","turkishLeagues","setTurkishLeagues","loadTeams","leagues","error","console","loadFixtures","fixtures","Object","keys","forEach","leagueName","teams","length","leagueFixtures","log","Math","max","map","f","playerStats","setPlayerStats","currentMatchWeek","setCurrentMatchWeek","calculateCurrentLeaguePosition","league","lig","leagueTeams","hasPlayedMatches","some","fixture","played","calculateTeamStats","teamName","wins","draws","losses","goalsFor","goalsAgainst","homeTeam","awayTeam","split","Number","points","sortedTeams","team","stats","name","sort","a","b","aAvg","bAvg","userTeamIndex","findIndex","generateOtherTeamResults","technicalStaff","setTechnicalStaff","assistant","avatar","filled","available","physio","coach","scout","handleTeamSelect","selectedTeam","selectedLeague","newClubData","handleManagerSelect","manager","preSeasonFixtures","setPreSeasonFixtures","allTeams","values","push","randomTeams","i","randomIndex","floor","random","splice","newPreSeasonFixtures","matchday","isPreSeason","generateRandomMatch","currentWeek","currentFixture","find","abs","type","randomTeam","newFixture","updatedFixtures","totalPlayedCount","updatedLeagueFixtures","weekFixtures","filter","userMatchPlayed","weekPlayedCount","getCurrentFixture","isHome","nextWeek","nextFixture","newMatch","fixtureMatch","hfSonu","handleStaffHire","staffType","index","staffName","newStaff","updatedManager","management","min","attacking","tactical","handleTrainingUpgrade","expense","newLevel","updatedClub","money","antrenman","handleYouthUpgrade","altyapi","onTeamSelect","fileName","_jsxFileName","lineNumber","columnNumber","onManagerSelect","teamValue","kadro","className","children","season","date","onClick","style","color","Intl","NumberFormat","currency","maximumFractionDigits","format","onShowSquad","onStaffHire","onUpgrade","onShowYouthSquad","onShowFacilities","onShowTribuneUpgrade","tribune","onShowPitchImprovement","onShowStadium","matchData","onMatchEnd","events","newPlayerStats","event","player","goals","assists","yellowCards","redCards","injuries","matchesOut","injuryType","fixtureToUpdate","matchResult","matchResults","matchType","setTimeout","matchWeek","marginTop","cursor","allPlayers","squad","firstTeam","substitutes","totalRating","reduce","sum","rating","round","menajer","fontSize","taraftarMutlu","baskanMutlu","textAlign","background","fontWeight","padding","borderRadius","border","idx","position","top","right","_c","$RefreshReg$"],"sources":["C:/Users/PC/fcpro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TrainingMenu from './TrainingMenu';\nimport { createClubData, loadTurkishLeaguesFromCSV, advanceWeek, generateRealisticFixtures } from './data';\nimport './styles.css';\nimport FinanceModal from './components/FinanceModal';\nimport StandingsModal from './components/StandingsModal';\nimport FixtureModal from './components/FixtureModal';\nimport SquadModal from './components/SquadModal';\nimport TeamSelection from './components/TeamSelection';\nimport ManagerSelectionModal from './components/ManagerSelectionModal';\nimport ManagerDetailModal from './components/ManagerDetailModal';\nimport TrainingFacilitiesModal from './components/TrainingFacilitiesModal';\nimport YouthFacilitiesModal from './components/YouthFacilitiesModal';\nimport YouthSquadModal from './components/YouthSquadModal';\nimport FanSatisfactionModal from './components/FanSatisfactionModal';\nimport StadiumModal from './components/StadiumModal';\nimport PitchImprovementModal from './components/PitchImprovementModal';\nimport StadiumFacilitiesModal from './components/StadiumFacilitiesModal';\nimport TribuneUpgradeModal from './components/TribuneUpgradeModal';\nimport MatchPlayModal from './components/MatchPlayModal';\nimport OtherMatchesModal from './components/OtherMatchesModal';\nimport PlayerStatsModal from './components/PlayerStatsModal';\nimport WeeklyReportModal from './components/WeeklyReportModal';\n\n\nconst getResultColor = (result) => {\n  if (typeof result === 'string') {\n    if (result === 'M') return 'var(--loss)';\n    if (result === 'G') return 'var(--win)';\n    if (result === 'B') return 'var(--draw)';\n    return '#ccc';\n  } else if (typeof result === 'object' && result.homeScore !== undefined) {\n    // Yeni format: obje\n    if (result.homeScore > result.awayScore) return 'var(--win)';\n    if (result.homeScore < result.awayScore) return 'var(--loss)';\n    return 'var(--draw)';\n  }\n  return '#ccc';\n};\n\nfunction App() {\n  const [club, setClub] = useState(null);\n  const [showFixture, setShowFixture] = useState(false);\n  const [showStandings, setShowStandings] = useState(false);\n  const [showFinance, setShowFinance] = useState(false);\n  const [showSquad, setShowSquad] = useState(false);\n  const [showTrainingMenu, setShowTrainingMenu] = useState(false);\n  const [showTeamSelection, setShowTeamSelection] = useState(true);\n  const [showManagerSelection, setShowManagerSelection] = useState(false);\n  const [showManagerDetail, setShowManagerDetail] = useState(false);\n  const [showTrainingFacilities, setShowTrainingFacilities] = useState(false);\n  const [showYouthFacilities, setShowYouthFacilities] = useState(false);\n  const [showYouthSquad, setShowYouthSquad] = useState(false);\n  const [showFanSatisfaction, setShowFanSatisfaction] = useState(false);\n  const [showStadium, setShowStadium] = useState(false);\n  const [showPitchImprovement, setShowPitchImprovement] = useState(false);\n  const [showStadiumFacilities, setShowStadiumFacilities] = useState(false);\n  const [showTribuneUpgrade, setShowTribuneUpgrade] = useState(false);\n  const [selectedTribune, setSelectedTribune] = useState(null);\n  const [showMatchPlay, setShowMatchPlay] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [gameTime, setGameTime] = useState({ week: 1, day: 'Hafta Başı' });\n  const [showOtherMatches, setShowOtherMatches] = useState(false);\n  const [showPlayerStats, setShowPlayerStats] = useState(false);\n  const [showWeeklyReport, setShowWeeklyReport] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const [selectedTeamForSquad, setSelectedTeamForSquad] = useState(null);\n  const [fixtureData, setFixtureData] = useState({});\n  const [turkishLeagues, setTurkishLeagues] = useState({});\n  \n  // Takım verilerini yükle\n  useEffect(() => {\n    const loadTeams = async () => {\n      try {\n        const leagues = await loadTurkishLeaguesFromCSV();\n        setTurkishLeagues(leagues);\n      } catch (error) {\n        console.error('Takım verileri yüklenirken hata:', error);\n      }\n    };\n    \n    loadTeams();\n  }, []);\n  \n  // Fikstürü başlangıçta yükle\n  useEffect(() => {\n    const loadFixtures = async () => {\n      try {\n        const fixtures = {};\n        \n        // Her lig için fikstür oluştur\n        Object.keys(turkishLeagues).forEach(leagueName => {\n          const teams = turkishLeagues[leagueName];\n          if (teams && teams.length > 0) {\n            const leagueFixtures = generateRealisticFixtures(teams);\n            fixtures[leagueName] = leagueFixtures;\n            \n            console.log(`${leagueName} fikstürü: ${leagueFixtures.length} maç, ${Math.max(...leagueFixtures.map(f => f.week))} hafta`);\n          }\n        });\n        \n        setFixtureData(fixtures);\n      } catch (error) {\n        console.error('Fikstür yüklenirken hata:', error);\n      }\n    };\n    \n    if (Object.keys(turkishLeagues).length > 0) {\n      loadFixtures();\n    }\n  }, [turkishLeagues]);\n  \n  // Oyuncu istatistikleri state'i\n  const [playerStats, setPlayerStats] = useState({});\n  const [currentMatchWeek, setCurrentMatchWeek] = useState(1);\n\n  // Ana menüde gösterilecek lig sıralamasını hesapla\n  const calculateCurrentLeaguePosition = () => {\n    if (!club || !fixtureData[club.league]) return club.lig || 1;\n    \n    const leagueFixtures = fixtureData[club.league];\n    const leagueTeams = turkishLeagues[club.league];\n    \n    // Henüz hiç maç oynanmamışsa başlangıç pozisyonunu göster\n    const hasPlayedMatches = leagueFixtures.some(fixture => fixture.played);\n    if (!hasPlayedMatches) {\n      return club.lig || 1;\n    }\n    \n    const calculateTeamStats = (teamName) => {\n      let played = 0, wins = 0, draws = 0, losses = 0, goalsFor = 0, goalsAgainst = 0;\n      \n      leagueFixtures.forEach(fixture => {\n        if (fixture.played && (fixture.homeTeam === teamName || fixture.awayTeam === teamName)) {\n          played++;\n          const [homeScore, awayScore] = fixture.result.split('-').map(Number);\n          \n          if (fixture.homeTeam === teamName) {\n            goalsFor += homeScore;\n            goalsAgainst += awayScore;\n            if (homeScore > awayScore) wins++;\n            else if (homeScore < awayScore) losses++;\n            else draws++;\n          } else {\n            goalsFor += awayScore;\n            goalsAgainst += homeScore;\n            if (awayScore > homeScore) wins++;\n            else if (awayScore < homeScore) losses++;\n            else draws++;\n          }\n        }\n      });\n      \n      return {\n        played,\n        wins,\n        draws,\n        losses,\n        goalsFor,\n        goalsAgainst,\n        points: wins * 3 + draws\n      };\n    };\n    \n    // Takımları sırala\n    const sortedTeams = leagueTeams.map(team => {\n      const stats = calculateTeamStats(team.name);\n      return {\n        ...team,\n        ...stats\n      };\n    }).sort((a, b) => {\n      if (b.points !== a.points) return b.points - a.points;\n      const aAvg = a.goalsFor - a.goalsAgainst;\n      const bAvg = b.goalsFor - b.goalsAgainst;\n      if (bAvg !== aAvg) return bAvg - aAvg;\n      return b.goalsFor - a.goalsFor;\n    });\n    \n    // Kullanıcının takımının pozisyonunu bul\n    const userTeamIndex = sortedTeams.findIndex(team => team.name === club.name);\n    return userTeamIndex !== -1 ? userTeamIndex + 1 : club.lig || 1;\n  };\n  \n  // OtherMatchesModal açıldığında diğer maçları oyna\n  useEffect(() => {\n    if (showOtherMatches && club) {\n      generateOtherTeamResults();\n    }\n  }, [showOtherMatches, club]);\n\n  const [technicalStaff, setTechnicalStaff] = useState({\n    assistant: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    physio: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    coach: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    scout: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ]\n  });\n\n  const handleTeamSelect = async (selectedTeam, selectedLeague) => {\n    const newClubData = await createClubData(selectedTeam, selectedLeague);\n    setClub(newClubData);\n    setShowTeamSelection(false);\n    setShowManagerSelection(true); // Menajer seçim ekranını göster\n  };\n\n  const handleManagerSelect = (manager) => {\n    setSelectedManager(manager);\n    setShowManagerSelection(false);\n  };\n\n\n\n  // Hazırlık maçları - global state olarak tut\n  const [preSeasonFixtures, setPreSeasonFixtures] = useState([]);\n\n  // Takım seçildiğinde hazırlık maçlarını oluştur\n  useEffect(() => {\n    if (club && Object.keys(turkishLeagues).length > 0) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n      \n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      \n      const newPreSeasonFixtures = [\n        { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n      ];\n      \n      setPreSeasonFixtures(newPreSeasonFixtures);\n    }\n  }, [club, turkishLeagues]);\n\n  const generateRandomMatch = () => {\n    // Bu hafta için hazırlık maçını bul\n    const currentWeek = gameTime.week;\n    console.log('Hafta', currentWeek, 'için hazırlık maçı aranıyor...');\n    console.log('Mevcut preSeasonFixtures:', preSeasonFixtures);\n    \n    // Önce bu hafta için oynanmamış maç ara\n    let currentFixture = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && !fixture.played);\n    \n    // Eğer bulunamazsa, herhangi bir oynanmamış maç ara\n    if (!currentFixture) {\n      currentFixture = preSeasonFixtures.find(fixture => !fixture.played);\n      console.log('Bu hafta için maç bulunamadı, oynanmamış maç arandı:', currentFixture);\n    }\n    \n    if (currentFixture) {\n      console.log('Mevcut hazırlık maçı bulundu:', currentFixture);\n      return {\n        awayTeam: currentFixture.awayTeam,\n        type: 'friendly',\n        fixture: currentFixture\n      };\n    }\n    \n    console.log('Hiç oynanmamış hazırlık maçı bulunamadı, yeni maç oluşturuluyor...');\n    \n    // Eğer fikstürde yoksa, bu hafta için yeni hazırlık maçı oluştur\n    const allTeams = [];\n    Object.values(turkishLeagues).forEach(league => {\n      league.forEach(team => {\n        if (team !== club.name) {\n          allTeams.push(team);\n        }\n      });\n    });\n    \n    const randomTeam = allTeams[Math.floor(Math.random() * allTeams.length)];\n    \n    // Yeni hazırlık maçını fikstüre ekle\n    const newFixture = {\n      homeTeam: club.name,\n      awayTeam: randomTeam,\n      matchday: -currentWeek,\n      isPreSeason: true,\n      result: null,\n      played: false,\n      week: null\n    };\n    \n    console.log('Yeni hazırlık maçı oluşturuldu:', newFixture);\n    \n    // State'i güncelle ve yeni fixture'ı döndür\n    const updatedFixtures = [...preSeasonFixtures, newFixture];\n    setPreSeasonFixtures(updatedFixtures);\n    \n    return {\n      awayTeam: randomTeam,\n      type: 'friendly',\n      fixture: newFixture\n    };\n  };\n\n  const generateOtherTeamResults = () => {\n    if (!club) return;\n    \n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig haftası ${currentWeek} için diğer maçlar oynanıyor...`);\n    \n    // Tüm geçmiş haftaları da kontrol et (1'den currentWeek'e kadar)\n    let totalPlayedCount = 0;\n    const updatedFixtures = { ...fixtureData };\n    const updatedLeagueFixtures = [...leagueFixtures];\n    \n    // 1. haftadan mevcut haftaya kadar tüm haftaları kontrol et\n    for (let week = 1; week <= currentWeek; week++) {\n      const weekFixtures = updatedLeagueFixtures.filter(fixture => fixture.week === week);\n      \n      // Bu hafta kullanıcının maçı oynanmış mı?\n      const userMatchPlayed = weekFixtures.some(fixture => \n        (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && fixture.played\n      );\n      \n      console.log(`Hafta ${week}: ${weekFixtures.length} maç, kullanıcı maçı oynanmış: ${userMatchPlayed}`);\n      \n      // Eğer kullanıcının maçı oynanmışsa, diğer maçları da oyna\n      if (userMatchPlayed) {\n        let weekPlayedCount = 0;\n        weekFixtures.forEach(fixture => {\n          if (!fixture.played && fixture.homeTeam !== club.name && fixture.awayTeam !== club.name) {\n            // Rastgele skor üret (0-4 arası)\n            const homeScore = Math.floor(Math.random() * 5);\n            const awayScore = Math.floor(Math.random() * 5);\n            \n            fixture.result = `${homeScore}-${awayScore}`;\n            fixture.played = true;\n            weekPlayedCount++;\n            totalPlayedCount++;\n            \n            console.log(`Hafta ${week} - Diğer maç: ${fixture.homeTeam} ${homeScore}-${awayScore} ${fixture.awayTeam}`);\n          }\n        });\n        console.log(`Hafta ${week}: ${weekPlayedCount} diğer maç oynandı`);\n      }\n    }\n    \n    // Güncellenmiş fikstürü state'e kaydet\n    updatedFixtures[club.league] = updatedLeagueFixtures;\n    setFixtureData(updatedFixtures);\n    \n    console.log(`Toplam ${totalPlayedCount} diğer maç oynandı`);\n  };\n\n  // Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\n\n  const getCurrentFixture = () => {\n    // Fikstürden mevcut haftanın maçını al\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig maçı aranıyor: Hafta ${currentWeek}, ${club.league}, ${club.name}`);\n    \n    // Eğer bu hafta için maç varsa ve henüz oynanmamışsa\n    const currentFixture = leagueFixtures.find(fixture => \n      fixture.week === currentWeek && \n      (fixture.homeTeam === club.name || fixture.awayTeam === club.name) &&\n      !fixture.played\n    );\n    \n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.homeTeam === club.name ? currentFixture.awayTeam : currentFixture.homeTeam,\n        type: 'league',\n        fixture: currentFixture,\n        isHome: currentFixture.homeTeam === club.name\n      };\n    }\n    \n    // Eğer bu hafta için maç yoksa, gelecek haftaya bak\n    const nextWeek = currentWeek + 1;\n    const nextFixture = leagueFixtures.find(fixture => \n      fixture.week === nextWeek && \n      (fixture.homeTeam === club.name || fixture.awayTeam === club.name) &&\n      !fixture.played\n    );\n    \n    if (nextFixture) {\n      return {\n        awayTeam: nextFixture.homeTeam === club.name ? nextFixture.awayTeam : nextFixture.homeTeam,\n        type: 'league',\n        fixture: nextFixture,\n        isHome: nextFixture.homeTeam === club.name\n      };\n    }\n    \n    return null;\n  };\n\n  // Hafta sonu maç kontrolü\n  useEffect(() => {\n    if (gameTime.day === 'Hafta Sonu' && !currentMatch) {\n      // İlk 3 hafta hazırlık maçları\n      if (gameTime.week <= 3) {\n        const newMatch = generateRandomMatch();\n        setCurrentMatch(newMatch);\n      } else {\n        // 4. haftadan itibaren lig maçları\n        const fixtureMatch = getCurrentFixture();\n        if (fixtureMatch) {\n          setCurrentMatch(fixtureMatch);\n        } else {\n          // Lig maçı bulunamadıysa maç yok\n          console.log('Bu hafta için lig maçı bulunamadı');\n        }\n      }\n    }\n  }, [gameTime.day]);\n\n  // HF SONU güncelleme\n  useEffect(() => {\n    if (club) {\n      if (gameTime.day === 'Hafta Başı') {\n        club.hfSonu = `Hafta ${gameTime.week} Başı`;\n      } else if (gameTime.day === 'Hafta İçi') {\n        club.hfSonu = `Hafta ${gameTime.week} İçi`;\n      } else if (gameTime.day === 'Hafta Sonu') {\n        club.hfSonu = `Hafta ${gameTime.week} Sonu`;\n      }\n    }\n  }, [gameTime, club]);\n\n  // Hazırlık maçlarını sadece ilk kez takım seçildiğinde oluştur\n  useEffect(() => {\n    if (club && preSeasonFixtures.length === 0) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n      \n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      \n      setPreSeasonFixtures([\n        { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n      ]);\n    }\n  }, [club, preSeasonFixtures.length]);\n\n  const handleStaffHire = (staffType, index, staffName) => {\n    // Teknik kadroyu güncelle\n    const newStaff = { ...technicalStaff };\n    newStaff[staffType][index] = {\n      name: staffName,\n      avatar: staffName.split(' ')[0][0],\n      filled: true,\n      available: true\n    };\n    setTechnicalStaff(newStaff);\n\n    // Menajer puanlarını güncelle\n    const updatedManager = { ...selectedManager };\n    if (staffType === 'assistant' || staffType === 'physio') {\n      updatedManager.management = Math.min(100, updatedManager.management + 1);\n    } else if (staffType === 'coach') {\n      updatedManager.attacking = Math.min(100, updatedManager.attacking + 1);\n    } else if (staffType === 'scout') {\n      updatedManager.tactical = Math.min(100, updatedManager.tactical + 1);\n    }\n    setSelectedManager(updatedManager);\n  };\n\n  const handleTrainingUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.antrenman = newLevel;\n    setClub(updatedClub);\n  };\n\n  const handleYouthUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.altyapi = newLevel;\n    setClub(updatedClub);\n  };\n\n  // Takım seçilmemişse seçim ekranını göster\n  if (showTeamSelection || !club) {\n    return <TeamSelection onTeamSelect={handleTeamSelect} />;\n  }\n\n  if (showManagerSelection) {\n    return (\n      <ManagerSelectionModal \n        setShowManagerSelection={setShowManagerSelection}\n        onManagerSelect={handleManagerSelect}\n        leagueName={club.league}\n        teamValue={club.kadro}\n      />\n    );\n  }\n\n  return (\n    <div className=\"fc-container\">\n      <div className=\"fc-header\">\n        <div className=\"fc-title\">FOOTBALL CHAIRMAN</div>\n        <div className=\"fc-ribbon\">{club.name}</div>\n        <div className=\"fc-sub\">{club.season} &nbsp;|&nbsp; {club.league} &nbsp;|&nbsp; {club.date}</div>\n      </div>\n\n      <div className=\"fc-grid\">\n        <button className=\"fc-card white\" onClick={() => setShowFixture(true)}>\n          HF SONU<span className=\"big\">{club.hfSonu}</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowStandings(true)}>\n          LİG<span className=\"big\">{calculateCurrentLeaguePosition()}.</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowFinance(true)}>\n          PARA<span className=\"big\" style={{ color: 'var(--win)' }}>{new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY', maximumFractionDigits: 0 }).format(club.money)}</span>\n        </button>\n      </div>\n\n      {showFixture && <FixtureModal \n        setShowFixture={setShowFixture} \n        club={club} \n        preSeasonFixtures={preSeasonFixtures}\n        fixtureData={fixtureData}\n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showStandings && <StandingsModal \n        setShowStandings={setShowStandings} \n        club={club} \n        fixtureData={fixtureData}\n        turkishLeagues={turkishLeagues}\n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showFinance && <FinanceModal setShowFinance={setShowFinance} club={club} />}\n      {showSquad && <SquadModal \n        setShowSquad={setShowSquad} \n        club={club} \n        selectedTeam={selectedTeamForSquad}\n        playerStats={playerStats}\n      />}\n      {showManagerDetail && <ManagerDetailModal \n        setShowManagerDetail={setShowManagerDetail} \n        selectedManager={selectedManager}\n        technicalStaff={technicalStaff}\n        onStaffHire={handleStaffHire}\n      />}\n      {showTrainingFacilities && <TrainingFacilitiesModal \n        setShowTrainingFacilities={setShowTrainingFacilities}\n        club={club}\n        onUpgrade={handleTrainingUpgrade}\n      />}\n      {showYouthFacilities && <YouthFacilitiesModal \n        setShowYouthFacilities={setShowYouthFacilities}\n        club={club}\n        onUpgrade={handleYouthUpgrade}\n        onShowYouthSquad={() => setShowYouthSquad(true)}\n      />}\n      {showYouthSquad && <YouthSquadModal \n        setShowYouthSquad={setShowYouthSquad}\n        club={club}\n      />}\n      {showFanSatisfaction && <FanSatisfactionModal \n        setShowFanSatisfaction={setShowFanSatisfaction}\n        club={club}\n        turkishLeagues={turkishLeagues}\n      />}\n      {showStadium && <StadiumModal \n        setShowStadium={setShowStadium}\n        onShowFacilities={() => setShowStadiumFacilities(true)}\n        onShowTribuneUpgrade={(tribune) => {\n          setSelectedTribune(tribune);\n          setShowTribuneUpgrade(true);\n        }}\n        onShowPitchImprovement={() => setShowPitchImprovement(true)}\n      />}\n      {showPitchImprovement && <PitchImprovementModal \n        setShowPitchImprovement={setShowPitchImprovement}\n        club={club}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showStadiumFacilities && <StadiumFacilitiesModal \n        setShowStadiumFacilities={setShowStadiumFacilities}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showTribuneUpgrade && selectedTribune && <TribuneUpgradeModal \n        setShowTribuneUpgrade={setShowTribuneUpgrade}\n        selectedTribune={selectedTribune}\n        club={club}\n      />}\n      {showMatchPlay && currentMatch && <MatchPlayModal \n        setShowMatchPlay={setShowMatchPlay}\n        club={club}\n        matchData={currentMatch}\n                  onMatchEnd={(result) => {\n            console.log('Maç sonucu:', result);\n            \n            // Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\n            if (result.events) {\n              const newPlayerStats = { ...playerStats };\n              \n              result.events.forEach(event => {\n                if (event.player) {\n                  if (!newPlayerStats[event.player]) {\n                    newPlayerStats[event.player] = {\n                      goals: 0,\n                      assists: 0,\n                      yellowCards: 0,\n                      redCards: 0,\n                      injuries: []\n                    };\n                  }\n                  \n                  // Hazırlık maçlarında sadece sakatlıkları kaydet\n                  if (currentMatch.type === 'friendly') {\n                    if (event.type === 'injury') {\n                      const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                      newPlayerStats[event.player].injuries.push({\n                        type: event.injuryType || 'Sakatlık',\n                        matchesOut: matchesOut,\n                        week: gameTime.week\n                      });\n                    }\n                  } else {\n                    // Lig maçlarında tüm istatistikleri kaydet\n                    switch (event.type) {\n                      case 'goal':\n                        newPlayerStats[event.player].goals++;\n                        break;\n                      case 'assist':\n                        newPlayerStats[event.player].assists++;\n                        break;\n                      case 'yellow':\n                        newPlayerStats[event.player].yellowCards++;\n                        break;\n                      case 'red':\n                        newPlayerStats[event.player].redCards++;\n                        break;\n                      case 'injury': {\n                        const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                        newPlayerStats[event.player].injuries.push({\n                          type: event.injuryType || 'Sakatlık',\n                          matchesOut: matchesOut,\n                          week: gameTime.week\n                        });\n                        break;\n                      }\n                    }\n                  }\n                }\n              });\n              \n              setPlayerStats(newPlayerStats);\n            }\n            \n            // Maç sonucunu fikstüre ekle\n            if (currentMatch.type === 'league' && currentMatch.fixture) {\n              // Lig fikstüründen doğru maçı bul ve güncelle\n              const currentWeek = gameTime.week - 3;\n              const leagueFixtures = fixtureData[club.league] || [];\n              const fixtureToUpdate = leagueFixtures.find(f => \n                f.week === currentWeek && \n                ((f.homeTeam === club.name && f.awayTeam === currentMatch.awayTeam) ||\n                 (f.awayTeam === club.name && f.homeTeam === currentMatch.awayTeam))\n              );\n              \n              if (fixtureToUpdate) {\n                // Ev sahibi/deplasman durumuna göre doğru skoru kaydet\n                if (currentMatch.isHome) {\n                  // Kullanıcı ev sahibi, skor doğru\n                  fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                } else {\n                  // Kullanıcı deplasman, skoru ters çevir\n                  fixtureToUpdate.result = `${result.awayScore}-${result.homeScore}`;\n                }\n                fixtureToUpdate.played = true;\n                console.log('Lig maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              }\n              \n              // Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n              \n              // Diğer takımların maçlarını da çalıştır\n              generateOtherTeamResults();\n            } else if (currentMatch.type === 'friendly' && currentMatch.fixture) {\n              // Hazırlık maçı sonucunu fikstüre ekle\n              const currentWeek = gameTime.week;\n              \n              // Bu hafta için hazırlık maçını bul ve güncelle\n              let fixtureToUpdate = null;\n              \n              console.log('Hazırlık maçı güncelleniyor:', { currentWeek, awayTeam: currentMatch.awayTeam });\n              console.log('currentMatch.fixture:', currentMatch.fixture);\n              \n              // Önce currentMatch.fixture varsa onu kullan (en güvenilir yöntem)\n              if (currentMatch.fixture) {\n                fixtureToUpdate = preSeasonFixtures.find(fixture => \n                  fixture === currentMatch.fixture\n                );\n                console.log('Fixture referansı ile bulundu:', fixtureToUpdate);\n              }\n              \n              // Eğer bulunamazsa, hafta ve takım adına göre ara\n              if (!fixtureToUpdate) {\n                fixtureToUpdate = preSeasonFixtures.find(fixture => \n                  Math.abs(fixture.matchday) === currentWeek && fixture.awayTeam === currentMatch.awayTeam\n                );\n                console.log('Hafta ve takım adı ile bulundu:', fixtureToUpdate);\n              }\n              \n              // Hala bulunamazsa, sadece takım adına göre ara (son çare)\n              if (!fixtureToUpdate) {\n                fixtureToUpdate = preSeasonFixtures.find(fixture => \n                  fixture.awayTeam === currentMatch.awayTeam && !fixture.played\n                );\n                console.log('Sadece takım adı ile bulundu:', fixtureToUpdate);\n              }\n              \n              if (fixtureToUpdate) {\n                fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                fixtureToUpdate.played = true;\n                setPreSeasonFixtures([...preSeasonFixtures]); // State'i güncelle\n                console.log('Hazırlık maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              } else {\n                console.log('Hazırlık maçı bulunamadı:', { currentWeek, awayTeam: currentMatch.awayTeam });\n                console.log('Mevcut hazırlık maçları:', preSeasonFixtures);\n              }\n            } else if (currentMatch.type === 'friendly') {\n              // Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\n              console.log('Rastgele hazırlık maçı sonucu kaydedildi');\n            }\n            \n            // Maç sonucunu kulüp geçmişine ekle\n            const matchResult = {\n              homeTeam: club.name,\n              awayTeam: currentMatch.awayTeam,\n              homeScore: result.homeScore,\n              awayScore: result.awayScore,\n              type: currentMatch.type,\n              week: gameTime.week\n            };\n            \n            club.matchResults.push(matchResult);\n            \n            // Maç tipini sakla\n            const matchType = currentMatch.type;\n            setCurrentMatch(null);\n            \n            // Sadece lig maçlarından sonra diğer maç sonuçlarını göster\n            if (matchType === 'league') {\n              // Önce diğer maçları oyna, sonra modalı aç\n              setTimeout(() => {\n                // Hangi haftanın maç sonuçlarını göstereceğini belirt\n                const matchWeek = gameTime.week - 3; // Lig haftası\n                setShowOtherMatches(true);\n                // Modal'a hangi haftayı göstereceğini geçmek için state ekleyelim\n                setCurrentMatchWeek(matchWeek);\n              }, 100);\n            }\n            \n            // Eğer hafta sonu ise gelir-gider raporu göster\n            if (gameTime.day === 'Hafta Sonu') {\n              // Hafta geçişi yap\n              const updatedClub = advanceWeek(club);\n              setClub(updatedClub);\n              setGameTime({ week: updatedClub.gameTime.week, day: 'Hafta Başı' });\n              \n              // Gelir-gider raporu göster\n              setShowWeeklyReport(true);\n            }\n          }}\n      />}\n      {showOtherMatches && <OtherMatchesModal \n        setShowOtherMatches={setShowOtherMatches}\n        club={club}\n        fixtureData={fixtureData}\n        gameTime={gameTime}\n        currentMatchWeek={currentMatchWeek}\n      />}\n      {showPlayerStats && <PlayerStatsModal \n        setShowPlayerStats={setShowPlayerStats}\n        club={club}\n        playerStats={playerStats}\n      />}\n      {showWeeklyReport && <WeeklyReportModal \n        setShowWeeklyReport={setShowWeeklyReport}\n        club={club}\n      />}\n\n      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n        <button className=\"fc-card navy\" onClick={() => setShowSquad(true)} style={{ cursor: 'pointer' }}>\n          KADRO<br/>{(() => {\n            const allPlayers = [...club.squad.firstTeam, ...club.squad.substitutes];\n            const totalRating = allPlayers.reduce((sum, player) => sum + player.rating, 0);\n            return Math.round(totalRating / allPlayers.length);\n          })()}\n        </button>\n        <button className=\"fc-card navy\" onClick={() => setShowPlayerStats(true)} style={{ cursor: 'pointer' }}>\n          İSTATİSTİK<br/>📊\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowManagerDetail(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          MENAJER<br/>{selectedManager ? selectedManager.name : club.menajer}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowTrainingFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ANTRENMAN<br/>{club.antrenman}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowYouthFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ALTYAPI<br/>{club.altyapi}\n        </button>\n      </div>\n\n\n\n                      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowFanSatisfaction(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    TARAFTARLAR MUTLU MU?<br/><span style={{fontSize: '1.2em'}}>{club.taraftarMutlu}% MENAJER<br/>{club.baskanMutlu}% BAŞKAN</span>\n                  </button>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowStadium(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    STADYUM<br/><span style={{fontSize: '1.2em'}}>🏟️</span>\n                  </button>\n                </div>\n\n                {/* Zaman İlerletme Butonu */}\n                <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => {\n                      if (currentMatch) {\n                        setShowMatchPlay(true);\n                      } else {\n                        // Zaman ilerlet - advanceWeek fonksiyonunu kullan\n                        const updatedClub = advanceWeek(club);\n                        setClub(updatedClub);\n                        setGameTime(updatedClub.gameTime);\n                      }\n                    }}\n                    style={{ \n                      cursor: 'pointer',\n                      background: currentMatch ? 'var(--win)' : 'var(--green)',\n                      color: 'white',\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      padding: '15px 30px',\n                      borderRadius: '8px',\n                      border: 'none'\n                    }}\n                  >\n                    {currentMatch ? `${currentMatch.awayTeam}` : 'Devam Et'}\n                  </button>\n                </div>\n\n      <div className=\"fc-dots\">\n        {club.matchResults.length > 0 ? (\n          club.matchResults.map((result, idx) => (\n            <div key={idx} className=\"fc-dot\" style={{ background: getResultColor(result) }}>\n              {typeof result === 'string' ? result : `${result.homeScore}-${result.awayScore}`}\n            </div>\n          ))\n        ) : (\n          <div style={{ textAlign: 'center', color: '#ccc', fontSize: '14px' }}>\n            Henüz maç oynanmadı\n          </div>\n        )}\n      </div>\n\n\n\n\n\n      {showTrainingMenu && (\n        <div className=\"fc-modal-backdrop\">\n          <TrainingMenu setShowTrainingMenu={setShowTrainingMenu} />\n          <button\n            className=\"fc-btn\"\n            style={{ position: 'absolute', top: '20px', right: '20px', background: 'red' }}\n            onClick={() => setShowTrainingMenu(false)}\n          >\n            Kapat\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,cAAc,EAAEC,yBAAyB,EAAEC,WAAW,EAAEC,yBAAyB,QAAQ,QAAQ;AAC1G,OAAO,cAAc;AACrB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,uBAAuB,MAAM,sCAAsC;AAC1E,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,sBAAsB,MAAM,qCAAqC;AACxE,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACjC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,IAAIA,MAAM,KAAK,GAAG,EAAE,OAAO,aAAa;IACxC,IAAIA,MAAM,KAAK,GAAG,EAAE,OAAO,YAAY;IACvC,IAAIA,MAAM,KAAK,GAAG,EAAE,OAAO,aAAa;IACxC,OAAO,MAAM;EACf,CAAC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,SAAS,KAAKC,SAAS,EAAE;IACvE;IACA,IAAIF,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACG,SAAS,EAAE,OAAO,YAAY;IAC5D,IAAIH,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACG,SAAS,EAAE,OAAO,aAAa;IAC7D,OAAO,aAAa;EACtB;EACA,OAAO,MAAM;AACf,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC+C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACmD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACqD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACuD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC2D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5D,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACiE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACmE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACqE,eAAe,EAAEC,kBAAkB,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuE,aAAa,EAAEC,gBAAgB,CAAC,GAAGxE,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyE,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2E,QAAQ,EAAEC,WAAW,CAAC,GAAG5E,QAAQ,CAAC;IAAE6E,IAAI,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAa,CAAC,CAAC;EACxE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhF,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiF,eAAe,EAAEC,kBAAkB,CAAC,GAAGlF,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpF,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqF,eAAe,EAAEC,kBAAkB,CAAC,GAAGtF,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuF,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxF,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACyF,WAAW,EAAEC,cAAc,CAAC,GAAG1F,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC2F,cAAc,EAAEC,iBAAiB,CAAC,GAAG5F,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM4F,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAM1F,yBAAyB,CAAC,CAAC;QACjDwF,iBAAiB,CAACE,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5F,SAAS,CAAC,MAAM;IACd,MAAMgG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,CAAC,CAAC;;QAEnB;QACAC,MAAM,CAACC,IAAI,CAACT,cAAc,CAAC,CAACU,OAAO,CAACC,UAAU,IAAI;UAChD,MAAMC,KAAK,GAAGZ,cAAc,CAACW,UAAU,CAAC;UACxC,IAAIC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAMC,cAAc,GAAGnG,yBAAyB,CAACiG,KAAK,CAAC;YACvDL,QAAQ,CAACI,UAAU,CAAC,GAAGG,cAAc;YAErCT,OAAO,CAACU,GAAG,CAAC,GAAGJ,UAAU,cAAcG,cAAc,CAACD,MAAM,SAASG,IAAI,CAACC,GAAG,CAAC,GAAGH,cAAc,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACjC,IAAI,CAAC,CAAC,QAAQ,CAAC;UAC5H;QACF,CAAC,CAAC;QAEFa,cAAc,CAACQ,QAAQ,CAAC;MAC1B,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAED,IAAII,MAAM,CAACC,IAAI,CAACT,cAAc,CAAC,CAACa,MAAM,GAAG,CAAC,EAAE;MAC1CP,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGhH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACiH,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlH,QAAQ,CAAC,CAAC,CAAC;;EAE3D;EACA,MAAMmH,8BAA8B,GAAGA,CAAA,KAAM;IAC3C,IAAI,CAAChF,IAAI,IAAI,CAACsD,WAAW,CAACtD,IAAI,CAACiF,MAAM,CAAC,EAAE,OAAOjF,IAAI,CAACkF,GAAG,IAAI,CAAC;IAE5D,MAAMZ,cAAc,GAAGhB,WAAW,CAACtD,IAAI,CAACiF,MAAM,CAAC;IAC/C,MAAME,WAAW,GAAG3B,cAAc,CAACxD,IAAI,CAACiF,MAAM,CAAC;;IAE/C;IACA,MAAMG,gBAAgB,GAAGd,cAAc,CAACe,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,CAAC;IACvE,IAAI,CAACH,gBAAgB,EAAE;MACrB,OAAOpF,IAAI,CAACkF,GAAG,IAAI,CAAC;IACtB;IAEA,MAAMM,kBAAkB,GAAIC,QAAQ,IAAK;MACvC,IAAIF,MAAM,GAAG,CAAC;QAAEG,IAAI,GAAG,CAAC;QAAEC,KAAK,GAAG,CAAC;QAAEC,MAAM,GAAG,CAAC;QAAEC,QAAQ,GAAG,CAAC;QAAEC,YAAY,GAAG,CAAC;MAE/ExB,cAAc,CAACJ,OAAO,CAACoB,OAAO,IAAI;QAChC,IAAIA,OAAO,CAACC,MAAM,KAAKD,OAAO,CAACS,QAAQ,KAAKN,QAAQ,IAAIH,OAAO,CAACU,QAAQ,KAAKP,QAAQ,CAAC,EAAE;UACtFF,MAAM,EAAE;UACR,MAAM,CAAC5F,SAAS,EAAEE,SAAS,CAAC,GAAGyF,OAAO,CAAC5F,MAAM,CAACuG,KAAK,CAAC,GAAG,CAAC,CAACvB,GAAG,CAACwB,MAAM,CAAC;UAEpE,IAAIZ,OAAO,CAACS,QAAQ,KAAKN,QAAQ,EAAE;YACjCI,QAAQ,IAAIlG,SAAS;YACrBmG,YAAY,IAAIjG,SAAS;YACzB,IAAIF,SAAS,GAAGE,SAAS,EAAE6F,IAAI,EAAE,CAAC,KAC7B,IAAI/F,SAAS,GAAGE,SAAS,EAAE+F,MAAM,EAAE,CAAC,KACpCD,KAAK,EAAE;UACd,CAAC,MAAM;YACLE,QAAQ,IAAIhG,SAAS;YACrBiG,YAAY,IAAInG,SAAS;YACzB,IAAIE,SAAS,GAAGF,SAAS,EAAE+F,IAAI,EAAE,CAAC,KAC7B,IAAI7F,SAAS,GAAGF,SAAS,EAAEiG,MAAM,EAAE,CAAC,KACpCD,KAAK,EAAE;UACd;QACF;MACF,CAAC,CAAC;MAEF,OAAO;QACLJ,MAAM;QACNG,IAAI;QACJC,KAAK;QACLC,MAAM;QACNC,QAAQ;QACRC,YAAY;QACZK,MAAM,EAAET,IAAI,GAAG,CAAC,GAAGC;MACrB,CAAC;IACH,CAAC;;IAED;IACA,MAAMS,WAAW,GAAGjB,WAAW,CAACT,GAAG,CAAC2B,IAAI,IAAI;MAC1C,MAAMC,KAAK,GAAGd,kBAAkB,CAACa,IAAI,CAACE,IAAI,CAAC;MAC3C,OAAO;QACL,GAAGF,IAAI;QACP,GAAGC;MACL,CAAC;IACH,CAAC,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAChB,IAAIA,CAAC,CAACP,MAAM,KAAKM,CAAC,CAACN,MAAM,EAAE,OAAOO,CAAC,CAACP,MAAM,GAAGM,CAAC,CAACN,MAAM;MACrD,MAAMQ,IAAI,GAAGF,CAAC,CAACZ,QAAQ,GAAGY,CAAC,CAACX,YAAY;MACxC,MAAMc,IAAI,GAAGF,CAAC,CAACb,QAAQ,GAAGa,CAAC,CAACZ,YAAY;MACxC,IAAIc,IAAI,KAAKD,IAAI,EAAE,OAAOC,IAAI,GAAGD,IAAI;MACrC,OAAOD,CAAC,CAACb,QAAQ,GAAGY,CAAC,CAACZ,QAAQ;IAChC,CAAC,CAAC;;IAEF;IACA,MAAMgB,aAAa,GAAGT,WAAW,CAACU,SAAS,CAACT,IAAI,IAAIA,IAAI,CAACE,IAAI,KAAKvG,IAAI,CAACuG,IAAI,CAAC;IAC5E,OAAOM,aAAa,KAAK,CAAC,CAAC,GAAGA,aAAa,GAAG,CAAC,GAAG7G,IAAI,CAACkF,GAAG,IAAI,CAAC;EACjE,CAAC;;EAED;EACApH,SAAS,CAAC,MAAM;IACd,IAAI8E,gBAAgB,IAAI5C,IAAI,EAAE;MAC5B+G,wBAAwB,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACnE,gBAAgB,EAAE5C,IAAI,CAAC,CAAC;EAE5B,MAAM,CAACgH,cAAc,EAAEC,iBAAiB,CAAC,GAAGpJ,QAAQ,CAAC;IACnDqJ,SAAS,EAAE,CACT;MAAEX,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC,CAC7D;IACDC,MAAM,EAAE,CACN;MAAEf,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC,CAC7D;IACDE,KAAK,EAAE,CACL;MAAEhB,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC,EAC5D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC,CAC7D;IACDG,KAAK,EAAE,CACL;MAAEjB,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC3D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC,EAC5D;MAAEd,IAAI,EAAE,KAAK;MAAEY,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAM,CAAC;EAEhE,CAAC,CAAC;EAEF,MAAMI,gBAAgB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,cAAc,KAAK;IAC/D,MAAMC,WAAW,GAAG,MAAM5J,cAAc,CAAC0J,YAAY,EAAEC,cAAc,CAAC;IACtE1H,OAAO,CAAC2H,WAAW,CAAC;IACpB/G,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAM8G,mBAAmB,GAAIC,OAAO,IAAK;IACvC3E,kBAAkB,CAAC2E,OAAO,CAAC;IAC3B/G,uBAAuB,CAAC,KAAK,CAAC;EAChC,CAAC;;EAID;EACA,MAAM,CAACgH,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnK,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,IAAIkC,IAAI,IAAIgE,MAAM,CAACC,IAAI,CAACT,cAAc,CAAC,CAACa,MAAM,GAAG,CAAC,EAAE;MAClD;MACA,MAAM4D,QAAQ,GAAG,EAAE;MACnBjE,MAAM,CAACkE,MAAM,CAAC1E,cAAc,CAAC,CAACU,OAAO,CAACe,MAAM,IAAI;QAC9CA,MAAM,CAACf,OAAO,CAACmC,IAAI,IAAI;UACrB,IAAIA,IAAI,CAACE,IAAI,KAAKvG,IAAI,CAACuG,IAAI,EAAE;YAC3B0B,QAAQ,CAACE,IAAI,CAAC9B,IAAI,CAACE,IAAI,CAAC;UAC1B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAM6B,WAAW,GAAG,EAAE;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,WAAW,GAAG9D,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAGP,QAAQ,CAAC5D,MAAM,CAAC;QAC/D+D,WAAW,CAACD,IAAI,CAACF,QAAQ,CAACK,WAAW,CAAC,CAAC;QACvCL,QAAQ,CAACQ,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC;MACjC;MAEA,MAAMI,oBAAoB,GAAG,CAC3B;QAAE3C,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,EAC3H;QAAEqD,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,EAC3H;QAAEqD,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,CAC5H;MAEDsF,oBAAoB,CAACU,oBAAoB,CAAC;IAC5C;EACF,CAAC,EAAE,CAAC1I,IAAI,EAAEwD,cAAc,CAAC,CAAC;EAE1B,MAAMqF,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMC,WAAW,GAAGtG,QAAQ,CAACE,IAAI;IACjCmB,OAAO,CAACU,GAAG,CAAC,OAAO,EAAEuE,WAAW,EAAE,gCAAgC,CAAC;IACnEjF,OAAO,CAACU,GAAG,CAAC,2BAA2B,EAAEwD,iBAAiB,CAAC;;IAE3D;IACA,IAAIgB,cAAc,GAAGhB,iBAAiB,CAACiB,IAAI,CAAC1D,OAAO,IAAId,IAAI,CAACyE,GAAG,CAAC3D,OAAO,CAACqD,QAAQ,CAAC,KAAKG,WAAW,IAAI,CAACxD,OAAO,CAACC,MAAM,CAAC;;IAErH;IACA,IAAI,CAACwD,cAAc,EAAE;MACnBA,cAAc,GAAGhB,iBAAiB,CAACiB,IAAI,CAAC1D,OAAO,IAAI,CAACA,OAAO,CAACC,MAAM,CAAC;MACnE1B,OAAO,CAACU,GAAG,CAAC,sDAAsD,EAAEwE,cAAc,CAAC;IACrF;IAEA,IAAIA,cAAc,EAAE;MAClBlF,OAAO,CAACU,GAAG,CAAC,+BAA+B,EAAEwE,cAAc,CAAC;MAC5D,OAAO;QACL/C,QAAQ,EAAE+C,cAAc,CAAC/C,QAAQ;QACjCkD,IAAI,EAAE,UAAU;QAChB5D,OAAO,EAAEyD;MACX,CAAC;IACH;IAEAlF,OAAO,CAACU,GAAG,CAAC,oEAAoE,CAAC;;IAEjF;IACA,MAAM0D,QAAQ,GAAG,EAAE;IACnBjE,MAAM,CAACkE,MAAM,CAAC1E,cAAc,CAAC,CAACU,OAAO,CAACe,MAAM,IAAI;MAC9CA,MAAM,CAACf,OAAO,CAACmC,IAAI,IAAI;QACrB,IAAIA,IAAI,KAAKrG,IAAI,CAACuG,IAAI,EAAE;UACtB0B,QAAQ,CAACE,IAAI,CAAC9B,IAAI,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM8C,UAAU,GAAGlB,QAAQ,CAACzD,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAGP,QAAQ,CAAC5D,MAAM,CAAC,CAAC;;IAExE;IACA,MAAM+E,UAAU,GAAG;MACjBrD,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;MACnBP,QAAQ,EAAEmD,UAAU;MACpBR,QAAQ,EAAE,CAACG,WAAW;MACtBF,WAAW,EAAE,IAAI;MACjBlJ,MAAM,EAAE,IAAI;MACZ6F,MAAM,EAAE,KAAK;MACb7C,IAAI,EAAE;IACR,CAAC;IAEDmB,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAE6E,UAAU,CAAC;;IAE1D;IACA,MAAMC,eAAe,GAAG,CAAC,GAAGtB,iBAAiB,EAAEqB,UAAU,CAAC;IAC1DpB,oBAAoB,CAACqB,eAAe,CAAC;IAErC,OAAO;MACLrD,QAAQ,EAAEmD,UAAU;MACpBD,IAAI,EAAE,UAAU;MAChB5D,OAAO,EAAE8D;IACX,CAAC;EACH,CAAC;EAED,MAAMrC,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAI,CAAC/G,IAAI,EAAE;IAEX,MAAM8I,WAAW,GAAGtG,QAAQ,CAACE,IAAI,GAAG,CAAC,CAAC,CAAC;IACvC,MAAM4B,cAAc,GAAGhB,WAAW,CAACtD,IAAI,CAACiF,MAAM,CAAC,IAAI,EAAE;IAErDpB,OAAO,CAACU,GAAG,CAAC,eAAeuE,WAAW,iCAAiC,CAAC;;IAExE;IACA,IAAIQ,gBAAgB,GAAG,CAAC;IACxB,MAAMD,eAAe,GAAG;MAAE,GAAG/F;IAAY,CAAC;IAC1C,MAAMiG,qBAAqB,GAAG,CAAC,GAAGjF,cAAc,CAAC;;IAEjD;IACA,KAAK,IAAI5B,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAIoG,WAAW,EAAEpG,IAAI,EAAE,EAAE;MAC9C,MAAM8G,YAAY,GAAGD,qBAAqB,CAACE,MAAM,CAACnE,OAAO,IAAIA,OAAO,CAAC5C,IAAI,KAAKA,IAAI,CAAC;;MAEnF;MACA,MAAMgH,eAAe,GAAGF,YAAY,CAACnE,IAAI,CAACC,OAAO,IAC/C,CAACA,OAAO,CAACS,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,IAAIjB,OAAO,CAACU,QAAQ,KAAKhG,IAAI,CAACuG,IAAI,KAAKjB,OAAO,CAACC,MAChF,CAAC;MAED1B,OAAO,CAACU,GAAG,CAAC,SAAS7B,IAAI,KAAK8G,YAAY,CAACnF,MAAM,kCAAkCqF,eAAe,EAAE,CAAC;;MAErG;MACA,IAAIA,eAAe,EAAE;QACnB,IAAIC,eAAe,GAAG,CAAC;QACvBH,YAAY,CAACtF,OAAO,CAACoB,OAAO,IAAI;UAC9B,IAAI,CAACA,OAAO,CAACC,MAAM,IAAID,OAAO,CAACS,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,IAAIjB,OAAO,CAACU,QAAQ,KAAKhG,IAAI,CAACuG,IAAI,EAAE;YACvF;YACA,MAAM5G,SAAS,GAAG6E,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAC/C,MAAM3I,SAAS,GAAG2E,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAE/ClD,OAAO,CAAC5F,MAAM,GAAG,GAAGC,SAAS,IAAIE,SAAS,EAAE;YAC5CyF,OAAO,CAACC,MAAM,GAAG,IAAI;YACrBoE,eAAe,EAAE;YACjBL,gBAAgB,EAAE;YAElBzF,OAAO,CAACU,GAAG,CAAC,SAAS7B,IAAI,iBAAiB4C,OAAO,CAACS,QAAQ,IAAIpG,SAAS,IAAIE,SAAS,IAAIyF,OAAO,CAACU,QAAQ,EAAE,CAAC;UAC7G;QACF,CAAC,CAAC;QACFnC,OAAO,CAACU,GAAG,CAAC,SAAS7B,IAAI,KAAKiH,eAAe,oBAAoB,CAAC;MACpE;IACF;;IAEA;IACAN,eAAe,CAACrJ,IAAI,CAACiF,MAAM,CAAC,GAAGsE,qBAAqB;IACpDhG,cAAc,CAAC8F,eAAe,CAAC;IAE/BxF,OAAO,CAACU,GAAG,CAAC,UAAU+E,gBAAgB,oBAAoB,CAAC;EAC7D,CAAC;;EAED;;EAEA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMd,WAAW,GAAGtG,QAAQ,CAACE,IAAI,GAAG,CAAC,CAAC,CAAC;IACvC,MAAM4B,cAAc,GAAGhB,WAAW,CAACtD,IAAI,CAACiF,MAAM,CAAC,IAAI,EAAE;IAErDpB,OAAO,CAACU,GAAG,CAAC,4BAA4BuE,WAAW,KAAK9I,IAAI,CAACiF,MAAM,KAAKjF,IAAI,CAACuG,IAAI,EAAE,CAAC;;IAEpF;IACA,MAAMwC,cAAc,GAAGzE,cAAc,CAAC0E,IAAI,CAAC1D,OAAO,IAChDA,OAAO,CAAC5C,IAAI,KAAKoG,WAAW,KAC3BxD,OAAO,CAACS,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,IAAIjB,OAAO,CAACU,QAAQ,KAAKhG,IAAI,CAACuG,IAAI,CAAC,IAClE,CAACjB,OAAO,CAACC,MACX,CAAC;IAED,IAAIwD,cAAc,EAAE;MAClB,OAAO;QACL/C,QAAQ,EAAE+C,cAAc,CAAChD,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,GAAGwC,cAAc,CAAC/C,QAAQ,GAAG+C,cAAc,CAAChD,QAAQ;QACnGmD,IAAI,EAAE,QAAQ;QACd5D,OAAO,EAAEyD,cAAc;QACvBc,MAAM,EAAEd,cAAc,CAAChD,QAAQ,KAAK/F,IAAI,CAACuG;MAC3C,CAAC;IACH;;IAEA;IACA,MAAMuD,QAAQ,GAAGhB,WAAW,GAAG,CAAC;IAChC,MAAMiB,WAAW,GAAGzF,cAAc,CAAC0E,IAAI,CAAC1D,OAAO,IAC7CA,OAAO,CAAC5C,IAAI,KAAKoH,QAAQ,KACxBxE,OAAO,CAACS,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,IAAIjB,OAAO,CAACU,QAAQ,KAAKhG,IAAI,CAACuG,IAAI,CAAC,IAClE,CAACjB,OAAO,CAACC,MACX,CAAC;IAED,IAAIwE,WAAW,EAAE;MACf,OAAO;QACL/D,QAAQ,EAAE+D,WAAW,CAAChE,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,GAAGwD,WAAW,CAAC/D,QAAQ,GAAG+D,WAAW,CAAChE,QAAQ;QAC1FmD,IAAI,EAAE,QAAQ;QACd5D,OAAO,EAAEyE,WAAW;QACpBF,MAAM,EAAEE,WAAW,CAAChE,QAAQ,KAAK/F,IAAI,CAACuG;MACxC,CAAC;IACH;IAEA,OAAO,IAAI;EACb,CAAC;;EAED;EACAzI,SAAS,CAAC,MAAM;IACd,IAAI0E,QAAQ,CAACG,GAAG,KAAK,YAAY,IAAI,CAACL,YAAY,EAAE;MAClD;MACA,IAAIE,QAAQ,CAACE,IAAI,IAAI,CAAC,EAAE;QACtB,MAAMsH,QAAQ,GAAGnB,mBAAmB,CAAC,CAAC;QACtCtG,eAAe,CAACyH,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACL;QACA,MAAMC,YAAY,GAAGL,iBAAiB,CAAC,CAAC;QACxC,IAAIK,YAAY,EAAE;UAChB1H,eAAe,CAAC0H,YAAY,CAAC;QAC/B,CAAC,MAAM;UACL;UACApG,OAAO,CAACU,GAAG,CAAC,mCAAmC,CAAC;QAClD;MACF;IACF;EACF,CAAC,EAAE,CAAC/B,QAAQ,CAACG,GAAG,CAAC,CAAC;;EAElB;EACA7E,SAAS,CAAC,MAAM;IACd,IAAIkC,IAAI,EAAE;MACR,IAAIwC,QAAQ,CAACG,GAAG,KAAK,YAAY,EAAE;QACjC3C,IAAI,CAACkK,MAAM,GAAG,SAAS1H,QAAQ,CAACE,IAAI,OAAO;MAC7C,CAAC,MAAM,IAAIF,QAAQ,CAACG,GAAG,KAAK,WAAW,EAAE;QACvC3C,IAAI,CAACkK,MAAM,GAAG,SAAS1H,QAAQ,CAACE,IAAI,MAAM;MAC5C,CAAC,MAAM,IAAIF,QAAQ,CAACG,GAAG,KAAK,YAAY,EAAE;QACxC3C,IAAI,CAACkK,MAAM,GAAG,SAAS1H,QAAQ,CAACE,IAAI,OAAO;MAC7C;IACF;EACF,CAAC,EAAE,CAACF,QAAQ,EAAExC,IAAI,CAAC,CAAC;;EAEpB;EACAlC,SAAS,CAAC,MAAM;IACd,IAAIkC,IAAI,IAAI+H,iBAAiB,CAAC1D,MAAM,KAAK,CAAC,EAAE;MAC1C;MACA,MAAM4D,QAAQ,GAAG,EAAE;MACnBjE,MAAM,CAACkE,MAAM,CAAC1E,cAAc,CAAC,CAACU,OAAO,CAACe,MAAM,IAAI;QAC9CA,MAAM,CAACf,OAAO,CAACmC,IAAI,IAAI;UACrB,IAAIA,IAAI,CAACE,IAAI,KAAKvG,IAAI,CAACuG,IAAI,EAAE;YAC3B0B,QAAQ,CAACE,IAAI,CAAC9B,IAAI,CAACE,IAAI,CAAC;UAC1B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAM6B,WAAW,GAAG,EAAE;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,WAAW,GAAG9D,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAGP,QAAQ,CAAC5D,MAAM,CAAC;QAC/D+D,WAAW,CAACD,IAAI,CAACF,QAAQ,CAACK,WAAW,CAAC,CAAC;QACvCL,QAAQ,CAACQ,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC;MACjC;MAEAN,oBAAoB,CAAC,CACnB;QAAEjC,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,EAC3H;QAAEqD,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,EAC3H;QAAEqD,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;QAAEP,QAAQ,EAAEoC,WAAW,CAAC,CAAC,CAAC;QAAEO,QAAQ,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAE,IAAI;QAAElJ,MAAM,EAAE,IAAI;QAAE6F,MAAM,EAAE,KAAK;QAAE7C,IAAI,EAAE;MAAK,CAAC,CAC5H,CAAC;IACJ;EACF,CAAC,EAAE,CAAC1C,IAAI,EAAE+H,iBAAiB,CAAC1D,MAAM,CAAC,CAAC;EAEpC,MAAM8F,eAAe,GAAGA,CAACC,SAAS,EAAEC,KAAK,EAAEC,SAAS,KAAK;IACvD;IACA,MAAMC,QAAQ,GAAG;MAAE,GAAGvD;IAAe,CAAC;IACtCuD,QAAQ,CAACH,SAAS,CAAC,CAACC,KAAK,CAAC,GAAG;MAC3B9D,IAAI,EAAE+D,SAAS;MACfnD,MAAM,EAAEmD,SAAS,CAACrE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClCmB,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAC;IACDJ,iBAAiB,CAACsD,QAAQ,CAAC;;IAE3B;IACA,MAAMC,cAAc,GAAG;MAAE,GAAGtH;IAAgB,CAAC;IAC7C,IAAIkH,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,QAAQ,EAAE;MACvDI,cAAc,CAACC,UAAU,GAAGjG,IAAI,CAACkG,GAAG,CAAC,GAAG,EAAEF,cAAc,CAACC,UAAU,GAAG,CAAC,CAAC;IAC1E,CAAC,MAAM,IAAIL,SAAS,KAAK,OAAO,EAAE;MAChCI,cAAc,CAACG,SAAS,GAAGnG,IAAI,CAACkG,GAAG,CAAC,GAAG,EAAEF,cAAc,CAACG,SAAS,GAAG,CAAC,CAAC;IACxE,CAAC,MAAM,IAAIP,SAAS,KAAK,OAAO,EAAE;MAChCI,cAAc,CAACI,QAAQ,GAAGpG,IAAI,CAACkG,GAAG,CAAC,GAAG,EAAEF,cAAc,CAACI,QAAQ,GAAG,CAAC,CAAC;IACtE;IACAzH,kBAAkB,CAACqH,cAAc,CAAC;EACpC,CAAC;EAED,MAAMK,qBAAqB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IACnD;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGhL;IAAK,CAAC;IAC/BgL,WAAW,CAACC,KAAK,IAAIH,OAAO;IAC5BE,WAAW,CAACE,SAAS,GAAGH,QAAQ;IAChC9K,OAAO,CAAC+K,WAAW,CAAC;EACtB,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAACL,OAAO,EAAEC,QAAQ,KAAK;IAChD;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGhL;IAAK,CAAC;IAC/BgL,WAAW,CAACC,KAAK,IAAIH,OAAO;IAC5BE,WAAW,CAACI,OAAO,GAAGL,QAAQ;IAC9B9K,OAAO,CAAC+K,WAAW,CAAC;EACtB,CAAC;;EAED;EACA,IAAIpK,iBAAiB,IAAI,CAACZ,IAAI,EAAE;IAC9B,oBAAOR,OAAA,CAAChB,aAAa;MAAC6M,YAAY,EAAE5D;IAAiB;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1D;EAEA,IAAI3K,oBAAoB,EAAE;IACxB,oBACEtB,OAAA,CAACf,qBAAqB;MACpBsC,uBAAuB,EAAEA,uBAAwB;MACjD2K,eAAe,EAAE7D,mBAAoB;MACrC1D,UAAU,EAAEnE,IAAI,CAACiF,MAAO;MACxB0G,SAAS,EAAE3L,IAAI,CAAC4L;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAEN;EAEA,oBACEjM,OAAA;IAAKqM,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtM,OAAA;MAAKqM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBtM,OAAA;QAAKqM,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAiB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDjM,OAAA;QAAKqM,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE9L,IAAI,CAACuG;MAAI;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CjM,OAAA;QAAKqM,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAE9L,IAAI,CAAC+L,MAAM,EAAC,aAAe,EAAC/L,IAAI,CAACiF,MAAM,EAAC,aAAe,EAACjF,IAAI,CAACgM,IAAI;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC,eAENjM,OAAA;MAAKqM,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBtM,OAAA;QAAQqM,SAAS,EAAC,eAAe;QAACI,OAAO,EAAEA,CAAA,KAAM9L,cAAc,CAAC,IAAI,CAAE;QAAA2L,QAAA,GAAC,SAC9D,eAAAtM,OAAA;UAAMqM,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAE9L,IAAI,CAACkK;QAAM;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACTjM,OAAA;QAAQqM,SAAS,EAAC,eAAe;QAACI,OAAO,EAAEA,CAAA,KAAM5L,gBAAgB,CAAC,IAAI,CAAE;QAAAyL,QAAA,GAAC,UACpE,eAAAtM,OAAA;UAAMqM,SAAS,EAAC,KAAK;UAAAC,QAAA,GAAE9G,8BAA8B,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAsG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACTjM,OAAA;QAAQqM,SAAS,EAAC,eAAe;QAACI,OAAO,EAAEA,CAAA,KAAM1L,cAAc,CAAC,IAAI,CAAE;QAAAuL,QAAA,GAAC,MACjE,eAAAtM,OAAA;UAAMqM,SAAS,EAAC,KAAK;UAACK,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAa,CAAE;UAAAL,QAAA,EAAE,IAAIM,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;YAAEH,KAAK,EAAE,UAAU;YAAEI,QAAQ,EAAE,KAAK;YAAEC,qBAAqB,EAAE;UAAE,CAAC,CAAC,CAACC,MAAM,CAACxM,IAAI,CAACiL,KAAK;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELvL,WAAW,iBAAIV,OAAA,CAAClB,YAAY;MAC3B6B,cAAc,EAAEA,cAAe;MAC/BH,IAAI,EAAEA,IAAK;MACX+H,iBAAiB,EAAEA,iBAAkB;MACrCzE,WAAW,EAAEA,WAAY;MACzBmJ,WAAW,EAAGhH,QAAQ,IAAK;QACzBpC,uBAAuB,CAACoC,QAAQ,CAAC;QACjChF,YAAY,CAAC,IAAI,CAAC;MACpB;IAAE;MAAA6K,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDrL,aAAa,iBAAIZ,OAAA,CAACnB,cAAc;MAC/BgC,gBAAgB,EAAEA,gBAAiB;MACnCL,IAAI,EAAEA,IAAK;MACXsD,WAAW,EAAEA,WAAY;MACzBE,cAAc,EAAEA,cAAe;MAC/BiJ,WAAW,EAAGhH,QAAQ,IAAK;QACzBpC,uBAAuB,CAACoC,QAAQ,CAAC;QACjChF,YAAY,CAAC,IAAI,CAAC;MACpB;IAAE;MAAA6K,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDnL,WAAW,iBAAId,OAAA,CAACpB,YAAY;MAACmC,cAAc,EAAEA,cAAe;MAACP,IAAI,EAAEA;IAAK;MAAAsL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3EjL,SAAS,iBAAIhB,OAAA,CAACjB,UAAU;MACvBkC,YAAY,EAAEA,YAAa;MAC3BT,IAAI,EAAEA,IAAK;MACX0H,YAAY,EAAEtE,oBAAqB;MACnCwB,WAAW,EAAEA;IAAY;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDzK,iBAAiB,iBAAIxB,OAAA,CAACd,kBAAkB;MACvCuC,oBAAoB,EAAEA,oBAAqB;MAC3CiC,eAAe,EAAEA,eAAgB;MACjC8D,cAAc,EAAEA,cAAe;MAC/B0F,WAAW,EAAEvC;IAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACDvK,sBAAsB,iBAAI1B,OAAA,CAACb,uBAAuB;MACjDwC,yBAAyB,EAAEA,yBAA0B;MACrDnB,IAAI,EAAEA,IAAK;MACX2M,SAAS,EAAE9B;IAAsB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACDrK,mBAAmB,iBAAI5B,OAAA,CAACZ,oBAAoB;MAC3CyC,sBAAsB,EAAEA,sBAAuB;MAC/CrB,IAAI,EAAEA,IAAK;MACX2M,SAAS,EAAExB,kBAAmB;MAC9ByB,gBAAgB,EAAEA,CAAA,KAAMrL,iBAAiB,CAAC,IAAI;IAAE;MAAA+J,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EACDnK,cAAc,iBAAI9B,OAAA,CAACX,eAAe;MACjC0C,iBAAiB,EAAEA,iBAAkB;MACrCvB,IAAI,EAAEA;IAAK;MAAAsL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACDjK,mBAAmB,iBAAIhC,OAAA,CAACV,oBAAoB;MAC3C2C,sBAAsB,EAAEA,sBAAuB;MAC/CzB,IAAI,EAAEA,IAAK;MACXwD,cAAc,EAAEA;IAAe;MAAA8H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACD/J,WAAW,iBAAIlC,OAAA,CAACT,YAAY;MAC3B4C,cAAc,EAAEA,cAAe;MAC/BkL,gBAAgB,EAAEA,CAAA,KAAM9K,wBAAwB,CAAC,IAAI,CAAE;MACvD+K,oBAAoB,EAAGC,OAAO,IAAK;QACjC5K,kBAAkB,CAAC4K,OAAO,CAAC;QAC3B9K,qBAAqB,CAAC,IAAI,CAAC;MAC7B,CAAE;MACF+K,sBAAsB,EAAEA,CAAA,KAAMnL,uBAAuB,CAAC,IAAI;IAAE;MAAAyJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACD7J,oBAAoB,iBAAIpC,OAAA,CAACR,qBAAqB;MAC7C6C,uBAAuB,EAAEA,uBAAwB;MACjD7B,IAAI,EAAEA,IAAK;MACXiN,aAAa,EAAEA,CAAA,KAAMtL,cAAc,CAAC,IAAI;IAAE;MAAA2J,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACD3J,qBAAqB,iBAAItC,OAAA,CAACP,sBAAsB;MAC/C8C,wBAAwB,EAAEA,wBAAyB;MACnDkL,aAAa,EAAEA,CAAA,KAAMtL,cAAc,CAAC,IAAI;IAAE;MAAA2J,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACDzJ,kBAAkB,IAAIE,eAAe,iBAAI1C,OAAA,CAACN,mBAAmB;MAC5D+C,qBAAqB,EAAEA,qBAAsB;MAC7CC,eAAe,EAAEA,eAAgB;MACjClC,IAAI,EAAEA;IAAK;MAAAsL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACDrJ,aAAa,IAAIE,YAAY,iBAAI9C,OAAA,CAACL,cAAc;MAC/CkD,gBAAgB,EAAEA,gBAAiB;MACnCrC,IAAI,EAAEA,IAAK;MACXkN,SAAS,EAAE5K,YAAa;MACd6K,UAAU,EAAGzN,MAAM,IAAK;QAC9BmE,OAAO,CAACU,GAAG,CAAC,aAAa,EAAE7E,MAAM,CAAC;;QAElC;QACA,IAAIA,MAAM,CAAC0N,MAAM,EAAE;UACjB,MAAMC,cAAc,GAAG;YAAE,GAAGzI;UAAY,CAAC;UAEzClF,MAAM,CAAC0N,MAAM,CAAClJ,OAAO,CAACoJ,KAAK,IAAI;YAC7B,IAAIA,KAAK,CAACC,MAAM,EAAE;cAChB,IAAI,CAACF,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,EAAE;gBACjCF,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,GAAG;kBAC7BC,KAAK,EAAE,CAAC;kBACRC,OAAO,EAAE,CAAC;kBACVC,WAAW,EAAE,CAAC;kBACdC,QAAQ,EAAE,CAAC;kBACXC,QAAQ,EAAE;gBACZ,CAAC;cACH;;cAEA;cACA,IAAItL,YAAY,CAAC4G,IAAI,KAAK,UAAU,EAAE;gBACpC,IAAIoE,KAAK,CAACpE,IAAI,KAAK,QAAQ,EAAE;kBAC3B,MAAM2E,UAAU,GAAGrJ,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;kBACvD6E,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACK,QAAQ,CAACzF,IAAI,CAAC;oBACzCe,IAAI,EAAEoE,KAAK,CAACQ,UAAU,IAAI,UAAU;oBACpCD,UAAU,EAAEA,UAAU;oBACtBnL,IAAI,EAAEF,QAAQ,CAACE;kBACjB,CAAC,CAAC;gBACJ;cACF,CAAC,MAAM;gBACL;gBACA,QAAQ4K,KAAK,CAACpE,IAAI;kBAChB,KAAK,MAAM;oBACTmE,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAE;oBACpC;kBACF,KAAK,QAAQ;oBACXH,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACE,OAAO,EAAE;oBACtC;kBACF,KAAK,QAAQ;oBACXJ,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACG,WAAW,EAAE;oBAC1C;kBACF,KAAK,KAAK;oBACRL,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACI,QAAQ,EAAE;oBACvC;kBACF,KAAK,QAAQ;oBAAE;sBACb,MAAME,UAAU,GAAGrJ,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;sBACvD6E,cAAc,CAACC,KAAK,CAACC,MAAM,CAAC,CAACK,QAAQ,CAACzF,IAAI,CAAC;wBACzCe,IAAI,EAAEoE,KAAK,CAACQ,UAAU,IAAI,UAAU;wBACpCD,UAAU,EAAEA,UAAU;wBACtBnL,IAAI,EAAEF,QAAQ,CAACE;sBACjB,CAAC,CAAC;sBACF;oBACF;gBACF;cACF;YACF;UACF,CAAC,CAAC;UAEFmC,cAAc,CAACwI,cAAc,CAAC;QAChC;;QAEA;QACA,IAAI/K,YAAY,CAAC4G,IAAI,KAAK,QAAQ,IAAI5G,YAAY,CAACgD,OAAO,EAAE;UAC1D;UACA,MAAMwD,WAAW,GAAGtG,QAAQ,CAACE,IAAI,GAAG,CAAC;UACrC,MAAM4B,cAAc,GAAGhB,WAAW,CAACtD,IAAI,CAACiF,MAAM,CAAC,IAAI,EAAE;UACrD,MAAM8I,eAAe,GAAGzJ,cAAc,CAAC0E,IAAI,CAACrE,CAAC,IAC3CA,CAAC,CAACjC,IAAI,KAAKoG,WAAW,KACpBnE,CAAC,CAACoB,QAAQ,KAAK/F,IAAI,CAACuG,IAAI,IAAI5B,CAAC,CAACqB,QAAQ,KAAK1D,YAAY,CAAC0D,QAAQ,IAChErB,CAAC,CAACqB,QAAQ,KAAKhG,IAAI,CAACuG,IAAI,IAAI5B,CAAC,CAACoB,QAAQ,KAAKzD,YAAY,CAAC0D,QAAS,CACrE,CAAC;UAED,IAAI+H,eAAe,EAAE;YACnB;YACA,IAAIzL,YAAY,CAACuH,MAAM,EAAE;cACvB;cACAkE,eAAe,CAACrO,MAAM,GAAG,GAAGA,MAAM,CAACC,SAAS,IAAID,MAAM,CAACG,SAAS,EAAE;YACpE,CAAC,MAAM;cACL;cACAkO,eAAe,CAACrO,MAAM,GAAG,GAAGA,MAAM,CAACG,SAAS,IAAIH,MAAM,CAACC,SAAS,EAAE;YACpE;YACAoO,eAAe,CAACxI,MAAM,GAAG,IAAI;YAC7B1B,OAAO,CAACU,GAAG,CAAC,sCAAsC,EAAEwJ,eAAe,CAAC;UACtE;;UAEA;;UAEA;UACAhH,wBAAwB,CAAC,CAAC;QAC5B,CAAC,MAAM,IAAIzE,YAAY,CAAC4G,IAAI,KAAK,UAAU,IAAI5G,YAAY,CAACgD,OAAO,EAAE;UACnE;UACA,MAAMwD,WAAW,GAAGtG,QAAQ,CAACE,IAAI;;UAEjC;UACA,IAAIqL,eAAe,GAAG,IAAI;UAE1BlK,OAAO,CAACU,GAAG,CAAC,8BAA8B,EAAE;YAAEuE,WAAW;YAAE9C,QAAQ,EAAE1D,YAAY,CAAC0D;UAAS,CAAC,CAAC;UAC7FnC,OAAO,CAACU,GAAG,CAAC,uBAAuB,EAAEjC,YAAY,CAACgD,OAAO,CAAC;;UAE1D;UACA,IAAIhD,YAAY,CAACgD,OAAO,EAAE;YACxByI,eAAe,GAAGhG,iBAAiB,CAACiB,IAAI,CAAC1D,OAAO,IAC9CA,OAAO,KAAKhD,YAAY,CAACgD,OAC3B,CAAC;YACDzB,OAAO,CAACU,GAAG,CAAC,gCAAgC,EAAEwJ,eAAe,CAAC;UAChE;;UAEA;UACA,IAAI,CAACA,eAAe,EAAE;YACpBA,eAAe,GAAGhG,iBAAiB,CAACiB,IAAI,CAAC1D,OAAO,IAC9Cd,IAAI,CAACyE,GAAG,CAAC3D,OAAO,CAACqD,QAAQ,CAAC,KAAKG,WAAW,IAAIxD,OAAO,CAACU,QAAQ,KAAK1D,YAAY,CAAC0D,QAClF,CAAC;YACDnC,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAEwJ,eAAe,CAAC;UACjE;;UAEA;UACA,IAAI,CAACA,eAAe,EAAE;YACpBA,eAAe,GAAGhG,iBAAiB,CAACiB,IAAI,CAAC1D,OAAO,IAC9CA,OAAO,CAACU,QAAQ,KAAK1D,YAAY,CAAC0D,QAAQ,IAAI,CAACV,OAAO,CAACC,MACzD,CAAC;YACD1B,OAAO,CAACU,GAAG,CAAC,+BAA+B,EAAEwJ,eAAe,CAAC;UAC/D;UAEA,IAAIA,eAAe,EAAE;YACnBA,eAAe,CAACrO,MAAM,GAAG,GAAGA,MAAM,CAACC,SAAS,IAAID,MAAM,CAACG,SAAS,EAAE;YAClEkO,eAAe,CAACxI,MAAM,GAAG,IAAI;YAC7ByC,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC9ClE,OAAO,CAACU,GAAG,CAAC,2CAA2C,EAAEwJ,eAAe,CAAC;UAC3E,CAAC,MAAM;YACLlK,OAAO,CAACU,GAAG,CAAC,2BAA2B,EAAE;cAAEuE,WAAW;cAAE9C,QAAQ,EAAE1D,YAAY,CAAC0D;YAAS,CAAC,CAAC;YAC1FnC,OAAO,CAACU,GAAG,CAAC,0BAA0B,EAAEwD,iBAAiB,CAAC;UAC5D;QACF,CAAC,MAAM,IAAIzF,YAAY,CAAC4G,IAAI,KAAK,UAAU,EAAE;UAC3C;UACArF,OAAO,CAACU,GAAG,CAAC,0CAA0C,CAAC;QACzD;;QAEA;QACA,MAAMyJ,WAAW,GAAG;UAClBjI,QAAQ,EAAE/F,IAAI,CAACuG,IAAI;UACnBP,QAAQ,EAAE1D,YAAY,CAAC0D,QAAQ;UAC/BrG,SAAS,EAAED,MAAM,CAACC,SAAS;UAC3BE,SAAS,EAAEH,MAAM,CAACG,SAAS;UAC3BqJ,IAAI,EAAE5G,YAAY,CAAC4G,IAAI;UACvBxG,IAAI,EAAEF,QAAQ,CAACE;QACjB,CAAC;QAED1C,IAAI,CAACiO,YAAY,CAAC9F,IAAI,CAAC6F,WAAW,CAAC;;QAEnC;QACA,MAAME,SAAS,GAAG5L,YAAY,CAAC4G,IAAI;QACnC3G,eAAe,CAAC,IAAI,CAAC;;QAErB;QACA,IAAI2L,SAAS,KAAK,QAAQ,EAAE;UAC1B;UACAC,UAAU,CAAC,MAAM;YACf;YACA,MAAMC,SAAS,GAAG5L,QAAQ,CAACE,IAAI,GAAG,CAAC,CAAC,CAAC;YACrCG,mBAAmB,CAAC,IAAI,CAAC;YACzB;YACAkC,mBAAmB,CAACqJ,SAAS,CAAC;UAChC,CAAC,EAAE,GAAG,CAAC;QACT;;QAEA;QACA,IAAI5L,QAAQ,CAACG,GAAG,KAAK,YAAY,EAAE;UACjC;UACA,MAAMqI,WAAW,GAAG9M,WAAW,CAAC8B,IAAI,CAAC;UACrCC,OAAO,CAAC+K,WAAW,CAAC;UACpBvI,WAAW,CAAC;YAAEC,IAAI,EAAEsI,WAAW,CAACxI,QAAQ,CAACE,IAAI;YAAEC,GAAG,EAAE;UAAa,CAAC,CAAC;;UAEnE;UACAM,mBAAmB,CAAC,IAAI,CAAC;QAC3B;MACF;IAAE;MAAAqI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACD7I,gBAAgB,iBAAIpD,OAAA,CAACJ,iBAAiB;MACrCyD,mBAAmB,EAAEA,mBAAoB;MACzC7C,IAAI,EAAEA,IAAK;MACXsD,WAAW,EAAEA,WAAY;MACzBd,QAAQ,EAAEA,QAAS;MACnBsC,gBAAgB,EAAEA;IAAiB;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACD3I,eAAe,iBAAItD,OAAA,CAACH,gBAAgB;MACnC0D,kBAAkB,EAAEA,kBAAmB;MACvC/C,IAAI,EAAEA,IAAK;MACX4E,WAAW,EAAEA;IAAY;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDzI,gBAAgB,iBAAIxD,OAAA,CAACF,iBAAiB;MACrC2D,mBAAmB,EAAEA,mBAAoB;MACzCjD,IAAI,EAAEA;IAAK;MAAAsL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAEFjM,OAAA;MAAKqM,SAAS,EAAC,SAAS;MAACK,KAAK,EAAE;QAAEmC,SAAS,EAAE;MAAO,CAAE;MAAAvC,QAAA,gBACpDtM,OAAA;QAAQqM,SAAS,EAAC,cAAc;QAACI,OAAO,EAAEA,CAAA,KAAMxL,YAAY,CAAC,IAAI,CAAE;QAACyL,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAAC,OAC3F,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAAC,CAAC,MAAM;UAChB,MAAM8C,UAAU,GAAG,CAAC,GAAGvO,IAAI,CAACwO,KAAK,CAACC,SAAS,EAAE,GAAGzO,IAAI,CAACwO,KAAK,CAACE,WAAW,CAAC;UACvE,MAAMC,WAAW,GAAGJ,UAAU,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEtB,MAAM,KAAKsB,GAAG,GAAGtB,MAAM,CAACuB,MAAM,EAAE,CAAC,CAAC;UAC9E,OAAOtK,IAAI,CAACuK,KAAK,CAACJ,WAAW,GAAGJ,UAAU,CAAClK,MAAM,CAAC;QACpD,CAAC,EAAE,CAAC;MAAA;QAAAiH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACTjM,OAAA;QAAQqM,SAAS,EAAC,cAAc;QAACI,OAAO,EAAEA,CAAA,KAAMlJ,kBAAkB,CAAC,IAAI,CAAE;QAACmJ,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAAC,2BAC5F,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBACjB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjM,OAAA;QACEqM,SAAS,EAAC,cAAc;QACxBI,OAAO,EAAEA,CAAA,KAAMhL,oBAAoB,CAAC,IAAI,CAAE;QAC1CiL,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAC9B,SACQ,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAACvI,eAAe,GAAGA,eAAe,CAACqD,IAAI,GAAGvG,IAAI,CAACgP,OAAO;MAAA;QAAA1D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACTjM,OAAA;QACEqM,SAAS,EAAC,cAAc;QACxBI,OAAO,EAAEA,CAAA,KAAM9K,yBAAyB,CAAC,IAAI,CAAE;QAC/C+K,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAC9B,WACU,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAACzL,IAAI,CAACkL,SAAS;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACTjM,OAAA;QACEqM,SAAS,EAAC,cAAc;QACxBI,OAAO,EAAEA,CAAA,KAAM5K,sBAAsB,CAAC,IAAI,CAAE;QAC5C6K,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAC9B,SACQ,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAACzL,IAAI,CAACoL,OAAO;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAIUjM,OAAA;MAAKqM,SAAS,EAAC,SAAS;MAACK,KAAK,EAAE;QAAEmC,SAAS,EAAE;MAAO,CAAE;MAAAvC,QAAA,gBAC1DtM,OAAA;QACEqM,SAAS,EAAC,eAAe;QACzBI,OAAO,EAAEA,CAAA,KAAMxK,sBAAsB,CAAC,IAAI,CAAE;QAC5CyK,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAC9B,uBACsB,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAAAjM,OAAA;UAAM0M,KAAK,EAAE;YAAC+C,QAAQ,EAAE;UAAO,CAAE;UAAAnD,QAAA,GAAE9L,IAAI,CAACkP,aAAa,EAAC,WAAS,eAAA1P,OAAA;YAAA8L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAACzL,IAAI,CAACmP,WAAW,EAAC,eAAQ;QAAA;UAAA7D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzH,CAAC,eACTjM,OAAA;QACEqM,SAAS,EAAC,eAAe;QACzBI,OAAO,EAAEA,CAAA,KAAMtK,cAAc,CAAC,IAAI,CAAE;QACpCuK,KAAK,EAAE;UAAEoC,MAAM,EAAE;QAAU,CAAE;QAAAxC,QAAA,GAC9B,SACQ,eAAAtM,OAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAAAjM,OAAA;UAAM0M,KAAK,EAAE;YAAC+C,QAAQ,EAAE;UAAO,CAAE;UAAAnD,QAAA,EAAC;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjM,OAAA;MAAK0M,KAAK,EAAE;QAAEmC,SAAS,EAAE,MAAM;QAAEe,SAAS,EAAE;MAAS,CAAE;MAAAtD,QAAA,eACrDtM,OAAA;QACEqM,SAAS,EAAC,eAAe;QACzBI,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI3J,YAAY,EAAE;YAChBD,gBAAgB,CAAC,IAAI,CAAC;UACxB,CAAC,MAAM;YACL;YACA,MAAM2I,WAAW,GAAG9M,WAAW,CAAC8B,IAAI,CAAC;YACrCC,OAAO,CAAC+K,WAAW,CAAC;YACpBvI,WAAW,CAACuI,WAAW,CAACxI,QAAQ,CAAC;UACnC;QACF,CAAE;QACF0J,KAAK,EAAE;UACLoC,MAAM,EAAE,SAAS;UACjBe,UAAU,EAAE/M,YAAY,GAAG,YAAY,GAAG,cAAc;UACxD6J,KAAK,EAAE,OAAO;UACd8C,QAAQ,EAAE,MAAM;UAChBK,UAAU,EAAE,MAAM;UAClBC,OAAO,EAAE,WAAW;UACpBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE;QACV,CAAE;QAAA3D,QAAA,EAEDxJ,YAAY,GAAG,GAAGA,YAAY,CAAC0D,QAAQ,EAAE,GAAG;MAAU;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEhBjM,OAAA;MAAKqM,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrB9L,IAAI,CAACiO,YAAY,CAAC5J,MAAM,GAAG,CAAC,GAC3BrE,IAAI,CAACiO,YAAY,CAACvJ,GAAG,CAAC,CAAChF,MAAM,EAAEgQ,GAAG,kBAChClQ,OAAA;QAAeqM,SAAS,EAAC,QAAQ;QAACK,KAAK,EAAE;UAAEmD,UAAU,EAAE5P,cAAc,CAACC,MAAM;QAAE,CAAE;QAAAoM,QAAA,EAC7E,OAAOpM,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,GAAGA,MAAM,CAACC,SAAS,IAAID,MAAM,CAACG,SAAS;MAAE,GADxE6P,GAAG;QAAApE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN,CAAC,gBAEFjM,OAAA;QAAK0M,KAAK,EAAE;UAAEkD,SAAS,EAAE,QAAQ;UAAEjD,KAAK,EAAE,MAAM;UAAE8C,QAAQ,EAAE;QAAO,CAAE;QAAAnD,QAAA,EAAC;MAEtE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAML/K,gBAAgB,iBACflB,OAAA;MAAKqM,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCtM,OAAA,CAACzB,YAAY;QAAC4C,mBAAmB,EAAEA;MAAoB;QAAA2K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DjM,OAAA;QACEqM,SAAS,EAAC,QAAQ;QAClBK,KAAK,EAAE;UAAEyD,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAER,UAAU,EAAE;QAAM,CAAE;QAC/EpD,OAAO,EAAEA,CAAA,KAAMtL,mBAAmB,CAAC,KAAK,CAAE;QAAAmL,QAAA,EAC3C;MAED;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1L,EAAA,CA14BQD,GAAG;AAAAgQ,EAAA,GAAHhQ,GAAG;AA44BZ,eAAeA,GAAG;AAAC,IAAAgQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}