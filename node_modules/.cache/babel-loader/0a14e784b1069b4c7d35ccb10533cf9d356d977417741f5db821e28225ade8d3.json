{"ast":null,"code":"import { generateAllSquads } from './data/squadGenerator';\nimport { generateAllYouthSquads } from './data/youthSquadGenerator';\nimport { generateManager as generateManagerCSV } from './data/managerData';\n\n// CSV'den takım verilerini dinamik olarak yükle\nexport const loadTurkishLeaguesFromCSV = async () => {\n  try {\n    const response = await fetch('/turkish_leagues_with_values.csv');\n    const csvText = await response.text();\n    const lines = csvText.split('\\n').slice(1); // İlk satırı atla (başlık)\n\n    const leagues = {\n      'Süper Lig': [],\n      '1. Lig': [],\n      '2. Lig Beyaz': [],\n      '2. Lig Kırmızı': []\n    };\n    let position = 1;\n    let currentLeague = '';\n    for (const line of lines) {\n      if (line.trim()) {\n        const [takim, lig, deger] = line.split(',').map(item => item.trim());\n        if (lig && leagues[lig]) {\n          // Yeni lig başladığında pozisyonu sıfırla\n          if (currentLeague !== lig) {\n            currentLeague = lig;\n            position = 1;\n          }\n          leagues[lig].push({\n            name: takim,\n            value: parseFloat(deger),\n            position: position++\n          });\n        }\n      }\n    }\n    console.log('CSV\\'den takım verileri yüklendi:', leagues);\n    return leagues;\n  } catch (error) {\n    console.error('CSV okuma hatası:', error);\n    throw error; // Hatayı fırlat, varsayılan veri döndürme\n  }\n};\n\n// Turkish leagues objesi - CSV'den yüklenecek\nexport let turkishLeagues = {};\n\n// Yükleme durumunu takip etmek için promise\nlet leaguesLoadPromise = null;\n\n// CSV'den verileri yükle ve turkishLeagues'i güncelle\nconst initializeTurkishLeagues = async () => {\n  if (leaguesLoadPromise) {\n    return leaguesLoadPromise;\n  }\n  leaguesLoadPromise = (async () => {\n    try {\n      turkishLeagues = await loadTurkishLeaguesFromCSV();\n      console.log('Turkish leagues başarıyla yüklendi');\n      return turkishLeagues;\n    } catch (error) {\n      console.error('Turkish leagues yüklenemedi:', error);\n      turkishLeagues = {};\n      throw error;\n    }\n  })();\n  return leaguesLoadPromise;\n};\n\n// Başlangıçta yükle\ninitializeTurkishLeagues();\n\n// Tüm takımların kadrolarını oluştur\nexport let allSquads = {};\n\n// Kadroları async olarak yükle\nconst initializeSquads = async () => {\n  try {\n    // Turkish leagues yüklenene kadar bekle\n    await initializeTurkishLeagues();\n    allSquads = await generateAllSquads(turkishLeagues);\n    console.log('Kadrolar yüklendi:', Object.keys(allSquads).map(league => ({\n      league,\n      teams: Object.keys(allSquads[league] || {}),\n      totalTeams: Object.keys(allSquads[league] || {}).length\n    })));\n  } catch (error) {\n    console.error('Kadrolar yüklenemedi:', error);\n  }\n};\n\n// Kadroları başlangıçta yükle\ninitializeSquads();\n\n// Tüm takımların altyapı kadrolarını oluştur\nexport let allYouthSquads = {};\n\n// Altyapı kadrolarını async olarak yükle\nconst initializeYouthSquads = async () => {\n  try {\n    // Turkish leagues yüklenene kadar bekle\n    await initializeTurkishLeagues();\n    allYouthSquads = generateAllYouthSquads(turkishLeagues);\n    console.log('Altyapı kadroları yüklendi');\n  } catch (error) {\n    console.error('Altyapı kadroları yüklenemedi:', error);\n  }\n};\n\n// Altyapı kadrolarını başlangıçta yükle\ninitializeYouthSquads();\n\n// Hazırlık maçları oluşturma fonksiyonu\nexport const generatePreSeasonFixtures = selectedTeam => {\n  // Rastgele takımlar seç\n  const allTeams = [];\n  Object.values(turkishLeagues).forEach(league => {\n    league.forEach(team => {\n      if (team.name !== selectedTeam) {\n        allTeams.push(team.name);\n      }\n    });\n  });\n\n  // 3 rastgele takım seç\n  const randomTeams = [];\n  for (let i = 0; i < 3; i++) {\n    const randomIndex = Math.floor(Math.random() * allTeams.length);\n    randomTeams.push(allTeams[randomIndex]);\n    allTeams.splice(randomIndex, 1);\n  }\n  return [{\n    homeTeam: selectedTeam,\n    awayTeam: randomTeams[0],\n    matchday: -1,\n    isPreSeason: true,\n    result: null,\n    played: false,\n    week: null\n  }, {\n    homeTeam: selectedTeam,\n    awayTeam: randomTeams[1],\n    matchday: -2,\n    isPreSeason: true,\n    result: null,\n    played: false,\n    week: null\n  }, {\n    homeTeam: selectedTeam,\n    awayTeam: randomTeams[2],\n    matchday: -3,\n    isPreSeason: true,\n    result: null,\n    played: false,\n    week: null\n  }];\n};\n\n// Gerçekçi fikstür oluşturma fonksiyonu (çift sayılı takım için)\nexport const generateRealisticFixtures = teams => {\n  const fixtures = [];\n  const teamNames = teams.map(team => team.name);\n  const numTeams = teamNames.length;\n\n  // Tek sayılı takım varsa \"BYE\" ekle\n  if (numTeams % 2 !== 0) {\n    teamNames.push('BYE');\n  }\n  const totalWeeks = numTeams - 1;\n  const teamsCopy = [...teamNames];\n\n  // Berger Table algoritması ile fikstür oluştur\n  for (let round = 0; round < totalWeeks; round++) {\n    const roundFixtures = [];\n\n    // Her hafta için maçları oluştur\n    for (let i = 0; i < Math.floor(numTeams / 2); i++) {\n      const homeIndex = i;\n      const awayIndex = numTeams - 1 - i;\n      const homeTeam = teamsCopy[homeIndex];\n      const awayTeam = teamsCopy[awayIndex];\n\n      // BYE maçlarını atla\n      if (homeTeam !== 'BYE' && awayTeam !== 'BYE') {\n        roundFixtures.push({\n          homeTeam: homeTeam,\n          awayTeam: awayTeam,\n          week: round + 1,\n          result: null,\n          played: false\n        });\n      }\n    }\n    fixtures.push(...roundFixtures);\n\n    // Takımları döndür (Berger Table)\n    const lastTeam = teamsCopy.pop();\n    teamsCopy.splice(1, 0, lastTeam);\n  }\n\n  // İkinci yarı için roller değişti\n  const teamsCopy2 = [...teamNames];\n  for (let round = 0; round < totalWeeks; round++) {\n    const roundFixtures = [];\n    for (let i = 0; i < Math.floor(numTeams / 2); i++) {\n      const homeIndex = i;\n      const awayIndex = numTeams - 1 - i;\n\n      // Roller değişti - ikinci yarıda\n      const homeTeam = teamsCopy2[awayIndex];\n      const awayTeam = teamsCopy2[homeIndex];\n\n      // BYE maçlarını atla\n      if (homeTeam !== 'BYE' && awayTeam !== 'BYE') {\n        roundFixtures.push({\n          homeTeam: homeTeam,\n          awayTeam: awayTeam,\n          week: round + totalWeeks + 1,\n          result: null,\n          played: false\n        });\n      }\n    }\n    fixtures.push(...roundFixtures);\n\n    // Takımları döndür\n    const lastTeam = teamsCopy2.pop();\n    teamsCopy2.splice(1, 0, lastTeam);\n  }\n\n  // Maçları haftaya göre sırala\n  const sortedFixtures = fixtures.sort((a, b) => a.week - b.week);\n\n  // 3 hafta üst üste aynı yerde oynamama kuralını uygula\n  const balancedFixtures = balanceHomeAwayFixtures(sortedFixtures);\n  return balancedFixtures;\n};\n\n// 3 hafta üst üste aynı yerde oynamama kuralını uygulayan fonksiyon\nconst balanceHomeAwayFixtures = fixtures => {\n  const teamHomeAwayCount = {};\n  const balancedFixtures = [...fixtures];\n\n  // Her takım için ev sahibi/deplasman sayısını takip et\n  fixtures.forEach(fixture => {\n    if (!teamHomeAwayCount[fixture.homeTeam]) {\n      teamHomeAwayCount[fixture.homeTeam] = {\n        home: 0,\n        away: 0,\n        lastMatches: []\n      };\n    }\n    if (!teamHomeAwayCount[fixture.awayTeam]) {\n      teamHomeAwayCount[fixture.awayTeam] = {\n        home: 0,\n        away: 0,\n        lastMatches: []\n      };\n    }\n  });\n\n  // Her hafta için kontrol et ve gerekirse düzelt\n  for (let week = 1; week <= Math.max(...fixtures.map(f => f.week)); week++) {\n    const weekFixtures = balancedFixtures.filter(f => f.week === week);\n    weekFixtures.forEach(fixture => {\n      const homeTeam = fixture.homeTeam;\n      const awayTeam = fixture.awayTeam;\n\n      // Her takımın son 3 maçını kontrol et\n      const homeLastMatches = teamHomeAwayCount[homeTeam].lastMatches.slice(-2); // Son 2 maç\n      const awayLastMatches = teamHomeAwayCount[awayTeam].lastMatches.slice(-2); // Son 2 maç\n\n      // Eğer takım son 2 maçını ev sahibi olarak oynadıysa ve bu da 3. ev sahibi maçı olacaksa\n      if (homeLastMatches.filter(match => match === 'home').length >= 2) {\n        // Bu maçı değiştir\n        const temp = fixture.homeTeam;\n        fixture.homeTeam = fixture.awayTeam;\n        fixture.awayTeam = temp;\n      }\n\n      // Eğer takım son 2 maçını deplasman olarak oynadıysa ve bu da 3. deplasman maçı olacaksa\n      if (awayLastMatches.filter(match => match === 'away').length >= 2) {\n        // Bu maçı değiştir\n        const temp = fixture.homeTeam;\n        fixture.homeTeam = fixture.awayTeam;\n        fixture.awayTeam = temp;\n      }\n\n      // Maç sonuçlarını güncelle\n      teamHomeAwayCount[fixture.homeTeam].home++;\n      teamHomeAwayCount[fixture.homeTeam].lastMatches.push('home');\n      teamHomeAwayCount[fixture.awayTeam].away++;\n      teamHomeAwayCount[fixture.awayTeam].lastMatches.push('away');\n\n      // Son 3 maçtan fazlasını tutma\n      if (teamHomeAwayCount[fixture.homeTeam].lastMatches.length > 3) {\n        teamHomeAwayCount[fixture.homeTeam].lastMatches.shift();\n      }\n      if (teamHomeAwayCount[fixture.awayTeam].lastMatches.length > 3) {\n        teamHomeAwayCount[fixture.awayTeam].lastMatches.shift();\n      }\n    });\n  }\n  return balancedFixtures;\n};\n\n// Seçilen takım için varsayılan kulüp verisi\nexport const createClubData = async (selectedTeam, leagueName) => {\n  var _allSquads$leagueName, _allYouthSquads$leagu;\n  const team = turkishLeagues[leagueName].find(t => t.name === selectedTeam);\n  const squad = (_allSquads$leagueName = allSquads[leagueName]) === null || _allSquads$leagueName === void 0 ? void 0 : _allSquads$leagueName[selectedTeam];\n  const youthData = (_allYouthSquads$leagu = allYouthSquads[leagueName]) === null || _allYouthSquads$leagu === void 0 ? void 0 : _allYouthSquads$leagu[selectedTeam];\n\n  // Kadro değerini turkish_leagues_with_values.csv'den al\n  const getTeamValue = teamName => {\n    // CSV'den takım değerini bul\n    const teamValueData = {\n      'Galatasaray': 300.73,\n      'Fenerbahçe': 262.25,\n      'Beşiktaş': 155.05,\n      'Trabzonspor': 84.85,\n      'İstanbul Başakşehir': 61.13,\n      'Samsunspor': 36.93,\n      'Çaykur Rizespor': 34.5,\n      'Antalyaspor': 30.65,\n      'Göztepe': 40.85,\n      'Eyüpspor': 25.15,\n      'Konyaspor': 24.35,\n      'Kocaelispor': 23.05,\n      'Alanyaspor': 24.2,\n      'Gaziantep FK': 20.85,\n      'Kayserispor': 19.85,\n      'Gençlerbirliği': 14.4,\n      'Kasımpaşa': 17.08,\n      'Adana Demirspor': 25.0,\n      'Hatayspor': 18.0,\n      'İstanbulspor': 10.0,\n      'Bodrum FK': 15.05,\n      'Amedspor': 11.87,\n      'Sivasspor': 11.35,\n      'Çorum FK': 8.95,\n      'Manisa FK': 8.58,\n      'Iğdır FK': 7.88,\n      'Erzurumspor FK': 7.43,\n      'Sakaryaspor': 9.0,\n      'Ümraniyespor': 7.0,\n      'Altay': 5.0,\n      'Adanaspor': 5.5,\n      'Ankara Keçiörengücü': 6.0,\n      'Afyonspor': 2.54,\n      'Altınordu': 3.02,\n      'Ankara Demirspor': 2.35,\n      'Ankaraspor': 2.57,\n      'Beyoğlu Yeni Çarşıspor': 2.57,\n      'Bucaspor 1928': 3.77,\n      'Bursaspor': 2.87,\n      'Diyarbekirspor': 2.99,\n      'Ergene Velimeşe': 2.37,\n      'Esenler Erokspor': 3.36,\n      'Hes İlaç Afyonspor': 3.84,\n      'İnegölspor': 3.37,\n      'Boluspor': 6.5,\n      'Bandırmaspor': 7.0,\n      'Tuzlaspor': 4.5,\n      'Giresunspor': 6.5,\n      'Vanspor': 5.5,\n      'Pendikspor': 8.0,\n      '24 Erzincanspor': 2.91,\n      'Adıyaman FK': 2.29,\n      'Arnavutköy Belediyespor': 3.33,\n      'Balıkesirspor': 3.66,\n      'Bayburt Özel İdarespor': 2.64,\n      'Denizlispor': 3.9,\n      'Düzcespor': 2.53,\n      'Etimesgut Belediyespor': 2.45,\n      'Fethiyespor': 2.97,\n      'Isparta 32 Spor': 2.52,\n      'Karacabey Belediyespor': 3.51,\n      'Nazilli Belediyespor': 2.32,\n      'Serik Belediyespor': 3.75,\n      'Somaspor': 2.4,\n      'Şanlıurfaspor': 3.61,\n      'Tarsus İdman Yurdu': 2.1,\n      'Zonguldak Kömürspor': 2.82\n    };\n    return teamValueData[teamName] || 20; // Varsayılan değer\n  };\n\n  // CSV'den tesis seviyesi hesaplama fonksiyonu\n  const getFacilityLevel = async teamName => {\n    try {\n      // turkish_leagues_with_values.csv'den takım değerini al\n      const response = await fetch('/turkish_leagues_with_values.csv');\n      const csvText = await response.text();\n      const lines = csvText.split('\\n').slice(1); // İlk satırı atla (başlık)\n\n      let teamValue = null;\n      for (const line of lines) {\n        const [takim,, deger] = line.split(','); // 'lig' değişkenini atla\n        if (takim === teamName) {\n          teamValue = parseFloat(deger);\n          break;\n        }\n      }\n      if (!teamValue) {\n        console.warn(`Takım değeri bulunamadı: ${teamName}`);\n        return Math.floor(Math.random() * 11) + 25; // Varsayılan değer\n      }\n\n      // Kadro_Yetenek_Listesi.csv'den interpolasyon yap\n      const kadroResponse = await fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv');\n      const kadroText = await kadroResponse.text();\n      const kadroLines = kadroText.split('\\n').slice(1); // İlk satırı atla\n\n      const kadroData = kadroLines.map(line => {\n        const [kadroDegeri, yetenek] = line.split(',');\n        return {\n          kadro: parseFloat(kadroDegeri),\n          yetenek: parseFloat(yetenek)\n        };\n      });\n\n      // Yetenek değerini direkt tesis seviyesi olarak kullan (20-92 -> 20-92)\n      let baseYetenek = 20; // Initialize with min level\n\n      const exactMatch = kadroData.find(item => item.kadro === teamValue);\n      if (exactMatch) {\n        baseYetenek = exactMatch.yetenek;\n      } else {\n        // İnterpolasyon yap\n        for (let i = 0; i < kadroData.length - 1; i++) {\n          const current = kadroData[i];\n          const next = kadroData[i + 1];\n          if (teamValue >= current.kadro && teamValue <= next.kadro) {\n            const ratio = (teamValue - current.kadro) / (next.kadro - current.kadro);\n            baseYetenek = current.yetenek + ratio * (next.yetenek - current.yetenek);\n            break;\n          }\n        }\n      }\n      // Yetenek değerini 20-92 arasına sınırla\n      const variation = Math.floor(Math.random() * 11) - 5; // Rastgele ±5 varyasyon ekle\n      return Math.max(20, Math.min(92, Math.round(baseYetenek + variation)));\n    } catch (error) {\n      console.error('CSV okuma hatası:', error);\n      return Math.floor(Math.random() * 11) + 25; // Hata durumunda varsayılan değer\n    }\n  };\n\n  // Menajer oluşturma fonksiyonu\n  const generateManager = teamValue => {\n    // Takım değerine göre menajer seviyesi belirle\n    let baseLevel;\n    if (teamValue >= 100) baseLevel = Math.floor(Math.random() * 20) + 80; // 80-99\n    else if (teamValue >= 50) baseLevel = Math.floor(Math.random() * 20) + 60; // 60-79\n    else if (teamValue >= 20) baseLevel = Math.floor(Math.random() * 20) + 40; // 40-59\n    else baseLevel = Math.floor(Math.random() * 20) + 20; // 20-39\n\n    // M-A-T seviyelerini oluştur (ortalaması baseLevel olacak)\n    const variation = Math.floor(Math.random() * 10) - 5; // ±5 varyasyon\n    const managerLevel = Math.max(20, Math.min(99, baseLevel + variation));\n    const trainingLevel = Math.max(20, Math.min(99, baseLevel + Math.floor(Math.random() * 10) - 5));\n    const tacticsLevel = Math.max(20, Math.min(99, baseLevel + Math.floor(Math.random() * 10) - 5));\n\n    // Futbol anlayışını belirle\n    const philosophies = Object.values(FOOTBALL_PHILOSOPHIES);\n    const philosophy = philosophies[Math.floor(Math.random() * philosophies.length)];\n\n    // Anlayışa göre taktik seç\n    let formation;\n    switch (philosophy) {\n      case FOOTBALL_PHILOSOPHIES.ATTACKING:\n        formation = FORMATIONS.ATTACKING[Math.floor(Math.random() * FORMATIONS.ATTACKING.length)];\n        break;\n      case FOOTBALL_PHILOSOPHIES.BALANCED:\n        formation = FORMATIONS.BALANCED[Math.floor(Math.random() * FORMATIONS.BALANCED.length)];\n        break;\n      case FOOTBALL_PHILOSOPHIES.DEFENSIVE:\n        formation = FORMATIONS.DEFENSIVE[Math.floor(Math.random() * FORMATIONS.DEFENSIVE.length)];\n        break;\n    }\n    return {\n      name: generateManagerName(),\n      managerLevel: managerLevel,\n      trainingLevel: trainingLevel,\n      tacticsLevel: tacticsLevel,\n      level: Math.round((managerLevel + trainingLevel + tacticsLevel) / 3),\n      // Ortalama seviye\n      philosophy: philosophy,\n      formation: formation\n    };\n  };\n  return {\n    name: selectedTeam,\n    season: '2024/25',\n    league: leagueName,\n    date: 'Ağu 2024',\n    hfSonu: 'Hazırlık 1',\n    // Sezon başlangıcı - hazırlık 1'deyiz\n    lig: team ? team.position : Math.floor(Math.random() * 20) + 1,\n    money: 50000,\n    // Sabit başlangıç parası\n    kadro: getTeamValue(selectedTeam),\n    // Doğru kadro değeri\n    menajer: (await generateManager(getTeamValue(selectedTeam), leagueName)).averageSkill,\n    antrenman: await getFacilityLevel(selectedTeam),\n    altyapi: await getFacilityLevel(selectedTeam),\n    kupalar: 0,\n    basarildi: 0,\n    taraftarMutlu: 50,\n    baskanMutlu: 50,\n    stadium: 'Stadyum',\n    baskan: 'Başkan',\n    matchResults: [],\n    // Henüz hiç maç oynanmamış\n    nextMatch: `${leagueName}: ${turkishLeagues[leagueName][Math.floor(Math.random() * turkishLeagues[leagueName].length)].name} (D)`,\n    squad: squad,\n    // Kadro bilgisi\n    youthSquad: youthData ? youthData.squad : [],\n    // Altyapı kadrosu bilgisi\n    manager: await generateManager(getTeamValue(selectedTeam), leagueName),\n    // Menajer bilgisi\n    gameTime: {\n      week: 1,\n      day: 'Hafta Başı'\n    } // Oyun zamanı\n  };\n};\n\n// Eski veri yapısı (geriye uyumluluk için)\nexport const club = {\n  name: 'BENIDORM',\n  season: '2025/26',\n  league: 'Tercera C',\n  date: 'Ağu 2025',\n  hfSonu: 5,\n  lig: 5,\n  money: 50000,\n  kadro: 36,\n  menajer: 37,\n  antrenman: 37,\n  altyapi: 35,\n  kupalar: 0,\n  basarildi: 1,\n  taraftarMutlu: 97,\n  baskanMutlu: 52,\n  stadium: 'Stadyum',\n  baskan: 'Başkan',\n  matchResults: ['M', 'G', 'G', 'G', 'B', 'B'],\n  nextMatch: 'Tercera C: Guijuelo (D)'\n};\n\n// Fikstür verilerini oluştur\nexport const fixtureData = {};\n\n// Her lig için gerçekçi fikstür oluştur\nconst initializeFixtures = async () => {\n  try {\n    // Turkish leagues yüklenene kadar bekle\n    await initializeTurkishLeagues();\n    Object.keys(turkishLeagues).forEach(leagueName => {\n      const teams = turkishLeagues[leagueName];\n      const fixtures = generateRealisticFixtures(teams);\n      fixtureData[leagueName] = fixtures;\n      console.log(`${leagueName} fikstürü: ${fixtures.length} maç, ${Math.max(...fixtures.map(f => f.week))} hafta`);\n    });\n  } catch (error) {\n    console.error('Fikstürler oluşturulamadı:', error);\n  }\n};\n\n// Fikstürleri başlangıçta oluştur\ninitializeFixtures();\nexport const standingsData = [{\n  pos: 1,\n  team: 'JAEN',\n  O: 5,\n  G: 4,\n  B: 0,\n  M: 1,\n  A: 12,\n  Y: 6,\n  AV: 6,\n  PN: 12,\n  color: '#b88c2c'\n}, {\n  pos: 2,\n  team: 'CONQUENSE',\n  O: 5,\n  G: 4,\n  B: 0,\n  M: 1,\n  A: 10,\n  Y: 5,\n  AV: 5,\n  PN: 12,\n  color: '#2c7b2c'\n}, {\n  pos: 3,\n  team: 'LAGUN ONAK',\n  O: 5,\n  G: 4,\n  B: 0,\n  M: 1,\n  A: 7,\n  Y: 3,\n  AV: 4,\n  PN: 12\n}, {\n  pos: 4,\n  team: 'SAGUNTINO',\n  O: 5,\n  G: 2,\n  B: 3,\n  M: 0,\n  A: 4,\n  Y: 2,\n  AV: 2,\n  PN: 9\n}, {\n  pos: 5,\n  team: 'CIUDAD REAL',\n  O: 5,\n  G: 3,\n  B: 0,\n  M: 2,\n  A: 5,\n  Y: 5,\n  AV: 0,\n  PN: 9\n}, {\n  pos: 6,\n  team: 'LLOSETENSE',\n  O: 5,\n  G: 2,\n  B: 2,\n  M: 1,\n  A: 6,\n  Y: 4,\n  AV: 2,\n  PN: 8\n}, {\n  pos: 7,\n  team: 'BENIDORM',\n  O: 5,\n  G: 2,\n  B: 2,\n  M: 1,\n  A: 6,\n  Y: 5,\n  AV: 1,\n  PN: 8,\n  color: '#fff',\n  textColor: '#2c466b'\n}, {\n  pos: 8,\n  team: 'OLOT',\n  O: 5,\n  G: 2,\n  B: 2,\n  M: 1,\n  A: 4,\n  Y: 3,\n  AV: 1,\n  PN: 8\n}, {\n  pos: 9,\n  team: 'VILLARROBLED',\n  O: 5,\n  G: 2,\n  B: 1,\n  M: 2,\n  A: 6,\n  Y: 6,\n  AV: 0,\n  PN: 7\n}];\n\n// Menajer futbol anlayışları\nconst FOOTBALL_PHILOSOPHIES = {\n  ATTACKING: 'Hücum Futbolu',\n  BALANCED: 'Dengeli',\n  DEFENSIVE: 'Savunma Futbolu'\n};\n\n// Taktik formasyonları\nconst FORMATIONS = {\n  ATTACKING: ['4-4-2', '3-4-3', '4-3-3'],\n  BALANCED: ['4-5-1', '3-5-2'],\n  DEFENSIVE: ['5-4-1', '5-3-2']\n};\n\n// Menajer ismi oluşturma\nconst generateManagerName = () => {\n  const firstNames = ['Ahmet', 'Mehmet', 'Mustafa', 'Ali', 'Hasan', 'İbrahim', 'Yusuf', 'Murat', 'Kemal', 'Fatih', 'Halil', 'Cem', 'Burak', 'Eren', 'Emre', 'Levent', 'Uğur', 'Okan', 'Koray', 'Sinan'];\n  const lastNames = ['Yılmaz', 'Kaya', 'Demir', 'Çelik', 'Şahin', 'Yıldız', 'Özdemir', 'Arslan', 'Doğan', 'Kılıç', 'Aydın', 'Özkan', 'Erdoğan', 'Koç', 'Kurt', 'Aslan', 'Çetin', 'Güneş', 'Yalçın', 'Özkan'];\n  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n  return `${firstName} ${lastName}`;\n};\n\n// Menajer oluşturma fonksiyonu (CSV tabanlı)\nconst generateManager = async (teamValue, leagueName = 'Süper Lig') => {\n  return await generateManagerCSV(generateManagerName(), leagueName, teamValue);\n};\n\n// Tüm takımların menajerlerini oluştur\nexport const allManagers = {};\n\n// Menajerleri async olarak yükle\nconst initializeManagers = async () => {\n  try {\n    // Turkish leagues yüklenene kadar bekle\n    await initializeTurkishLeagues();\n    for (const leagueName of Object.keys(turkishLeagues)) {\n      allManagers[leagueName] = {};\n      for (const team of turkishLeagues[leagueName]) {\n        allManagers[leagueName][team.name] = await generateManager(team.value, leagueName);\n      }\n    }\n    console.log('Menajerler yüklendi');\n  } catch (error) {\n    console.error('Menajerler yüklenemedi:', error);\n  }\n};\n\n// Menajerleri başlangıçta yükle\ninitializeManagers();\n\n// Haftalık gider hesaplama fonksiyonu\nexport const calculateWeeklyExpenses = club => {\n  let totalExpenses = 0;\n\n  // Menajer maaşı\n  if (club.manager && club.manager.salary) {\n    totalExpenses += club.manager.salary;\n  }\n\n  // Oyuncu maaşları\n  if (club.squad) {\n    // İlk takım oyuncuları\n    if (club.squad.firstTeam) {\n      club.squad.firstTeam.forEach(player => {\n        if (player.salary) {\n          totalExpenses += player.salary;\n        }\n      });\n    }\n\n    // Yedek oyuncular\n    if (club.squad.substitutes) {\n      club.squad.substitutes.forEach(player => {\n        if (player.salary) {\n          totalExpenses += player.salary;\n        }\n      });\n    }\n  }\n\n  // Tesis giderleri - haftalık maliyetler (doğru formül)\n  const antrenmanWeeklyFee = Math.round(Math.pow((club.antrenman || 37) / 10, 2.5) * 10);\n  const altyapiWeeklyFee = Math.round(Math.pow((club.altyapi || 35) / 10, 2.5) * 10);\n  const facilityCosts = antrenmanWeeklyFee + altyapiWeeklyFee;\n  totalExpenses += facilityCosts;\n  return totalExpenses;\n};\n\n// Hafta geçişi fonksiyonu\nexport const advanceWeek = club => {\n  const weeklyExpenses = calculateWeeklyExpenses(club);\n  const newMoney = Math.max(0, club.money - weeklyExpenses);\n  return {\n    ...club,\n    money: newMoney,\n    gameTime: {\n      week: club.gameTime.week + 1,\n      day: 'Hafta Başı'\n    }\n  };\n};","map":{"version":3,"names":["generateAllSquads","generateAllYouthSquads","generateManager","generateManagerCSV","loadTurkishLeaguesFromCSV","response","fetch","csvText","text","lines","split","slice","leagues","position","currentLeague","line","trim","takim","lig","deger","map","item","push","name","value","parseFloat","console","log","error","turkishLeagues","leaguesLoadPromise","initializeTurkishLeagues","allSquads","initializeSquads","Object","keys","league","teams","totalTeams","length","allYouthSquads","initializeYouthSquads","generatePreSeasonFixtures","selectedTeam","allTeams","values","forEach","team","randomTeams","i","randomIndex","Math","floor","random","splice","homeTeam","awayTeam","matchday","isPreSeason","result","played","week","generateRealisticFixtures","fixtures","teamNames","numTeams","totalWeeks","teamsCopy","round","roundFixtures","homeIndex","awayIndex","lastTeam","pop","teamsCopy2","sortedFixtures","sort","a","b","balancedFixtures","balanceHomeAwayFixtures","teamHomeAwayCount","fixture","home","away","lastMatches","max","f","weekFixtures","filter","homeLastMatches","awayLastMatches","match","temp","shift","createClubData","leagueName","_allSquads$leagueName","_allYouthSquads$leagu","find","t","squad","youthData","getTeamValue","teamName","teamValueData","getFacilityLevel","teamValue","warn","kadroResponse","kadroText","kadroLines","kadroData","kadroDegeri","yetenek","kadro","baseYetenek","exactMatch","current","next","ratio","variation","min","baseLevel","managerLevel","trainingLevel","tacticsLevel","philosophies","FOOTBALL_PHILOSOPHIES","philosophy","formation","ATTACKING","FORMATIONS","BALANCED","DEFENSIVE","generateManagerName","level","season","date","hfSonu","money","menajer","averageSkill","antrenman","altyapi","kupalar","basarildi","taraftarMutlu","baskanMutlu","stadium","baskan","matchResults","nextMatch","youthSquad","manager","gameTime","day","club","fixtureData","initializeFixtures","standingsData","pos","O","G","B","M","A","Y","AV","PN","color","textColor","firstNames","lastNames","firstName","lastName","allManagers","initializeManagers","calculateWeeklyExpenses","totalExpenses","salary","firstTeam","player","substitutes","antrenmanWeeklyFee","pow","altyapiWeeklyFee","facilityCosts","advanceWeek","weeklyExpenses","newMoney"],"sources":["C:/Users/PC/fcpro/src/data.js"],"sourcesContent":["import { generateAllSquads } from './data/squadGenerator';\r\nimport { generateAllYouthSquads } from './data/youthSquadGenerator';\r\nimport { generateManager as generateManagerCSV } from './data/managerData';\r\n\r\n// CSV'den takım verilerini dinamik olarak yükle\r\nexport const loadTurkishLeaguesFromCSV = async () => {\r\n  try {\r\n    const response = await fetch('/turkish_leagues_with_values.csv');\r\n    const csvText = await response.text();\r\n    const lines = csvText.split('\\n').slice(1); // İlk satırı atla (başlık)\r\n    \r\n    const leagues = {\r\n      'Süper Lig': [],\r\n      '1. Lig': [],\r\n      '2. Lig Beyaz': [],\r\n      '2. Lig Kırmızı': []\r\n    };\r\n    \r\n    let position = 1;\r\n    let currentLeague = '';\r\n    \r\n    for (const line of lines) {\r\n      if (line.trim()) {\r\n        const [takim, lig, deger] = line.split(',').map(item => item.trim());\r\n        \r\n        if (lig && leagues[lig]) {\r\n          // Yeni lig başladığında pozisyonu sıfırla\r\n          if (currentLeague !== lig) {\r\n            currentLeague = lig;\r\n            position = 1;\r\n          }\r\n          \r\n          leagues[lig].push({\r\n            name: takim,\r\n            value: parseFloat(deger),\r\n            position: position++\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('CSV\\'den takım verileri yüklendi:', leagues);\r\n    return leagues;\r\n  } catch (error) {\r\n    console.error('CSV okuma hatası:', error);\r\n    throw error; // Hatayı fırlat, varsayılan veri döndürme\r\n  }\r\n};\r\n\r\n// Turkish leagues objesi - CSV'den yüklenecek\r\nexport let turkishLeagues = {};\r\n\r\n// Yükleme durumunu takip etmek için promise\r\nlet leaguesLoadPromise = null;\r\n\r\n// CSV'den verileri yükle ve turkishLeagues'i güncelle\r\nconst initializeTurkishLeagues = async () => {\r\n  if (leaguesLoadPromise) {\r\n    return leaguesLoadPromise;\r\n  }\r\n  \r\n  leaguesLoadPromise = (async () => {\r\n    try {\r\n      turkishLeagues = await loadTurkishLeaguesFromCSV();\r\n      console.log('Turkish leagues başarıyla yüklendi');\r\n      return turkishLeagues;\r\n    } catch (error) {\r\n      console.error('Turkish leagues yüklenemedi:', error);\r\n      turkishLeagues = {};\r\n      throw error;\r\n    }\r\n  })();\r\n  \r\n  return leaguesLoadPromise;\r\n};\r\n\r\n// Başlangıçta yükle\r\ninitializeTurkishLeagues();\r\n\r\n// Tüm takımların kadrolarını oluştur\r\nexport let allSquads = {};\r\n\r\n// Kadroları async olarak yükle\r\nconst initializeSquads = async () => {\r\n  try {\r\n    // Turkish leagues yüklenene kadar bekle\r\n    await initializeTurkishLeagues();\r\n    \r\n    allSquads = await generateAllSquads(turkishLeagues);\r\n    console.log('Kadrolar yüklendi:', Object.keys(allSquads).map(league => ({\r\n      league,\r\n      teams: Object.keys(allSquads[league] || {}),\r\n      totalTeams: Object.keys(allSquads[league] || {}).length\r\n    })));\r\n  } catch (error) {\r\n    console.error('Kadrolar yüklenemedi:', error);\r\n  }\r\n};\r\n\r\n// Kadroları başlangıçta yükle\r\ninitializeSquads();\r\n\r\n// Tüm takımların altyapı kadrolarını oluştur\r\nexport let allYouthSquads = {};\r\n\r\n// Altyapı kadrolarını async olarak yükle\r\nconst initializeYouthSquads = async () => {\r\n  try {\r\n    // Turkish leagues yüklenene kadar bekle\r\n    await initializeTurkishLeagues();\r\n    \r\n    allYouthSquads = generateAllYouthSquads(turkishLeagues);\r\n    console.log('Altyapı kadroları yüklendi');\r\n  } catch (error) {\r\n    console.error('Altyapı kadroları yüklenemedi:', error);\r\n  }\r\n};\r\n\r\n// Altyapı kadrolarını başlangıçta yükle\r\ninitializeYouthSquads();\r\n\r\n// Hazırlık maçları oluşturma fonksiyonu\r\nexport const generatePreSeasonFixtures = (selectedTeam) => {\r\n  // Rastgele takımlar seç\r\n  const allTeams = [];\r\n  Object.values(turkishLeagues).forEach(league => {\r\n    league.forEach(team => {\r\n      if (team.name !== selectedTeam) {\r\n        allTeams.push(team.name);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // 3 rastgele takım seç\r\n  const randomTeams = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    const randomIndex = Math.floor(Math.random() * allTeams.length);\r\n    randomTeams.push(allTeams[randomIndex]);\r\n    allTeams.splice(randomIndex, 1);\r\n  }\r\n  \r\n  return [\r\n    { homeTeam: selectedTeam, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\r\n    { homeTeam: selectedTeam, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\r\n    { homeTeam: selectedTeam, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\r\n  ];\r\n};\r\n\r\n// Gerçekçi fikstür oluşturma fonksiyonu (çift sayılı takım için)\r\nexport const generateRealisticFixtures = (teams) => {\r\n  const fixtures = [];\r\n  const teamNames = teams.map(team => team.name);\r\n  const numTeams = teamNames.length;\r\n  \r\n  // Tek sayılı takım varsa \"BYE\" ekle\r\n  if (numTeams % 2 !== 0) {\r\n    teamNames.push('BYE');\r\n  }\r\n  \r\n  const totalWeeks = numTeams - 1;\r\n  const teamsCopy = [...teamNames];\r\n  \r\n  // Berger Table algoritması ile fikstür oluştur\r\n  for (let round = 0; round < totalWeeks; round++) {\r\n    const roundFixtures = [];\r\n    \r\n    // Her hafta için maçları oluştur\r\n    for (let i = 0; i < Math.floor(numTeams / 2); i++) {\r\n      const homeIndex = i;\r\n      const awayIndex = numTeams - 1 - i;\r\n      \r\n      const homeTeam = teamsCopy[homeIndex];\r\n      const awayTeam = teamsCopy[awayIndex];\r\n      \r\n      // BYE maçlarını atla\r\n      if (homeTeam !== 'BYE' && awayTeam !== 'BYE') {\r\n        roundFixtures.push({\r\n          homeTeam: homeTeam,\r\n          awayTeam: awayTeam,\r\n          week: round + 1,\r\n          result: null,\r\n          played: false\r\n        });\r\n      }\r\n    }\r\n    \r\n    fixtures.push(...roundFixtures);\r\n    \r\n    // Takımları döndür (Berger Table)\r\n    const lastTeam = teamsCopy.pop();\r\n    teamsCopy.splice(1, 0, lastTeam);\r\n  }\r\n  \r\n  // İkinci yarı için roller değişti\r\n  const teamsCopy2 = [...teamNames];\r\n  for (let round = 0; round < totalWeeks; round++) {\r\n    const roundFixtures = [];\r\n    \r\n    for (let i = 0; i < Math.floor(numTeams / 2); i++) {\r\n      const homeIndex = i;\r\n      const awayIndex = numTeams - 1 - i;\r\n      \r\n      // Roller değişti - ikinci yarıda\r\n      const homeTeam = teamsCopy2[awayIndex];\r\n      const awayTeam = teamsCopy2[homeIndex];\r\n      \r\n      // BYE maçlarını atla\r\n      if (homeTeam !== 'BYE' && awayTeam !== 'BYE') {\r\n        roundFixtures.push({\r\n          homeTeam: homeTeam,\r\n          awayTeam: awayTeam,\r\n          week: round + totalWeeks + 1,\r\n          result: null,\r\n          played: false\r\n        });\r\n      }\r\n    }\r\n    \r\n    fixtures.push(...roundFixtures);\r\n    \r\n    // Takımları döndür\r\n    const lastTeam = teamsCopy2.pop();\r\n    teamsCopy2.splice(1, 0, lastTeam);\r\n  }\r\n  \r\n  // Maçları haftaya göre sırala\r\n  const sortedFixtures = fixtures.sort((a, b) => a.week - b.week);\r\n  \r\n  // 3 hafta üst üste aynı yerde oynamama kuralını uygula\r\n  const balancedFixtures = balanceHomeAwayFixtures(sortedFixtures);\r\n  \r\n  return balancedFixtures;\r\n};\r\n\r\n// 3 hafta üst üste aynı yerde oynamama kuralını uygulayan fonksiyon\r\nconst balanceHomeAwayFixtures = (fixtures) => {\r\n  const teamHomeAwayCount = {};\r\n  const balancedFixtures = [...fixtures];\r\n  \r\n  // Her takım için ev sahibi/deplasman sayısını takip et\r\n  fixtures.forEach(fixture => {\r\n    if (!teamHomeAwayCount[fixture.homeTeam]) {\r\n      teamHomeAwayCount[fixture.homeTeam] = { home: 0, away: 0, lastMatches: [] };\r\n    }\r\n    if (!teamHomeAwayCount[fixture.awayTeam]) {\r\n      teamHomeAwayCount[fixture.awayTeam] = { home: 0, away: 0, lastMatches: [] };\r\n    }\r\n  });\r\n  \r\n  // Her hafta için kontrol et ve gerekirse düzelt\r\n  for (let week = 1; week <= Math.max(...fixtures.map(f => f.week)); week++) {\r\n    const weekFixtures = balancedFixtures.filter(f => f.week === week);\r\n    \r\n    weekFixtures.forEach(fixture => {\r\n      const homeTeam = fixture.homeTeam;\r\n      const awayTeam = fixture.awayTeam;\r\n      \r\n      // Her takımın son 3 maçını kontrol et\r\n      const homeLastMatches = teamHomeAwayCount[homeTeam].lastMatches.slice(-2); // Son 2 maç\r\n      const awayLastMatches = teamHomeAwayCount[awayTeam].lastMatches.slice(-2); // Son 2 maç\r\n      \r\n      // Eğer takım son 2 maçını ev sahibi olarak oynadıysa ve bu da 3. ev sahibi maçı olacaksa\r\n      if (homeLastMatches.filter(match => match === 'home').length >= 2) {\r\n        // Bu maçı değiştir\r\n        const temp = fixture.homeTeam;\r\n        fixture.homeTeam = fixture.awayTeam;\r\n        fixture.awayTeam = temp;\r\n      }\r\n      \r\n      // Eğer takım son 2 maçını deplasman olarak oynadıysa ve bu da 3. deplasman maçı olacaksa\r\n      if (awayLastMatches.filter(match => match === 'away').length >= 2) {\r\n        // Bu maçı değiştir\r\n        const temp = fixture.homeTeam;\r\n        fixture.homeTeam = fixture.awayTeam;\r\n        fixture.awayTeam = temp;\r\n      }\r\n      \r\n      // Maç sonuçlarını güncelle\r\n      teamHomeAwayCount[fixture.homeTeam].home++;\r\n      teamHomeAwayCount[fixture.homeTeam].lastMatches.push('home');\r\n      teamHomeAwayCount[fixture.awayTeam].away++;\r\n      teamHomeAwayCount[fixture.awayTeam].lastMatches.push('away');\r\n      \r\n      // Son 3 maçtan fazlasını tutma\r\n      if (teamHomeAwayCount[fixture.homeTeam].lastMatches.length > 3) {\r\n        teamHomeAwayCount[fixture.homeTeam].lastMatches.shift();\r\n      }\r\n      if (teamHomeAwayCount[fixture.awayTeam].lastMatches.length > 3) {\r\n        teamHomeAwayCount[fixture.awayTeam].lastMatches.shift();\r\n      }\r\n    });\r\n  }\r\n  \r\n  return balancedFixtures;\r\n};\r\n\r\n// Seçilen takım için varsayılan kulüp verisi\r\nexport const createClubData = async (selectedTeam, leagueName) => {\r\n  const team = turkishLeagues[leagueName].find(t => t.name === selectedTeam);\r\n  const squad = allSquads[leagueName]?.[selectedTeam];\r\n  const youthData = allYouthSquads[leagueName]?.[selectedTeam];\r\n  \r\n  // Kadro değerini turkish_leagues_with_values.csv'den al\r\n  const getTeamValue = (teamName) => {\r\n    // CSV'den takım değerini bul\r\n    const teamValueData = {\r\n      'Galatasaray': 300.73, 'Fenerbahçe': 262.25, 'Beşiktaş': 155.05, 'Trabzonspor': 84.85,\r\n      'İstanbul Başakşehir': 61.13, 'Samsunspor': 36.93, 'Çaykur Rizespor': 34.5, 'Antalyaspor': 30.65,\r\n      'Göztepe': 40.85, 'Eyüpspor': 25.15, 'Konyaspor': 24.35, 'Kocaelispor': 23.05, 'Alanyaspor': 24.2,\r\n      'Gaziantep FK': 20.85, 'Kayserispor': 19.85, 'Gençlerbirliği': 14.4, 'Kasımpaşa': 17.08,\r\n      'Adana Demirspor': 25.0, 'Hatayspor': 18.0, 'İstanbulspor': 10.0, 'Bodrum FK': 15.05, 'Amedspor': 11.87,\r\n      'Sivasspor': 11.35, 'Çorum FK': 8.95, 'Manisa FK': 8.58, 'Iğdır FK': 7.88, 'Erzurumspor FK': 7.43,\r\n      'Sakaryaspor': 9.0, 'Ümraniyespor': 7.0, 'Altay': 5.0, 'Adanaspor': 5.5,\r\n      'Ankara Keçiörengücü': 6.0, 'Afyonspor': 2.54, 'Altınordu': 3.02, 'Ankara Demirspor': 2.35,\r\n      'Ankaraspor': 2.57, 'Beyoğlu Yeni Çarşıspor': 2.57, 'Bucaspor 1928': 3.77, 'Bursaspor': 2.87,\r\n      'Diyarbekirspor': 2.99, 'Ergene Velimeşe': 2.37, 'Esenler Erokspor': 3.36, 'Hes İlaç Afyonspor': 3.84,\r\n      'İnegölspor': 3.37, 'Boluspor': 6.5, 'Bandırmaspor': 7.0, 'Tuzlaspor': 4.5, 'Giresunspor': 6.5,\r\n      'Vanspor': 5.5, 'Pendikspor': 8.0, '24 Erzincanspor': 2.91,\r\n      'Adıyaman FK': 2.29, 'Arnavutköy Belediyespor': 3.33, 'Balıkesirspor': 3.66, 'Bayburt Özel İdarespor': 2.64,\r\n      'Denizlispor': 3.9, 'Düzcespor': 2.53, 'Etimesgut Belediyespor': 2.45, 'Fethiyespor': 2.97,\r\n      'Isparta 32 Spor': 2.52, 'Karacabey Belediyespor': 3.51, 'Nazilli Belediyespor': 2.32, 'Serik Belediyespor': 3.75,\r\n      'Somaspor': 2.4, 'Şanlıurfaspor': 3.61, 'Tarsus İdman Yurdu': 2.1, 'Zonguldak Kömürspor': 2.82\r\n    };\r\n    \r\n    return teamValueData[teamName] || 20; // Varsayılan değer\r\n  };\r\n  \r\n  // CSV'den tesis seviyesi hesaplama fonksiyonu\r\n  const getFacilityLevel = async (teamName) => {\r\n    try {\r\n      // turkish_leagues_with_values.csv'den takım değerini al\r\n      const response = await fetch('/turkish_leagues_with_values.csv');\r\n      const csvText = await response.text();\r\n      const lines = csvText.split('\\n').slice(1); // İlk satırı atla (başlık)\r\n      \r\n      let teamValue = null;\r\n      for (const line of lines) {\r\n        const [takim, , deger] = line.split(','); // 'lig' değişkenini atla\r\n        if (takim === teamName) {\r\n          teamValue = parseFloat(deger);\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (!teamValue) {\r\n        console.warn(`Takım değeri bulunamadı: ${teamName}`);\r\n        return Math.floor(Math.random() * 11) + 25; // Varsayılan değer\r\n      }\r\n      \r\n      // Kadro_Yetenek_Listesi.csv'den interpolasyon yap\r\n      const kadroResponse = await fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv');\r\n      const kadroText = await kadroResponse.text();\r\n      const kadroLines = kadroText.split('\\n').slice(1); // İlk satırı atla\r\n      \r\n      const kadroData = kadroLines.map(line => {\r\n        const [kadroDegeri, yetenek] = line.split(',');\r\n        return {\r\n          kadro: parseFloat(kadroDegeri),\r\n          yetenek: parseFloat(yetenek)\r\n        };\r\n      });\r\n      \r\n      // Yetenek değerini direkt tesis seviyesi olarak kullan (20-92 -> 20-92)\r\n      let baseYetenek = 20; // Initialize with min level\r\n      \r\n      const exactMatch = kadroData.find(item => item.kadro === teamValue);\r\n      if (exactMatch) {\r\n        baseYetenek = exactMatch.yetenek;\r\n      } else {\r\n        // İnterpolasyon yap\r\n        for (let i = 0; i < kadroData.length - 1; i++) {\r\n          const current = kadroData[i];\r\n          const next = kadroData[i + 1];\r\n          \r\n          if (teamValue >= current.kadro && teamValue <= next.kadro) {\r\n            const ratio = (teamValue - current.kadro) / (next.kadro - current.kadro);\r\n            baseYetenek = current.yetenek + ratio * (next.yetenek - current.yetenek);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // Yetenek değerini 20-92 arasına sınırla\r\n      const variation = Math.floor(Math.random() * 11) - 5; // Rastgele ±5 varyasyon ekle\r\n      return Math.max(20, Math.min(92, Math.round(baseYetenek + variation)));\r\n      \r\n    } catch (error) {\r\n      console.error('CSV okuma hatası:', error);\r\n      return Math.floor(Math.random() * 11) + 25; // Hata durumunda varsayılan değer\r\n    }\r\n  };\r\n  \r\n  // Menajer oluşturma fonksiyonu\r\n  const generateManager = (teamValue) => {\r\n    // Takım değerine göre menajer seviyesi belirle\r\n    let baseLevel;\r\n    if (teamValue >= 100) baseLevel = Math.floor(Math.random() * 20) + 80; // 80-99\r\n    else if (teamValue >= 50) baseLevel = Math.floor(Math.random() * 20) + 60; // 60-79\r\n    else if (teamValue >= 20) baseLevel = Math.floor(Math.random() * 20) + 40; // 40-59\r\n    else baseLevel = Math.floor(Math.random() * 20) + 20; // 20-39\r\n\r\n    // M-A-T seviyelerini oluştur (ortalaması baseLevel olacak)\r\n    const variation = Math.floor(Math.random() * 10) - 5; // ±5 varyasyon\r\n    const managerLevel = Math.max(20, Math.min(99, baseLevel + variation));\r\n    const trainingLevel = Math.max(20, Math.min(99, baseLevel + Math.floor(Math.random() * 10) - 5));\r\n    const tacticsLevel = Math.max(20, Math.min(99, baseLevel + Math.floor(Math.random() * 10) - 5));\r\n\r\n    // Futbol anlayışını belirle\r\n    const philosophies = Object.values(FOOTBALL_PHILOSOPHIES);\r\n    const philosophy = philosophies[Math.floor(Math.random() * philosophies.length)];\r\n    \r\n    // Anlayışa göre taktik seç\r\n    let formation;\r\n    switch (philosophy) {\r\n      case FOOTBALL_PHILOSOPHIES.ATTACKING:\r\n        formation = FORMATIONS.ATTACKING[Math.floor(Math.random() * FORMATIONS.ATTACKING.length)];\r\n        break;\r\n      case FOOTBALL_PHILOSOPHIES.BALANCED:\r\n        formation = FORMATIONS.BALANCED[Math.floor(Math.random() * FORMATIONS.BALANCED.length)];\r\n        break;\r\n      case FOOTBALL_PHILOSOPHIES.DEFENSIVE:\r\n        formation = FORMATIONS.DEFENSIVE[Math.floor(Math.random() * FORMATIONS.DEFENSIVE.length)];\r\n        break;\r\n    }\r\n\r\n    return {\r\n      name: generateManagerName(),\r\n      managerLevel: managerLevel,\r\n      trainingLevel: trainingLevel,\r\n      tacticsLevel: tacticsLevel,\r\n      level: Math.round((managerLevel + trainingLevel + tacticsLevel) / 3), // Ortalama seviye\r\n      philosophy: philosophy,\r\n      formation: formation\r\n    };\r\n  };\r\n\r\n      return {\r\n      name: selectedTeam,\r\n      season: '2024/25',\r\n      league: leagueName,\r\n      date: 'Ağu 2024',\r\n      hfSonu: 'Hazırlık 1', // Sezon başlangıcı - hazırlık 1'deyiz\r\n      lig: team ? team.position : Math.floor(Math.random() * 20) + 1,\r\n      money: 50000, // Sabit başlangıç parası\r\n      kadro: getTeamValue(selectedTeam), // Doğru kadro değeri\r\n      menajer: (await generateManager(getTeamValue(selectedTeam), leagueName)).averageSkill,\r\n      antrenman: await getFacilityLevel(selectedTeam),\r\n      altyapi: await getFacilityLevel(selectedTeam),\r\n      kupalar: 0,\r\n      basarildi: 0,\r\n      taraftarMutlu: 50,\r\n      baskanMutlu: 50,\r\n      stadium: 'Stadyum',\r\n      baskan: 'Başkan',\r\n      matchResults: [], // Henüz hiç maç oynanmamış\r\n      nextMatch: `${leagueName}: ${turkishLeagues[leagueName][Math.floor(Math.random() * turkishLeagues[leagueName].length)].name} (D)`,\r\n      squad: squad, // Kadro bilgisi\r\n      youthSquad: youthData ? youthData.squad : [], // Altyapı kadrosu bilgisi\r\n      manager: await generateManager(getTeamValue(selectedTeam), leagueName), // Menajer bilgisi\r\n      gameTime: { week: 1, day: 'Hafta Başı' } // Oyun zamanı\r\n    };\r\n};\r\n\r\n// Eski veri yapısı (geriye uyumluluk için)\r\nexport const club = {\r\n  name: 'BENIDORM',\r\n  season: '2025/26',\r\n  league: 'Tercera C',\r\n  date: 'Ağu 2025',\r\n  hfSonu: 5,\r\n  lig: 5,\r\n  money: 50000,\r\n  kadro: 36,\r\n  menajer: 37,\r\n  antrenman: 37,\r\n  altyapi: 35,\r\n  kupalar: 0,\r\n  basarildi: 1,\r\n  taraftarMutlu: 97,\r\n  baskanMutlu: 52,\r\n  stadium: 'Stadyum',\r\n  baskan: 'Başkan',\r\n  matchResults: ['M', 'G', 'G', 'G', 'B', 'B'],\r\n  nextMatch: 'Tercera C: Guijuelo (D)',\r\n};\r\n\r\n// Fikstür verilerini oluştur\r\nexport const fixtureData = {};\r\n\r\n// Her lig için gerçekçi fikstür oluştur\r\nconst initializeFixtures = async () => {\r\n  try {\r\n    // Turkish leagues yüklenene kadar bekle\r\n    await initializeTurkishLeagues();\r\n    \r\n    Object.keys(turkishLeagues).forEach(leagueName => {\r\n      const teams = turkishLeagues[leagueName];\r\n      const fixtures = generateRealisticFixtures(teams);\r\n      \r\n      fixtureData[leagueName] = fixtures;\r\n      \r\n      console.log(`${leagueName} fikstürü: ${fixtures.length} maç, ${Math.max(...fixtures.map(f => f.week))} hafta`);\r\n    });\r\n  } catch (error) {\r\n    console.error('Fikstürler oluşturulamadı:', error);\r\n  }\r\n};\r\n\r\n// Fikstürleri başlangıçta oluştur\r\ninitializeFixtures();\r\n\r\nexport const standingsData = [\r\n  { pos: 1, team: 'JAEN', O: 5, G: 4, B: 0, M: 1, A: 12, Y: 6, AV: 6, PN: 12, color: '#b88c2c' },\r\n  { pos: 2, team: 'CONQUENSE', O: 5, G: 4, B: 0, M: 1, A: 10, Y: 5, AV: 5, PN: 12, color: '#2c7b2c' },\r\n  { pos: 3, team: 'LAGUN ONAK', O: 5, G: 4, B: 0, M: 1, A: 7, Y: 3, AV: 4, PN: 12 },\r\n  { pos: 4, team: 'SAGUNTINO', O: 5, G: 2, B: 3, M: 0, A: 4, Y: 2, AV: 2, PN: 9 },\r\n  { pos: 5, team: 'CIUDAD REAL', O: 5, G: 3, B: 0, M: 2, A: 5, Y: 5, AV: 0, PN: 9 },\r\n  { pos: 6, team: 'LLOSETENSE', O: 5, G: 2, B: 2, M: 1, A: 6, Y: 4, AV: 2, PN: 8 },\r\n  { pos: 7, team: 'BENIDORM', O: 5, G: 2, B: 2, M: 1, A: 6, Y: 5, AV: 1, PN: 8, color: '#fff', textColor: '#2c466b' },\r\n  { pos: 8, team: 'OLOT', O: 5, G: 2, B: 2, M: 1, A: 4, Y: 3, AV: 1, PN: 8 },\r\n  { pos: 9, team: 'VILLARROBLED', O: 5, G: 2, B: 1, M: 2, A: 6, Y: 6, AV: 0, PN: 7 },\r\n];\r\n\r\n// Menajer futbol anlayışları\r\nconst FOOTBALL_PHILOSOPHIES = {\r\n  ATTACKING: 'Hücum Futbolu',\r\n  BALANCED: 'Dengeli',\r\n  DEFENSIVE: 'Savunma Futbolu'\r\n};\r\n\r\n// Taktik formasyonları\r\nconst FORMATIONS = {\r\n  ATTACKING: ['4-4-2', '3-4-3', '4-3-3'],\r\n  BALANCED: ['4-5-1', '3-5-2'],\r\n  DEFENSIVE: ['5-4-1', '5-3-2']\r\n};\r\n\r\n// Menajer ismi oluşturma\r\nconst generateManagerName = () => {\r\n  const firstNames = ['Ahmet', 'Mehmet', 'Mustafa', 'Ali', 'Hasan', 'İbrahim', 'Yusuf', 'Murat', 'Kemal', 'Fatih', 'Halil', 'Cem', 'Burak', 'Eren', 'Emre', 'Levent', 'Uğur', 'Okan', 'Koray', 'Sinan'];\r\n  const lastNames = ['Yılmaz', 'Kaya', 'Demir', 'Çelik', 'Şahin', 'Yıldız', 'Özdemir', 'Arslan', 'Doğan', 'Kılıç', 'Aydın', 'Özkan', 'Erdoğan', 'Koç', 'Kurt', 'Aslan', 'Çetin', 'Güneş', 'Yalçın', 'Özkan'];\r\n  \r\n  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\r\n  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\r\n  \r\n  return `${firstName} ${lastName}`;\r\n};\r\n\r\n// Menajer oluşturma fonksiyonu (CSV tabanlı)\r\nconst generateManager = async (teamValue, leagueName = 'Süper Lig') => {\r\n  return await generateManagerCSV(generateManagerName(), leagueName, teamValue);\r\n};\r\n\r\n// Tüm takımların menajerlerini oluştur\r\nexport const allManagers = {};\r\n\r\n// Menajerleri async olarak yükle\r\nconst initializeManagers = async () => {\r\n  try {\r\n    // Turkish leagues yüklenene kadar bekle\r\n    await initializeTurkishLeagues();\r\n    \r\n    for (const leagueName of Object.keys(turkishLeagues)) {\r\n      allManagers[leagueName] = {};\r\n      for (const team of turkishLeagues[leagueName]) {\r\n        allManagers[leagueName][team.name] = await generateManager(team.value, leagueName);\r\n      }\r\n    }\r\n    console.log('Menajerler yüklendi');\r\n  } catch (error) {\r\n    console.error('Menajerler yüklenemedi:', error);\r\n  }\r\n};\r\n\r\n// Menajerleri başlangıçta yükle\r\ninitializeManagers();\r\n\r\n// Haftalık gider hesaplama fonksiyonu\r\nexport const calculateWeeklyExpenses = (club) => {\r\n  let totalExpenses = 0;\r\n  \r\n  // Menajer maaşı\r\n  if (club.manager && club.manager.salary) {\r\n    totalExpenses += club.manager.salary;\r\n  }\r\n  \r\n  // Oyuncu maaşları\r\n  if (club.squad) {\r\n    // İlk takım oyuncuları\r\n    if (club.squad.firstTeam) {\r\n      club.squad.firstTeam.forEach(player => {\r\n        if (player.salary) {\r\n          totalExpenses += player.salary;\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Yedek oyuncular\r\n    if (club.squad.substitutes) {\r\n      club.squad.substitutes.forEach(player => {\r\n        if (player.salary) {\r\n          totalExpenses += player.salary;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Tesis giderleri - haftalık maliyetler (doğru formül)\r\n  const antrenmanWeeklyFee = Math.round(Math.pow((club.antrenman || 37) / 10, 2.5) * 10);\r\n  const altyapiWeeklyFee = Math.round(Math.pow((club.altyapi || 35) / 10, 2.5) * 10);\r\n  const facilityCosts = antrenmanWeeklyFee + altyapiWeeklyFee;\r\n  totalExpenses += facilityCosts;\r\n  \r\n  return totalExpenses;\r\n};\r\n\r\n// Hafta geçişi fonksiyonu\r\nexport const advanceWeek = (club) => {\r\n  const weeklyExpenses = calculateWeeklyExpenses(club);\r\n  const newMoney = Math.max(0, club.money - weeklyExpenses);\r\n  \r\n  return {\r\n    ...club,\r\n    money: newMoney,\r\n    gameTime: {\r\n      week: club.gameTime.week + 1,\r\n      day: 'Hafta Başı'\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}