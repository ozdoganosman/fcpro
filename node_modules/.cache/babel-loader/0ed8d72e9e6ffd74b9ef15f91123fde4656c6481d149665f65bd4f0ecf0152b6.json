{"ast":null,"code":"// CSV verilerini yükleme fonksiyonu\nconst loadCSVData=async()=>{try{const skillResponse=await fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv');const skillText=await skillResponse.text();const skillLines=skillText.split('\\n').slice(1);// Header'ı atla\nconst salaryResponse=await fetch('/Manager_Salary_Table__20_100__step_1_.csv');const salaryText=await salaryResponse.text();const salaryLines=salaryText.split('\\n').slice(1);// Header'ı atla\nconst skillData={};const salaryData={};skillLines.forEach(line=>{if(line.trim()){const[value,skill]=line.split(',');skillData[parseFloat(value)]=parseFloat(skill);}});salaryLines.forEach(line=>{if(line.trim()){const[skill,salary]=line.split(',');salaryData[parseFloat(skill)]=parseFloat(salary);}});return{skillData,salaryData};}catch(error){console.error('CSV verileri yüklenirken hata:',error);return{skillData:{},salaryData:{}};}};// Takım değerine göre önerilen menajer yeteneği\nconst getRecommendedManagerSkill=(teamValue,skillData)=>{const values=Object.keys(skillData).map(Number).sort((a,b)=>a-b);if(teamValue<=values[0])return skillData[values[0]];if(teamValue>=values[values.length-1])return skillData[values[values.length-1]];for(let i=0;i<values.length-1;i++){if(teamValue>=values[i]&&teamValue<values[i+1]){const lowerValue=values[i];const upperValue=values[i+1];const lowerSkill=skillData[lowerValue];const upperSkill=skillData[upperValue];// Linear interpolation\nconst ratio=(teamValue-lowerValue)/(upperValue-lowerValue);return lowerSkill+(upperSkill-lowerSkill)*ratio;}}return skillData[values[0]];};// Menajer yeteneğine göre maaş\nconst getManagerSalary=(skill,salaryData)=>{const skills=Object.keys(salaryData).map(Number).sort((a,b)=>a-b);if(skill<=skills[0])return salaryData[skills[0]];if(skill>=skills[skills.length-1])return salaryData[skills[skills.length-1]];for(let i=0;i<skills.length-1;i++){if(skill>=skills[i]&&skill<skills[i+1]){const lowerSkill=skills[i];const upperSkill=skills[i+1];const lowerSalary=salaryData[lowerSkill];const upperSalary=salaryData[upperSkill];// Linear interpolation\nconst ratio=(skill-lowerSkill)/(upperSkill-lowerSkill);return lowerSalary+(upperSalary-lowerSalary)*ratio;}}return salaryData[skills[0]];};// Türk menajer isimleri\nexport const turkishManagerNames=['Ahmet Yılmaz','Mehmet Kaya','Ali Demir','Mustafa Çelik','Hasan Şahin','Hüseyin Yıldız','İbrahim Yıldırım','Murat Özdemir','Ömer Arslan','Yusuf Doğan','Emre Kılıç','Can Aydın','Burak Özkan','Deniz Erdoğan','Ege Koç','Kaan Aslan','Mert Çetin','Ozan Kurt','Serkan Özkan','Tolga Şen','Uğur Güneş','Volkan Yalçın','Yasin Polat','Zeki Taş','Arda Korkmaz','Berk Özer','Cem Aktaş','Derya Keskin','Eren Türk','Furkan Güler'];// Menajer taktikleri\nexport const managerTactics=['4-4-2 Dikine Oyun','4-4-2 Pas Oyunu','3-4-3 Dikine Oyun','3-4-3 Pas Oyunu','4-3-3 Dikine Oyun','4-3-3 Pas Oyunu','3-5-2 Dikine Oyun','3-5-2 Pas Oyunu','4-2-3-1 Dikine Oyun','4-2-3-1 Pas Oyunu','5-3-2 Dikine Oyun','5-3-2 Pas Oyunu'];// Menajer oluşturma fonksiyonu (CSV tabanlı)\nexport const generateManager=async function(name,leagueName){let teamValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;const{skillData,salaryData}=await loadCSVData();// Takım değerine göre önerilen menajer ortalaması\nconst recommendedSkill=getRecommendedManagerSkill(teamValue,skillData);// M-A-T seviyelerini oluştur (ortalaması recommendedSkill olacak)\nconst variation=Math.floor(Math.random()*10)-5;// ±5 varyasyon\nconst management=Math.max(20,Math.min(99,Math.round(recommendedSkill+variation)));const attacking=Math.max(20,Math.min(99,Math.round(recommendedSkill+Math.floor(Math.random()*10)-5)));const tactical=Math.max(20,Math.min(99,Math.round(recommendedSkill+Math.floor(Math.random()*10)-5)));// Ortalama yetenek\nconst averageSkill=Math.round((management+attacking+tactical)/3);// Maaş hesapla\nconst salary=Math.round(getManagerSalary(averageSkill,salaryData));// Futbol anlayışını belirle\nconst philosophies=['Hücum Futbolu','Dengeli','Savunma Futbolu'];const philosophy=philosophies[Math.floor(Math.random()*philosophies.length)];// Anlayışa göre taktik seç\nlet formation;switch(philosophy){case'Hücum Futbolu':formation=['4-4-2','3-4-3','4-3-3'][Math.floor(Math.random()*3)];break;case'Dengeli':formation=['4-5-1','3-5-2'][Math.floor(Math.random()*2)];break;case'Savunma Futbolu':formation=['5-4-1','5-3-2'][Math.floor(Math.random()*2)];break;}// Taktik seçimi\nconst tactic=\"\".concat(formation,\" \").concat(Math.random()>0.5?'Dikine Oyun':'Pas Oyunu');// Taraftar desteği\nconst fanSupport=Math.random()>0.3?'TAMAM':'Kararsız';return{name:name,management:management,attacking:attacking,tactical:tactical,averageSkill:averageSkill,salary:salary,tactic:tactic,fanSupport:fanSupport,league:leagueName,philosophy:philosophy,formation:formation};};// 5 rastgele menajer oluşturma\nexport const generateManagerCandidates=async function(leagueName){let teamValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const candidates=[];const availableNames=[...turkishManagerNames];for(let i=0;i<5;i++){const randomIndex=Math.floor(Math.random()*availableNames.length);const managerName=availableNames[randomIndex];availableNames.splice(randomIndex,1);// İsmi listeden çıkar\nconst manager=await generateManager(managerName,leagueName,teamValue);candidates.push(manager);}return candidates;};","map":{"version":3,"names":["loadCSVData","skillResponse","fetch","skillText","text","skillLines","split","slice","salaryResponse","salaryText","salaryLines","skillData","salaryData","forEach","line","trim","value","skill","parseFloat","salary","error","console","getRecommendedManagerSkill","teamValue","values","Object","keys","map","Number","sort","a","b","length","i","lowerValue","upperValue","lowerSkill","upperSkill","ratio","getManagerSalary","skills","lowerSalary","upperSalary","turkishManagerNames","managerTactics","generateManager","name","leagueName","arguments","undefined","recommendedSkill","variation","Math","floor","random","management","max","min","round","attacking","tactical","averageSkill","philosophies","philosophy","formation","tactic","concat","fanSupport","league","generateManagerCandidates","candidates","availableNames","randomIndex","managerName","splice","manager","push"],"sources":["C:/Users/PC/fcpro/src/data/managerData.js"],"sourcesContent":["// CSV verilerini yükleme fonksiyonu\r\nconst loadCSVData = async () => {\r\n  try {\r\n    const skillResponse = await fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv');\r\n    const skillText = await skillResponse.text();\r\n    const skillLines = skillText.split('\\n').slice(1); // Header'ı atla\r\n    \r\n    const salaryResponse = await fetch('/Manager_Salary_Table__20_100__step_1_.csv');\r\n    const salaryText = await salaryResponse.text();\r\n    const salaryLines = salaryText.split('\\n').slice(1); // Header'ı atla\r\n    \r\n    const skillData = {};\r\n    const salaryData = {};\r\n    \r\n    skillLines.forEach(line => {\r\n      if (line.trim()) {\r\n        const [value, skill] = line.split(',');\r\n        skillData[parseFloat(value)] = parseFloat(skill);\r\n      }\r\n    });\r\n    \r\n    salaryLines.forEach(line => {\r\n      if (line.trim()) {\r\n        const [skill, salary] = line.split(',');\r\n        salaryData[parseFloat(skill)] = parseFloat(salary);\r\n      }\r\n    });\r\n    \r\n    return { skillData, salaryData };\r\n  } catch (error) {\r\n    console.error('CSV verileri yüklenirken hata:', error);\r\n    return { skillData: {}, salaryData: {} };\r\n  }\r\n};\r\n\r\n// Takım değerine göre önerilen menajer yeteneği\r\nconst getRecommendedManagerSkill = (teamValue, skillData) => {\r\n  const values = Object.keys(skillData).map(Number).sort((a, b) => a - b);\r\n  \r\n  if (teamValue <= values[0]) return skillData[values[0]];\r\n  if (teamValue >= values[values.length - 1]) return skillData[values[values.length - 1]];\r\n  \r\n  for (let i = 0; i < values.length - 1; i++) {\r\n    if (teamValue >= values[i] && teamValue < values[i + 1]) {\r\n      const lowerValue = values[i];\r\n      const upperValue = values[i + 1];\r\n      const lowerSkill = skillData[lowerValue];\r\n      const upperSkill = skillData[upperValue];\r\n      \r\n      // Linear interpolation\r\n      const ratio = (teamValue - lowerValue) / (upperValue - lowerValue);\r\n      return lowerSkill + (upperSkill - lowerSkill) * ratio;\r\n    }\r\n  }\r\n  \r\n  return skillData[values[0]];\r\n};\r\n\r\n// Menajer yeteneğine göre maaş\r\nconst getManagerSalary = (skill, salaryData) => {\r\n  const skills = Object.keys(salaryData).map(Number).sort((a, b) => a - b);\r\n  \r\n  if (skill <= skills[0]) return salaryData[skills[0]];\r\n  if (skill >= skills[skills.length - 1]) return salaryData[skills[skills.length - 1]];\r\n  \r\n  for (let i = 0; i < skills.length - 1; i++) {\r\n    if (skill >= skills[i] && skill < skills[i + 1]) {\r\n      const lowerSkill = skills[i];\r\n      const upperSkill = skills[i + 1];\r\n      const lowerSalary = salaryData[lowerSkill];\r\n      const upperSalary = salaryData[upperSkill];\r\n      \r\n      // Linear interpolation\r\n      const ratio = (skill - lowerSkill) / (upperSkill - lowerSkill);\r\n      return lowerSalary + (upperSalary - lowerSalary) * ratio;\r\n    }\r\n  }\r\n  \r\n  return salaryData[skills[0]];\r\n};\r\n\r\n// Türk menajer isimleri\r\nexport const turkishManagerNames = [\r\n  'Ahmet Yılmaz', 'Mehmet Kaya', 'Ali Demir', 'Mustafa Çelik', 'Hasan Şahin',\r\n  'Hüseyin Yıldız', 'İbrahim Yıldırım', 'Murat Özdemir', 'Ömer Arslan', 'Yusuf Doğan',\r\n  'Emre Kılıç', 'Can Aydın', 'Burak Özkan', 'Deniz Erdoğan', 'Ege Koç',\r\n  'Kaan Aslan', 'Mert Çetin', 'Ozan Kurt', 'Serkan Özkan', 'Tolga Şen',\r\n  'Uğur Güneş', 'Volkan Yalçın', 'Yasin Polat', 'Zeki Taş', 'Arda Korkmaz',\r\n  'Berk Özer', 'Cem Aktaş', 'Derya Keskin', 'Eren Türk', 'Furkan Güler'\r\n];\r\n\r\n// Menajer taktikleri\r\nexport const managerTactics = [\r\n  '4-4-2 Dikine Oyun',\r\n  '4-4-2 Pas Oyunu', \r\n  '3-4-3 Dikine Oyun',\r\n  '3-4-3 Pas Oyunu',\r\n  '4-3-3 Dikine Oyun',\r\n  '4-3-3 Pas Oyunu',\r\n  '3-5-2 Dikine Oyun',\r\n  '3-5-2 Pas Oyunu',\r\n  '4-2-3-1 Dikine Oyun',\r\n  '4-2-3-1 Pas Oyunu',\r\n  '5-3-2 Dikine Oyun',\r\n  '5-3-2 Pas Oyunu'\r\n];\r\n\r\n// Menajer oluşturma fonksiyonu (CSV tabanlı)\r\nexport const generateManager = async (name, leagueName, teamValue = 50) => {\r\n  const { skillData, salaryData } = await loadCSVData();\r\n  \r\n  // Takım değerine göre önerilen menajer ortalaması\r\n  const recommendedSkill = getRecommendedManagerSkill(teamValue, skillData);\r\n  \r\n  // M-A-T seviyelerini oluştur (ortalaması recommendedSkill olacak)\r\n  const variation = Math.floor(Math.random() * 10) - 5; // ±5 varyasyon\r\n  const management = Math.max(20, Math.min(99, Math.round(recommendedSkill + variation)));\r\n  const attacking = Math.max(20, Math.min(99, Math.round(recommendedSkill + Math.floor(Math.random() * 10) - 5)));\r\n  const tactical = Math.max(20, Math.min(99, Math.round(recommendedSkill + Math.floor(Math.random() * 10) - 5)));\r\n  \r\n  // Ortalama yetenek\r\n  const averageSkill = Math.round((management + attacking + tactical) / 3);\r\n  \r\n  // Maaş hesapla\r\n  const salary = Math.round(getManagerSalary(averageSkill, salaryData));\r\n  \r\n  // Futbol anlayışını belirle\r\n  const philosophies = ['Hücum Futbolu', 'Dengeli', 'Savunma Futbolu'];\r\n  const philosophy = philosophies[Math.floor(Math.random() * philosophies.length)];\r\n  \r\n  // Anlayışa göre taktik seç\r\n  let formation;\r\n  switch (philosophy) {\r\n    case 'Hücum Futbolu':\r\n      formation = ['4-4-2', '3-4-3', '4-3-3'][Math.floor(Math.random() * 3)];\r\n      break;\r\n    case 'Dengeli':\r\n      formation = ['4-5-1', '3-5-2'][Math.floor(Math.random() * 2)];\r\n      break;\r\n    case 'Savunma Futbolu':\r\n      formation = ['5-4-1', '5-3-2'][Math.floor(Math.random() * 2)];\r\n      break;\r\n  }\r\n  \r\n  // Taktik seçimi\r\n  const tactic = `${formation} ${Math.random() > 0.5 ? 'Dikine Oyun' : 'Pas Oyunu'}`;\r\n  \r\n  // Taraftar desteği\r\n  const fanSupport = Math.random() > 0.3 ? 'TAMAM' : 'Kararsız';\r\n  \r\n  return {\r\n    name: name,\r\n    management: management,\r\n    attacking: attacking,\r\n    tactical: tactical,\r\n    averageSkill: averageSkill,\r\n    salary: salary,\r\n    tactic: tactic,\r\n    fanSupport: fanSupport,\r\n    league: leagueName,\r\n    philosophy: philosophy,\r\n    formation: formation\r\n  };\r\n};\r\n\r\n// 5 rastgele menajer oluşturma\r\nexport const generateManagerCandidates = async (leagueName, teamValue = 50) => {\r\n  const candidates = [];\r\n  const availableNames = [...turkishManagerNames];\r\n  \r\n  for (let i = 0; i < 5; i++) {\r\n    const randomIndex = Math.floor(Math.random() * availableNames.length);\r\n    const managerName = availableNames[randomIndex];\r\n    availableNames.splice(randomIndex, 1); // İsmi listeden çıkar\r\n    \r\n    const manager = await generateManager(managerName, leagueName, teamValue);\r\n    candidates.push(manager);\r\n  }\r\n  \r\n  return candidates;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}