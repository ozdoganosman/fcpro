{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\fcpro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TrainingMenu from './TrainingMenu';\nimport { createClubData } from './data';\nimport './styles.css';\nimport FinanceModal from './components/FinanceModal';\nimport StandingsModal from './components/StandingsModal';\nimport FixtureModal from './components/FixtureModal';\nimport SquadModal from './components/SquadModal';\nimport TeamSelection from './components/TeamSelection';\nimport ManagerSelectionModal from './components/ManagerSelectionModal';\nimport ManagerDetailModal from './components/ManagerDetailModal';\nimport TrainingFacilitiesModal from './components/TrainingFacilitiesModal';\nimport YouthFacilitiesModal from './components/YouthFacilitiesModal';\nimport YouthSquadModal from './components/YouthSquadModal';\nimport FanSatisfactionModal from './components/FanSatisfactionModal';\nimport StadiumModal from './components/StadiumModal';\nimport PitchImprovementModal from './components/PitchImprovementModal';\nimport StadiumFacilitiesModal from './components/StadiumFacilitiesModal';\nimport TribuneUpgradeModal from './components/TribuneUpgradeModal';\nimport MatchPlayModal from './components/MatchPlayModal';\nimport OtherMatchesModal from './components/OtherMatchesModal';\nimport PlayerStatsModal from './components/PlayerStatsModal';\nimport WeeklyReportModal from './components/WeeklyReportModal';\nimport { turkishLeagues, advanceWeek, generateRealisticFixtures } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getResultColor = result => {\n  if (typeof result === 'string') {\n    if (result === 'M') return 'var(--loss)';\n    if (result === 'G') return 'var(--win)';\n    if (result === 'B') return 'var(--draw)';\n    return '#ccc';\n  } else if (typeof result === 'object' && result.homeScore !== undefined) {\n    // Yeni format: obje\n    if (result.homeScore > result.awayScore) return 'var(--win)';\n    if (result.homeScore < result.awayScore) return 'var(--loss)';\n    return 'var(--draw)';\n  }\n  return '#ccc';\n};\nfunction App() {\n  _s();\n  const [club, setClub] = useState(null);\n  const [showFixture, setShowFixture] = useState(false);\n  const [showStandings, setShowStandings] = useState(false);\n  const [showFinance, setShowFinance] = useState(false);\n  const [showSquad, setShowSquad] = useState(false);\n  const [showTrainingMenu, setShowTrainingMenu] = useState(false);\n  const [showTeamSelection, setShowTeamSelection] = useState(true);\n  const [showManagerSelection, setShowManagerSelection] = useState(false);\n  const [showManagerDetail, setShowManagerDetail] = useState(false);\n  const [showTrainingFacilities, setShowTrainingFacilities] = useState(false);\n  const [showYouthFacilities, setShowYouthFacilities] = useState(false);\n  const [showYouthSquad, setShowYouthSquad] = useState(false);\n  const [showFanSatisfaction, setShowFanSatisfaction] = useState(false);\n  const [showStadium, setShowStadium] = useState(false);\n  const [showPitchImprovement, setShowPitchImprovement] = useState(false);\n  const [showStadiumFacilities, setShowStadiumFacilities] = useState(false);\n  const [showTribuneUpgrade, setShowTribuneUpgrade] = useState(false);\n  const [selectedTribune, setSelectedTribune] = useState(null);\n  const [showMatchPlay, setShowMatchPlay] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [gameTime, setGameTime] = useState({\n    week: 1,\n    day: 'Hafta Başı'\n  });\n  const [showOtherMatches, setShowOtherMatches] = useState(false);\n  const [showPlayerStats, setShowPlayerStats] = useState(false);\n  const [showWeeklyReport, setShowWeeklyReport] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const [selectedTeamForSquad, setSelectedTeamForSquad] = useState(null);\n  const [fixtureData, setFixtureData] = useState({});\n\n  // Fikstürü başlangıçta yükle\n  useEffect(() => {\n    const loadFixtures = async () => {\n      try {\n        const fixtures = {};\n\n        // Her lig için fikstür oluştur\n        Object.keys(turkishLeagues).forEach(leagueName => {\n          const teams = turkishLeagues[leagueName];\n          const leagueFixtures = generateRealisticFixtures(teams);\n          fixtures[leagueName] = leagueFixtures;\n          console.log(`${leagueName} fikstürü: ${leagueFixtures.length} maç, ${Math.max(...leagueFixtures.map(f => f.week))} hafta`);\n        });\n        setFixtureData(fixtures);\n      } catch (error) {\n        console.error('Fikstür yüklenirken hata:', error);\n      }\n    };\n    loadFixtures();\n  }, [turkishLeagues]);\n\n  // Oyuncu istatistikleri state'i\n  const [playerStats, setPlayerStats] = useState({});\n\n  // OtherMatchesModal açıldığında diğer maçları oyna\n  useEffect(() => {\n    if (showOtherMatches && club) {\n      generateOtherTeamResults();\n    }\n  }, [showOtherMatches, club, fixtureData]);\n  const [technicalStaff, setTechnicalStaff] = useState({\n    assistant: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    physio: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    coach: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }],\n    scout: [{\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: true\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }, {\n      name: 'Boş',\n      avatar: '',\n      filled: false,\n      available: false\n    }]\n  });\n  const handleTeamSelect = async (selectedTeam, selectedLeague) => {\n    const newClubData = await createClubData(selectedTeam, selectedLeague);\n    setClub(newClubData);\n    setShowTeamSelection(false);\n    setShowManagerSelection(true); // Menajer seçim ekranını göster\n  };\n  const handleManagerSelect = manager => {\n    setSelectedManager(manager);\n    setShowManagerSelection(false);\n  };\n\n  // Hazırlık maçları - global state olarak tut\n  const [preSeasonFixtures, setPreSeasonFixtures] = useState(() => {\n    if (!club) return [];\n\n    // Rastgele takımlar seç\n    const allTeams = [];\n    Object.values(turkishLeagues).forEach(league => {\n      league.forEach(team => {\n        if (team.name !== club.name) {\n          allTeams.push(team.name);\n        }\n      });\n    });\n\n    // 3 rastgele takım seç\n    const randomTeams = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * allTeams.length);\n      randomTeams.push(allTeams[randomIndex]);\n      allTeams.splice(randomIndex, 1);\n    }\n    return [{\n      homeTeam: club.name,\n      awayTeam: randomTeams[0],\n      matchday: -1,\n      isPreSeason: true,\n      result: null,\n      played: false,\n      week: null\n    }, {\n      homeTeam: club.name,\n      awayTeam: randomTeams[1],\n      matchday: -2,\n      isPreSeason: true,\n      result: null,\n      played: false,\n      week: null\n    }, {\n      homeTeam: club.name,\n      awayTeam: randomTeams[2],\n      matchday: -3,\n      isPreSeason: true,\n      result: null,\n      played: false,\n      week: null\n    }];\n  });\n  const generateRandomMatch = () => {\n    // Bu hafta için hazırlık maçını bul\n    const currentWeek = gameTime.week;\n    const currentFixture = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && !fixture.played);\n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.awayTeam,\n        type: 'friendly',\n        fixture: currentFixture\n      };\n    }\n\n    // Eğer fikstürde yoksa rastgele takım seç\n    const teams = ['Galatasaray', 'Fenerbahçe', 'Beşiktaş', 'Trabzonspor', 'Adana Demirspor', 'Konyaspor'];\n    const randomTeam = teams[Math.floor(Math.random() * teams.length)];\n    return {\n      awayTeam: randomTeam,\n      type: 'friendly'\n    };\n  };\n  const generateOtherTeamResults = () => {\n    if (!club) return;\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    console.log(`Lig haftası ${currentWeek} için diğer maçlar oynanıyor...`);\n\n    // Tüm geçmiş haftaları da kontrol et (1'den currentWeek'e kadar)\n    let totalPlayedCount = 0;\n    const updatedFixtures = {\n      ...fixtureData\n    };\n    const updatedLeagueFixtures = [...leagueFixtures];\n\n    // 1. haftadan mevcut haftaya kadar tüm haftaları kontrol et\n    for (let week = 1; week <= currentWeek; week++) {\n      const weekFixtures = updatedLeagueFixtures.filter(fixture => fixture.week === week);\n\n      // Bu hafta kullanıcının maçı var mı?\n      const userMatchExists = weekFixtures.some(fixture => fixture.homeTeam === club.name || fixture.awayTeam === club.name);\n      console.log(`Hafta ${week}: ${weekFixtures.length} maç, kullanıcı maçı var: ${userMatchExists}`);\n\n      // Eğer bu haftada kullanıcının maçı varsa, diğer maçları da oyna\n      if (userMatchExists) {\n        let weekPlayedCount = 0;\n        weekFixtures.forEach(fixture => {\n          if (!fixture.played && fixture.homeTeam !== club.name && fixture.awayTeam !== club.name) {\n            // Rastgele skor üret (0-4 arası)\n            const homeScore = Math.floor(Math.random() * 5);\n            const awayScore = Math.floor(Math.random() * 5);\n            fixture.result = `${homeScore}-${awayScore}`;\n            fixture.played = true;\n            weekPlayedCount++;\n            totalPlayedCount++;\n            console.log(`Hafta ${week} - Diğer maç: ${fixture.homeTeam} ${homeScore}-${awayScore} ${fixture.awayTeam}`);\n          }\n        });\n        console.log(`Hafta ${week}: ${weekPlayedCount} diğer maç oynandı`);\n      }\n    }\n\n    // Güncellenmiş fikstürü state'e kaydet\n    updatedFixtures[club.league] = updatedLeagueFixtures;\n    setFixtureData(updatedFixtures);\n    console.log(`Toplam ${totalPlayedCount} diğer maç oynandı`);\n  };\n\n  // Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\n\n  const getCurrentFixture = () => {\n    // Fikstürden mevcut haftanın maçını al\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    console.log(`Lig maçı aranıyor: Hafta ${currentWeek}, ${club.league}, ${club.name}`);\n    const currentFixture = leagueFixtures.find(fixture => fixture.week === currentWeek && (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && !fixture.played);\n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.homeTeam === club.name ? currentFixture.awayTeam : currentFixture.homeTeam,\n        type: 'league',\n        fixture: currentFixture,\n        isHome: currentFixture.homeTeam === club.name\n      };\n    }\n    return null;\n  };\n\n  // Hafta sonu maç kontrolü\n  useEffect(() => {\n    if (gameTime.day === 'Hafta Sonu' && !currentMatch) {\n      // İlk 3 hafta hazırlık maçları\n      if (gameTime.week <= 3) {\n        const newMatch = generateRandomMatch();\n        setCurrentMatch(newMatch);\n      } else {\n        // 4. haftadan itibaren lig maçları\n        const fixtureMatch = getCurrentFixture();\n        if (fixtureMatch) {\n          setCurrentMatch(fixtureMatch);\n        } else {\n          // Lig maçı bulunamadıysa maç yok\n          console.log('Bu hafta için lig maçı bulunamadı');\n        }\n      }\n    }\n  }, [gameTime.day]);\n\n  // HF SONU güncelleme\n  useEffect(() => {\n    if (club) {\n      if (gameTime.day === 'Hafta Başı') {\n        club.hfSonu = `Hafta ${gameTime.week} Başı`;\n      } else if (gameTime.day === 'Hafta İçi') {\n        club.hfSonu = `Hafta ${gameTime.week} İçi`;\n      } else if (gameTime.day === 'Hafta Sonu') {\n        club.hfSonu = `Hafta ${gameTime.week} Sonu`;\n      }\n    }\n  }, [gameTime, club]);\n\n  // Hazırlık maçlarını club değiştiğinde güncelle\n  useEffect(() => {\n    if (club) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n\n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      setPreSeasonFixtures([{\n        homeTeam: club.name,\n        awayTeam: randomTeams[0],\n        matchday: -1,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[1],\n        matchday: -2,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }, {\n        homeTeam: club.name,\n        awayTeam: randomTeams[2],\n        matchday: -3,\n        isPreSeason: true,\n        result: null,\n        played: false,\n        week: null\n      }]);\n    }\n  }, [club]);\n  const handleStaffHire = (staffType, index, staffName) => {\n    // Teknik kadroyu güncelle\n    const newStaff = {\n      ...technicalStaff\n    };\n    newStaff[staffType][index] = {\n      name: staffName,\n      avatar: staffName.split(' ')[0][0],\n      filled: true,\n      available: true\n    };\n    setTechnicalStaff(newStaff);\n\n    // Menajer puanlarını güncelle\n    const updatedManager = {\n      ...selectedManager\n    };\n    if (staffType === 'assistant' || staffType === 'physio') {\n      updatedManager.management = Math.min(100, updatedManager.management + 1);\n    } else if (staffType === 'coach') {\n      updatedManager.attacking = Math.min(100, updatedManager.attacking + 1);\n    } else if (staffType === 'scout') {\n      updatedManager.tactical = Math.min(100, updatedManager.tactical + 1);\n    }\n    setSelectedManager(updatedManager);\n  };\n  const handleTrainingUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = {\n      ...club\n    };\n    updatedClub.money -= expense;\n    updatedClub.antrenman = newLevel;\n    setClub(updatedClub);\n  };\n  const handleYouthUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = {\n      ...club\n    };\n    updatedClub.money -= expense;\n    updatedClub.altyapi = newLevel;\n    setClub(updatedClub);\n  };\n\n  // Takım seçilmemişse seçim ekranını göster\n  if (showTeamSelection || !club) {\n    return /*#__PURE__*/_jsxDEV(TeamSelection, {\n      onTeamSelect: handleTeamSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 12\n    }, this);\n  }\n  if (showManagerSelection) {\n    return /*#__PURE__*/_jsxDEV(ManagerSelectionModal, {\n      setShowManagerSelection: setShowManagerSelection,\n      onManagerSelect: handleManagerSelect,\n      leagueName: club.league,\n      teamValue: club.kadro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-title\",\n        children: \"FOOTBALL CHAIRMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-ribbon\",\n        children: club.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-sub\",\n        children: [club.season, \" \\xA0|\\xA0 \", club.league, \" \\xA0|\\xA0 \", club.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowFixture(true),\n        children: [\"HF SONU\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          children: club.hfSonu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowStandings(true),\n        children: [\"L\\u0130G\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          children: [club.lig, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card white\",\n        onClick: () => setShowFinance(true),\n        children: [\"PARA\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"big\",\n          style: {\n            color: 'var(--win)'\n          },\n          children: new Intl.NumberFormat('tr-TR', {\n            style: 'currency',\n            currency: 'TRY',\n            maximumFractionDigits: 0\n          }).format(club.money)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), showFixture && /*#__PURE__*/_jsxDEV(FixtureModal, {\n      setShowFixture: setShowFixture,\n      club: club,\n      preSeasonFixtures: preSeasonFixtures,\n      onShowSquad: teamName => {\n        setSelectedTeamForSquad(teamName);\n        setShowSquad(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 23\n    }, this), showStandings && /*#__PURE__*/_jsxDEV(StandingsModal, {\n      setShowStandings: setShowStandings,\n      club: club,\n      onShowSquad: teamName => {\n        setSelectedTeamForSquad(teamName);\n        setShowSquad(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }, this), showFinance && /*#__PURE__*/_jsxDEV(FinanceModal, {\n      setShowFinance: setShowFinance,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }, this), showSquad && /*#__PURE__*/_jsxDEV(SquadModal, {\n      setShowSquad: setShowSquad,\n      club: club,\n      selectedTeam: selectedTeamForSquad,\n      playerStats: playerStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }, this), showManagerDetail && /*#__PURE__*/_jsxDEV(ManagerDetailModal, {\n      setShowManagerDetail: setShowManagerDetail,\n      selectedManager: selectedManager,\n      technicalStaff: technicalStaff,\n      onStaffHire: handleStaffHire\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }, this), showTrainingFacilities && /*#__PURE__*/_jsxDEV(TrainingFacilitiesModal, {\n      setShowTrainingFacilities: setShowTrainingFacilities,\n      club: club,\n      onUpgrade: handleTrainingUpgrade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 34\n    }, this), showYouthFacilities && /*#__PURE__*/_jsxDEV(YouthFacilitiesModal, {\n      setShowYouthFacilities: setShowYouthFacilities,\n      club: club,\n      onUpgrade: handleYouthUpgrade,\n      onShowYouthSquad: () => setShowYouthSquad(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 31\n    }, this), showYouthSquad && /*#__PURE__*/_jsxDEV(YouthSquadModal, {\n      setShowYouthSquad: setShowYouthSquad,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 26\n    }, this), showFanSatisfaction && /*#__PURE__*/_jsxDEV(FanSatisfactionModal, {\n      setShowFanSatisfaction: setShowFanSatisfaction,\n      club: club,\n      turkishLeagues: turkishLeagues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 31\n    }, this), showStadium && /*#__PURE__*/_jsxDEV(StadiumModal, {\n      setShowStadium: setShowStadium,\n      onShowFacilities: () => setShowStadiumFacilities(true),\n      onShowTribuneUpgrade: tribune => {\n        setSelectedTribune(tribune);\n        setShowTribuneUpgrade(true);\n      },\n      onShowPitchImprovement: () => setShowPitchImprovement(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 23\n    }, this), showPitchImprovement && /*#__PURE__*/_jsxDEV(PitchImprovementModal, {\n      setShowPitchImprovement: setShowPitchImprovement,\n      club: club,\n      onShowStadium: () => setShowStadium(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 32\n    }, this), showStadiumFacilities && /*#__PURE__*/_jsxDEV(StadiumFacilitiesModal, {\n      setShowStadiumFacilities: setShowStadiumFacilities,\n      onShowStadium: () => setShowStadium(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 33\n    }, this), showTribuneUpgrade && selectedTribune && /*#__PURE__*/_jsxDEV(TribuneUpgradeModal, {\n      setShowTribuneUpgrade: setShowTribuneUpgrade,\n      selectedTribune: selectedTribune,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 49\n    }, this), showMatchPlay && currentMatch && /*#__PURE__*/_jsxDEV(MatchPlayModal, {\n      setShowMatchPlay: setShowMatchPlay,\n      club: club,\n      matchData: currentMatch,\n      onMatchEnd: result => {\n        console.log('Maç sonucu:', result);\n\n        // Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\n        if (result.events) {\n          const newPlayerStats = {\n            ...playerStats\n          };\n          result.events.forEach(event => {\n            if (event.player) {\n              if (!newPlayerStats[event.player]) {\n                newPlayerStats[event.player] = {\n                  goals: 0,\n                  assists: 0,\n                  yellowCards: 0,\n                  redCards: 0,\n                  injuries: []\n                };\n              }\n\n              // Hazırlık maçlarında sadece sakatlıkları kaydet\n              if (currentMatch.type === 'friendly') {\n                if (event.type === 'injury') {\n                  const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                  newPlayerStats[event.player].injuries.push({\n                    type: event.injuryType || 'Sakatlık',\n                    matchesOut: matchesOut,\n                    week: gameTime.week\n                  });\n                }\n              } else {\n                // Lig maçlarında tüm istatistikleri kaydet\n                switch (event.type) {\n                  case 'goal':\n                    newPlayerStats[event.player].goals++;\n                    break;\n                  case 'assist':\n                    newPlayerStats[event.player].assists++;\n                    break;\n                  case 'yellow':\n                    newPlayerStats[event.player].yellowCards++;\n                    break;\n                  case 'red':\n                    newPlayerStats[event.player].redCards++;\n                    break;\n                  case 'injury':\n                    {\n                      const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                      newPlayerStats[event.player].injuries.push({\n                        type: event.injuryType || 'Sakatlık',\n                        matchesOut: matchesOut,\n                        week: gameTime.week\n                      });\n                      break;\n                    }\n                }\n              }\n            }\n          });\n          setPlayerStats(newPlayerStats);\n        }\n\n        // Maç sonucunu fikstüre ekle\n        if (currentMatch.type === 'league' && currentMatch.fixture) {\n          // Lig fikstüründen doğru maçı bul ve güncelle\n          const currentWeek = gameTime.week - 3;\n          const leagueFixtures = fixtureData[club.league] || [];\n          const fixtureToUpdate = leagueFixtures.find(f => f.week === currentWeek && (f.homeTeam === club.name && f.awayTeam === currentMatch.awayTeam || f.awayTeam === club.name && f.homeTeam === currentMatch.awayTeam));\n          if (fixtureToUpdate) {\n            // Ev sahibi/deplasman durumuna göre doğru skoru kaydet\n            if (currentMatch.isHome) {\n              // Kullanıcı ev sahibi, skor doğru\n              fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n            } else {\n              // Kullanıcı deplasman, skoru ters çevir\n              fixtureToUpdate.result = `${result.awayScore}-${result.homeScore}`;\n            }\n            fixtureToUpdate.played = true;\n            console.log('Lig maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n          }\n\n          // Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n\n          // Diğer takımların maçlarını da çalıştır\n          generateOtherTeamResults();\n        } else if (currentMatch.type === 'friendly' && currentMatch.fixture) {\n          // Hazırlık maçı sonucunu fikstüre ekle\n          const currentWeek = gameTime.week;\n\n          // Bu hafta için hazırlık maçını bul ve güncelle\n          const fixtureToUpdate = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && fixture.awayTeam === currentMatch.awayTeam);\n          if (fixtureToUpdate) {\n            fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n            fixtureToUpdate.played = true;\n            setPreSeasonFixtures([...preSeasonFixtures]); // State'i güncelle\n            console.log('Hazırlık maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n          }\n        } else if (currentMatch.type === 'friendly') {\n          // Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\n          console.log('Rastgele hazırlık maçı sonucu kaydedildi');\n        }\n\n        // Maç sonucunu kulüp geçmişine ekle\n        const matchResult = {\n          homeTeam: club.name,\n          awayTeam: currentMatch.awayTeam,\n          homeScore: result.homeScore,\n          awayScore: result.awayScore,\n          type: currentMatch.type,\n          week: gameTime.week\n        };\n        club.matchResults.push(matchResult);\n\n        // Maç tipini sakla\n        const matchType = currentMatch.type;\n        setCurrentMatch(null);\n\n        // Sadece lig maçlarından sonra diğer maç sonuçlarını göster\n        if (matchType === 'league') {\n          setShowOtherMatches(true);\n        }\n\n        // Eğer hafta sonu ise gelir-gider raporu göster\n        if (gameTime.day === 'Hafta Sonu') {\n          // Hafta geçişi yap\n          const updatedClub = advanceWeek(club);\n          setClub(updatedClub);\n          setGameTime({\n            week: updatedClub.gameTime.week,\n            day: 'Hafta Başı'\n          });\n\n          // Gelir-gider raporu göster\n          setShowWeeklyReport(true);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 41\n    }, this), showOtherMatches && /*#__PURE__*/_jsxDEV(OtherMatchesModal, {\n      setShowOtherMatches: setShowOtherMatches,\n      club: club,\n      fixtureData: fixtureData,\n      gameTime: gameTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 28\n    }, this), showPlayerStats && /*#__PURE__*/_jsxDEV(PlayerStatsModal, {\n      setShowPlayerStats: setShowPlayerStats,\n      club: club,\n      playerStats: playerStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 27\n    }, this), showWeeklyReport && /*#__PURE__*/_jsxDEV(WeeklyReportModal, {\n      setShowWeeklyReport: setShowWeeklyReport,\n      club: club\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowSquad(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"KADRO\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 16\n        }, this), (() => {\n          const allPlayers = [...club.squad.firstTeam, ...club.squad.substitutes];\n          const totalRating = allPlayers.reduce((sum, player) => sum + player.rating, 0);\n          return Math.round(totalRating / allPlayers.length);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowPlayerStats(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"\\u0130STAT\\u0130ST\\u0130K\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this), \"\\uD83D\\uDCCA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowManagerDetail(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"MENAJER\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 18\n        }, this), selectedManager ? selectedManager.name : club.menajer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowTrainingFacilities(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"ANTRENMAN\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 20\n        }, this), club.antrenman]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card navy\",\n        onClick: () => setShowYouthFacilities(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"ALTYAPI\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 18\n        }, this), club.altyapi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-grid\",\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => setShowFanSatisfaction(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"TARAFTARLAR MUTLU MU?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.2em'\n          },\n          children: [club.taraftarMutlu, \"% MENAJER\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 110\n          }, this), club.baskanMutlu, \"% BA\\u015EKAN\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => setShowStadium(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"STADYUM\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.2em'\n          },\n          children: \"\\uD83C\\uDFDF\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-card light\",\n        onClick: () => {\n          if (currentMatch) {\n            setShowMatchPlay(true);\n          } else {\n            // Zaman ilerlet\n            const nextDay = gameTime.day === 'Hafta Başı' ? 'Hafta İçi' : gameTime.day === 'Hafta İçi' ? 'Hafta Sonu' : 'Hafta Başı';\n            const nextWeek = nextDay === 'Hafta Başı' ? gameTime.week + 1 : gameTime.week;\n            setGameTime({\n              week: nextWeek,\n              day: nextDay\n            });\n          }\n        },\n        style: {\n          cursor: 'pointer',\n          background: currentMatch ? 'var(--win)' : 'var(--green)',\n          color: 'white',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          padding: '15px 30px',\n          borderRadius: '8px',\n          border: 'none'\n        },\n        children: currentMatch ? `${currentMatch.awayTeam}` : 'Devam Et'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-dots\",\n      children: club.matchResults.length > 0 ? club.matchResults.map((result, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-dot\",\n        style: {\n          background: getResultColor(result)\n        },\n        children: typeof result === 'string' ? result : `${result.homeScore}-${result.awayScore}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#ccc',\n          fontSize: '14px'\n        },\n        children: \"Hen\\xFCz ma\\xE7 oynanmad\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), showTrainingMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-modal-backdrop\",\n      children: [/*#__PURE__*/_jsxDEV(TrainingMenu, {\n        setShowTrainingMenu: setShowTrainingMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fc-btn\",\n        style: {\n          position: 'absolute',\n          top: '20px',\n          right: '20px',\n          background: 'red'\n        },\n        onClick: () => setShowTrainingMenu(false),\n        children: \"Kapat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7y4QDpvzSC6Hv5ogWyvdPl+7QGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TrainingMenu","createClubData","FinanceModal","StandingsModal","FixtureModal","SquadModal","TeamSelection","ManagerSelectionModal","ManagerDetailModal","TrainingFacilitiesModal","YouthFacilitiesModal","YouthSquadModal","FanSatisfactionModal","StadiumModal","PitchImprovementModal","StadiumFacilitiesModal","TribuneUpgradeModal","MatchPlayModal","OtherMatchesModal","PlayerStatsModal","WeeklyReportModal","turkishLeagues","advanceWeek","generateRealisticFixtures","jsxDEV","_jsxDEV","getResultColor","result","homeScore","undefined","awayScore","App","_s","club","setClub","showFixture","setShowFixture","showStandings","setShowStandings","showFinance","setShowFinance","showSquad","setShowSquad","showTrainingMenu","setShowTrainingMenu","showTeamSelection","setShowTeamSelection","showManagerSelection","setShowManagerSelection","showManagerDetail","setShowManagerDetail","showTrainingFacilities","setShowTrainingFacilities","showYouthFacilities","setShowYouthFacilities","showYouthSquad","setShowYouthSquad","showFanSatisfaction","setShowFanSatisfaction","showStadium","setShowStadium","showPitchImprovement","setShowPitchImprovement","showStadiumFacilities","setShowStadiumFacilities","showTribuneUpgrade","setShowTribuneUpgrade","selectedTribune","setSelectedTribune","showMatchPlay","setShowMatchPlay","currentMatch","setCurrentMatch","gameTime","setGameTime","week","day","showOtherMatches","setShowOtherMatches","showPlayerStats","setShowPlayerStats","showWeeklyReport","setShowWeeklyReport","selectedManager","setSelectedManager","selectedTeamForSquad","setSelectedTeamForSquad","fixtureData","setFixtureData","loadFixtures","fixtures","Object","keys","forEach","leagueName","teams","leagueFixtures","console","log","length","Math","max","map","f","error","playerStats","setPlayerStats","generateOtherTeamResults","technicalStaff","setTechnicalStaff","assistant","name","avatar","filled","available","physio","coach","scout","handleTeamSelect","selectedTeam","selectedLeague","newClubData","handleManagerSelect","manager","preSeasonFixtures","setPreSeasonFixtures","allTeams","values","league","team","push","randomTeams","i","randomIndex","floor","random","splice","homeTeam","awayTeam","matchday","isPreSeason","played","generateRandomMatch","currentWeek","currentFixture","find","fixture","abs","type","randomTeam","totalPlayedCount","updatedFixtures","updatedLeagueFixtures","weekFixtures","filter","userMatchExists","some","weekPlayedCount","getCurrentFixture","isHome","newMatch","fixtureMatch","hfSonu","handleStaffHire","staffType","index","staffName","newStaff","split","updatedManager","management","min","attacking","tactical","handleTrainingUpgrade","expense","newLevel","updatedClub","money","antrenman","handleYouthUpgrade","altyapi","onTeamSelect","fileName","_jsxFileName","lineNumber","columnNumber","onManagerSelect","teamValue","kadro","className","children","season","date","onClick","lig","style","color","Intl","NumberFormat","currency","maximumFractionDigits","format","onShowSquad","teamName","onStaffHire","onUpgrade","onShowYouthSquad","onShowFacilities","onShowTribuneUpgrade","tribune","onShowPitchImprovement","onShowStadium","matchData","onMatchEnd","events","newPlayerStats","event","player","goals","assists","yellowCards","redCards","injuries","matchesOut","injuryType","fixtureToUpdate","matchResult","matchResults","matchType","marginTop","cursor","allPlayers","squad","firstTeam","substitutes","totalRating","reduce","sum","rating","round","menajer","fontSize","taraftarMutlu","baskanMutlu","textAlign","nextDay","nextWeek","background","fontWeight","padding","borderRadius","border","idx","position","top","right","_c","$RefreshReg$"],"sources":["C:/Users/PC/fcpro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TrainingMenu from './TrainingMenu';\nimport { createClubData } from './data';\nimport './styles.css';\nimport FinanceModal from './components/FinanceModal';\nimport StandingsModal from './components/StandingsModal';\nimport FixtureModal from './components/FixtureModal';\nimport SquadModal from './components/SquadModal';\nimport TeamSelection from './components/TeamSelection';\nimport ManagerSelectionModal from './components/ManagerSelectionModal';\nimport ManagerDetailModal from './components/ManagerDetailModal';\nimport TrainingFacilitiesModal from './components/TrainingFacilitiesModal';\nimport YouthFacilitiesModal from './components/YouthFacilitiesModal';\nimport YouthSquadModal from './components/YouthSquadModal';\nimport FanSatisfactionModal from './components/FanSatisfactionModal';\nimport StadiumModal from './components/StadiumModal';\nimport PitchImprovementModal from './components/PitchImprovementModal';\nimport StadiumFacilitiesModal from './components/StadiumFacilitiesModal';\nimport TribuneUpgradeModal from './components/TribuneUpgradeModal';\nimport MatchPlayModal from './components/MatchPlayModal';\nimport OtherMatchesModal from './components/OtherMatchesModal';\nimport PlayerStatsModal from './components/PlayerStatsModal';\nimport WeeklyReportModal from './components/WeeklyReportModal';\nimport { turkishLeagues, advanceWeek, generateRealisticFixtures } from './data';\n\n\nconst getResultColor = (result) => {\n  if (typeof result === 'string') {\n    if (result === 'M') return 'var(--loss)';\n    if (result === 'G') return 'var(--win)';\n    if (result === 'B') return 'var(--draw)';\n    return '#ccc';\n  } else if (typeof result === 'object' && result.homeScore !== undefined) {\n    // Yeni format: obje\n    if (result.homeScore > result.awayScore) return 'var(--win)';\n    if (result.homeScore < result.awayScore) return 'var(--loss)';\n    return 'var(--draw)';\n  }\n  return '#ccc';\n};\n\nfunction App() {\n  const [club, setClub] = useState(null);\n  const [showFixture, setShowFixture] = useState(false);\n  const [showStandings, setShowStandings] = useState(false);\n  const [showFinance, setShowFinance] = useState(false);\n  const [showSquad, setShowSquad] = useState(false);\n  const [showTrainingMenu, setShowTrainingMenu] = useState(false);\n  const [showTeamSelection, setShowTeamSelection] = useState(true);\n  const [showManagerSelection, setShowManagerSelection] = useState(false);\n  const [showManagerDetail, setShowManagerDetail] = useState(false);\n  const [showTrainingFacilities, setShowTrainingFacilities] = useState(false);\n  const [showYouthFacilities, setShowYouthFacilities] = useState(false);\n  const [showYouthSquad, setShowYouthSquad] = useState(false);\n  const [showFanSatisfaction, setShowFanSatisfaction] = useState(false);\n  const [showStadium, setShowStadium] = useState(false);\n  const [showPitchImprovement, setShowPitchImprovement] = useState(false);\n  const [showStadiumFacilities, setShowStadiumFacilities] = useState(false);\n  const [showTribuneUpgrade, setShowTribuneUpgrade] = useState(false);\n  const [selectedTribune, setSelectedTribune] = useState(null);\n  const [showMatchPlay, setShowMatchPlay] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [gameTime, setGameTime] = useState({ week: 1, day: 'Hafta Başı' });\n  const [showOtherMatches, setShowOtherMatches] = useState(false);\n  const [showPlayerStats, setShowPlayerStats] = useState(false);\n  const [showWeeklyReport, setShowWeeklyReport] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const [selectedTeamForSquad, setSelectedTeamForSquad] = useState(null);\n  const [fixtureData, setFixtureData] = useState({});\n  \n  // Fikstürü başlangıçta yükle\n  useEffect(() => {\n    const loadFixtures = async () => {\n      try {\n        const fixtures = {};\n        \n        // Her lig için fikstür oluştur\n        Object.keys(turkishLeagues).forEach(leagueName => {\n          const teams = turkishLeagues[leagueName];\n          const leagueFixtures = generateRealisticFixtures(teams);\n          fixtures[leagueName] = leagueFixtures;\n          \n          console.log(`${leagueName} fikstürü: ${leagueFixtures.length} maç, ${Math.max(...leagueFixtures.map(f => f.week))} hafta`);\n        });\n        \n        setFixtureData(fixtures);\n      } catch (error) {\n        console.error('Fikstür yüklenirken hata:', error);\n      }\n    };\n    \n    loadFixtures();\n  }, [turkishLeagues]);\n  \n  // Oyuncu istatistikleri state'i\n  const [playerStats, setPlayerStats] = useState({});\n  \n  // OtherMatchesModal açıldığında diğer maçları oyna\n  useEffect(() => {\n    if (showOtherMatches && club) {\n      generateOtherTeamResults();\n    }\n  }, [showOtherMatches, club, fixtureData]);\n\n  const [technicalStaff, setTechnicalStaff] = useState({\n    assistant: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    physio: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    coach: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    scout: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ]\n  });\n\n  const handleTeamSelect = async (selectedTeam, selectedLeague) => {\n    const newClubData = await createClubData(selectedTeam, selectedLeague);\n    setClub(newClubData);\n    setShowTeamSelection(false);\n    setShowManagerSelection(true); // Menajer seçim ekranını göster\n  };\n\n  const handleManagerSelect = (manager) => {\n    setSelectedManager(manager);\n    setShowManagerSelection(false);\n  };\n\n\n\n  // Hazırlık maçları - global state olarak tut\n  const [preSeasonFixtures, setPreSeasonFixtures] = useState(() => {\n    if (!club) return [];\n    \n    // Rastgele takımlar seç\n    const allTeams = [];\n    Object.values(turkishLeagues).forEach(league => {\n      league.forEach(team => {\n        if (team.name !== club.name) {\n          allTeams.push(team.name);\n        }\n      });\n    });\n    \n    // 3 rastgele takım seç\n    const randomTeams = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * allTeams.length);\n      randomTeams.push(allTeams[randomIndex]);\n      allTeams.splice(randomIndex, 1);\n    }\n    \n    return [\n      { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n      { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n      { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n    ];\n  });\n\n  const generateRandomMatch = () => {\n    // Bu hafta için hazırlık maçını bul\n    const currentWeek = gameTime.week;\n    const currentFixture = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && !fixture.played);\n    \n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.awayTeam,\n        type: 'friendly',\n        fixture: currentFixture\n      };\n    }\n    \n    // Eğer fikstürde yoksa rastgele takım seç\n    const teams = ['Galatasaray', 'Fenerbahçe', 'Beşiktaş', 'Trabzonspor', 'Adana Demirspor', 'Konyaspor'];\n    const randomTeam = teams[Math.floor(Math.random() * teams.length)];\n    return {\n      awayTeam: randomTeam,\n      type: 'friendly'\n    };\n  };\n\n  const generateOtherTeamResults = () => {\n    if (!club) return;\n    \n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig haftası ${currentWeek} için diğer maçlar oynanıyor...`);\n    \n    // Tüm geçmiş haftaları da kontrol et (1'den currentWeek'e kadar)\n    let totalPlayedCount = 0;\n    const updatedFixtures = { ...fixtureData };\n    const updatedLeagueFixtures = [...leagueFixtures];\n    \n    // 1. haftadan mevcut haftaya kadar tüm haftaları kontrol et\n    for (let week = 1; week <= currentWeek; week++) {\n      const weekFixtures = updatedLeagueFixtures.filter(fixture => fixture.week === week);\n      \n      // Bu hafta kullanıcının maçı var mı?\n      const userMatchExists = weekFixtures.some(fixture => \n        fixture.homeTeam === club.name || fixture.awayTeam === club.name\n      );\n      \n      console.log(`Hafta ${week}: ${weekFixtures.length} maç, kullanıcı maçı var: ${userMatchExists}`);\n      \n      // Eğer bu haftada kullanıcının maçı varsa, diğer maçları da oyna\n      if (userMatchExists) {\n        let weekPlayedCount = 0;\n        weekFixtures.forEach(fixture => {\n          if (!fixture.played && fixture.homeTeam !== club.name && fixture.awayTeam !== club.name) {\n            // Rastgele skor üret (0-4 arası)\n            const homeScore = Math.floor(Math.random() * 5);\n            const awayScore = Math.floor(Math.random() * 5);\n            \n            fixture.result = `${homeScore}-${awayScore}`;\n            fixture.played = true;\n            weekPlayedCount++;\n            totalPlayedCount++;\n            \n            console.log(`Hafta ${week} - Diğer maç: ${fixture.homeTeam} ${homeScore}-${awayScore} ${fixture.awayTeam}`);\n          }\n        });\n        console.log(`Hafta ${week}: ${weekPlayedCount} diğer maç oynandı`);\n      }\n    }\n    \n    // Güncellenmiş fikstürü state'e kaydet\n    updatedFixtures[club.league] = updatedLeagueFixtures;\n    setFixtureData(updatedFixtures);\n    \n    console.log(`Toplam ${totalPlayedCount} diğer maç oynandı`);\n  };\n\n  // Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\n\n  const getCurrentFixture = () => {\n    // Fikstürden mevcut haftanın maçını al\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig maçı aranıyor: Hafta ${currentWeek}, ${club.league}, ${club.name}`);\n    \n    const currentFixture = leagueFixtures.find(fixture => \n      fixture.week === currentWeek && \n      (fixture.homeTeam === club.name || fixture.awayTeam === club.name) &&\n      !fixture.played\n    );\n    \n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.homeTeam === club.name ? currentFixture.awayTeam : currentFixture.homeTeam,\n        type: 'league',\n        fixture: currentFixture,\n        isHome: currentFixture.homeTeam === club.name\n      };\n    }\n    return null;\n  };\n\n  // Hafta sonu maç kontrolü\n  useEffect(() => {\n    if (gameTime.day === 'Hafta Sonu' && !currentMatch) {\n      // İlk 3 hafta hazırlık maçları\n      if (gameTime.week <= 3) {\n        const newMatch = generateRandomMatch();\n        setCurrentMatch(newMatch);\n      } else {\n        // 4. haftadan itibaren lig maçları\n        const fixtureMatch = getCurrentFixture();\n        if (fixtureMatch) {\n          setCurrentMatch(fixtureMatch);\n        } else {\n          // Lig maçı bulunamadıysa maç yok\n          console.log('Bu hafta için lig maçı bulunamadı');\n        }\n      }\n    }\n  }, [gameTime.day]);\n\n  // HF SONU güncelleme\n  useEffect(() => {\n    if (club) {\n      if (gameTime.day === 'Hafta Başı') {\n        club.hfSonu = `Hafta ${gameTime.week} Başı`;\n      } else if (gameTime.day === 'Hafta İçi') {\n        club.hfSonu = `Hafta ${gameTime.week} İçi`;\n      } else if (gameTime.day === 'Hafta Sonu') {\n        club.hfSonu = `Hafta ${gameTime.week} Sonu`;\n      }\n    }\n  }, [gameTime, club]);\n\n  // Hazırlık maçlarını club değiştiğinde güncelle\n  useEffect(() => {\n    if (club) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n      \n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      \n      setPreSeasonFixtures([\n        { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n      ]);\n    }\n  }, [club]);\n\n  const handleStaffHire = (staffType, index, staffName) => {\n    // Teknik kadroyu güncelle\n    const newStaff = { ...technicalStaff };\n    newStaff[staffType][index] = {\n      name: staffName,\n      avatar: staffName.split(' ')[0][0],\n      filled: true,\n      available: true\n    };\n    setTechnicalStaff(newStaff);\n\n    // Menajer puanlarını güncelle\n    const updatedManager = { ...selectedManager };\n    if (staffType === 'assistant' || staffType === 'physio') {\n      updatedManager.management = Math.min(100, updatedManager.management + 1);\n    } else if (staffType === 'coach') {\n      updatedManager.attacking = Math.min(100, updatedManager.attacking + 1);\n    } else if (staffType === 'scout') {\n      updatedManager.tactical = Math.min(100, updatedManager.tactical + 1);\n    }\n    setSelectedManager(updatedManager);\n  };\n\n  const handleTrainingUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.antrenman = newLevel;\n    setClub(updatedClub);\n  };\n\n  const handleYouthUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.altyapi = newLevel;\n    setClub(updatedClub);\n  };\n\n  // Takım seçilmemişse seçim ekranını göster\n  if (showTeamSelection || !club) {\n    return <TeamSelection onTeamSelect={handleTeamSelect} />;\n  }\n\n  if (showManagerSelection) {\n    return (\n      <ManagerSelectionModal \n        setShowManagerSelection={setShowManagerSelection}\n        onManagerSelect={handleManagerSelect}\n        leagueName={club.league}\n        teamValue={club.kadro}\n      />\n    );\n  }\n\n  return (\n    <div className=\"fc-container\">\n      <div className=\"fc-header\">\n        <div className=\"fc-title\">FOOTBALL CHAIRMAN</div>\n        <div className=\"fc-ribbon\">{club.name}</div>\n        <div className=\"fc-sub\">{club.season} &nbsp;|&nbsp; {club.league} &nbsp;|&nbsp; {club.date}</div>\n      </div>\n\n      <div className=\"fc-grid\">\n        <button className=\"fc-card white\" onClick={() => setShowFixture(true)}>\n          HF SONU<span className=\"big\">{club.hfSonu}</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowStandings(true)}>\n          LİG<span className=\"big\">{club.lig}.</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowFinance(true)}>\n          PARA<span className=\"big\" style={{ color: 'var(--win)' }}>{new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY', maximumFractionDigits: 0 }).format(club.money)}</span>\n        </button>\n      </div>\n\n      {showFixture && <FixtureModal \n        setShowFixture={setShowFixture} \n        club={club} \n        preSeasonFixtures={preSeasonFixtures}\n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showStandings && <StandingsModal \n        setShowStandings={setShowStandings} \n        club={club} \n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showFinance && <FinanceModal setShowFinance={setShowFinance} club={club} />}\n      {showSquad && <SquadModal \n        setShowSquad={setShowSquad} \n        club={club} \n        selectedTeam={selectedTeamForSquad}\n        playerStats={playerStats}\n      />}\n      {showManagerDetail && <ManagerDetailModal \n        setShowManagerDetail={setShowManagerDetail} \n        selectedManager={selectedManager}\n        technicalStaff={technicalStaff}\n        onStaffHire={handleStaffHire}\n      />}\n      {showTrainingFacilities && <TrainingFacilitiesModal \n        setShowTrainingFacilities={setShowTrainingFacilities}\n        club={club}\n        onUpgrade={handleTrainingUpgrade}\n      />}\n      {showYouthFacilities && <YouthFacilitiesModal \n        setShowYouthFacilities={setShowYouthFacilities}\n        club={club}\n        onUpgrade={handleYouthUpgrade}\n        onShowYouthSquad={() => setShowYouthSquad(true)}\n      />}\n      {showYouthSquad && <YouthSquadModal \n        setShowYouthSquad={setShowYouthSquad}\n        club={club}\n      />}\n      {showFanSatisfaction && <FanSatisfactionModal \n        setShowFanSatisfaction={setShowFanSatisfaction}\n        club={club}\n        turkishLeagues={turkishLeagues}\n      />}\n      {showStadium && <StadiumModal \n        setShowStadium={setShowStadium}\n        onShowFacilities={() => setShowStadiumFacilities(true)}\n        onShowTribuneUpgrade={(tribune) => {\n          setSelectedTribune(tribune);\n          setShowTribuneUpgrade(true);\n        }}\n        onShowPitchImprovement={() => setShowPitchImprovement(true)}\n      />}\n      {showPitchImprovement && <PitchImprovementModal \n        setShowPitchImprovement={setShowPitchImprovement}\n        club={club}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showStadiumFacilities && <StadiumFacilitiesModal \n        setShowStadiumFacilities={setShowStadiumFacilities}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showTribuneUpgrade && selectedTribune && <TribuneUpgradeModal \n        setShowTribuneUpgrade={setShowTribuneUpgrade}\n        selectedTribune={selectedTribune}\n        club={club}\n      />}\n      {showMatchPlay && currentMatch && <MatchPlayModal \n        setShowMatchPlay={setShowMatchPlay}\n        club={club}\n        matchData={currentMatch}\n                  onMatchEnd={(result) => {\n            console.log('Maç sonucu:', result);\n            \n            // Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\n            if (result.events) {\n              const newPlayerStats = { ...playerStats };\n              \n              result.events.forEach(event => {\n                if (event.player) {\n                  if (!newPlayerStats[event.player]) {\n                    newPlayerStats[event.player] = {\n                      goals: 0,\n                      assists: 0,\n                      yellowCards: 0,\n                      redCards: 0,\n                      injuries: []\n                    };\n                  }\n                  \n                  // Hazırlık maçlarında sadece sakatlıkları kaydet\n                  if (currentMatch.type === 'friendly') {\n                    if (event.type === 'injury') {\n                      const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                      newPlayerStats[event.player].injuries.push({\n                        type: event.injuryType || 'Sakatlık',\n                        matchesOut: matchesOut,\n                        week: gameTime.week\n                      });\n                    }\n                  } else {\n                    // Lig maçlarında tüm istatistikleri kaydet\n                    switch (event.type) {\n                      case 'goal':\n                        newPlayerStats[event.player].goals++;\n                        break;\n                      case 'assist':\n                        newPlayerStats[event.player].assists++;\n                        break;\n                      case 'yellow':\n                        newPlayerStats[event.player].yellowCards++;\n                        break;\n                      case 'red':\n                        newPlayerStats[event.player].redCards++;\n                        break;\n                      case 'injury': {\n                        const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                        newPlayerStats[event.player].injuries.push({\n                          type: event.injuryType || 'Sakatlık',\n                          matchesOut: matchesOut,\n                          week: gameTime.week\n                        });\n                        break;\n                      }\n                    }\n                  }\n                }\n              });\n              \n              setPlayerStats(newPlayerStats);\n            }\n            \n            // Maç sonucunu fikstüre ekle\n            if (currentMatch.type === 'league' && currentMatch.fixture) {\n              // Lig fikstüründen doğru maçı bul ve güncelle\n              const currentWeek = gameTime.week - 3;\n              const leagueFixtures = fixtureData[club.league] || [];\n              const fixtureToUpdate = leagueFixtures.find(f => \n                f.week === currentWeek && \n                ((f.homeTeam === club.name && f.awayTeam === currentMatch.awayTeam) ||\n                 (f.awayTeam === club.name && f.homeTeam === currentMatch.awayTeam))\n              );\n              \n              if (fixtureToUpdate) {\n                // Ev sahibi/deplasman durumuna göre doğru skoru kaydet\n                if (currentMatch.isHome) {\n                  // Kullanıcı ev sahibi, skor doğru\n                  fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                } else {\n                  // Kullanıcı deplasman, skoru ters çevir\n                  fixtureToUpdate.result = `${result.awayScore}-${result.homeScore}`;\n                }\n                fixtureToUpdate.played = true;\n                console.log('Lig maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              }\n              \n              // Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n              \n              // Diğer takımların maçlarını da çalıştır\n              generateOtherTeamResults();\n            } else if (currentMatch.type === 'friendly' && currentMatch.fixture) {\n              // Hazırlık maçı sonucunu fikstüre ekle\n              const currentWeek = gameTime.week;\n              \n              // Bu hafta için hazırlık maçını bul ve güncelle\n              const fixtureToUpdate = preSeasonFixtures.find(fixture => \n                Math.abs(fixture.matchday) === currentWeek && fixture.awayTeam === currentMatch.awayTeam\n              );\n              \n              if (fixtureToUpdate) {\n                fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                fixtureToUpdate.played = true;\n                setPreSeasonFixtures([...preSeasonFixtures]); // State'i güncelle\n                console.log('Hazırlık maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              }\n            } else if (currentMatch.type === 'friendly') {\n              // Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\n              console.log('Rastgele hazırlık maçı sonucu kaydedildi');\n            }\n            \n            // Maç sonucunu kulüp geçmişine ekle\n            const matchResult = {\n              homeTeam: club.name,\n              awayTeam: currentMatch.awayTeam,\n              homeScore: result.homeScore,\n              awayScore: result.awayScore,\n              type: currentMatch.type,\n              week: gameTime.week\n            };\n            \n            club.matchResults.push(matchResult);\n            \n            // Maç tipini sakla\n            const matchType = currentMatch.type;\n            setCurrentMatch(null);\n            \n            // Sadece lig maçlarından sonra diğer maç sonuçlarını göster\n            if (matchType === 'league') {\n              setShowOtherMatches(true);\n            }\n            \n            // Eğer hafta sonu ise gelir-gider raporu göster\n            if (gameTime.day === 'Hafta Sonu') {\n              // Hafta geçişi yap\n              const updatedClub = advanceWeek(club);\n              setClub(updatedClub);\n              setGameTime({ week: updatedClub.gameTime.week, day: 'Hafta Başı' });\n              \n              // Gelir-gider raporu göster\n              setShowWeeklyReport(true);\n            }\n          }}\n      />}\n      {showOtherMatches && <OtherMatchesModal \n        setShowOtherMatches={setShowOtherMatches}\n        club={club}\n        fixtureData={fixtureData}\n        gameTime={gameTime}\n      />}\n      {showPlayerStats && <PlayerStatsModal \n        setShowPlayerStats={setShowPlayerStats}\n        club={club}\n        playerStats={playerStats}\n      />}\n      {showWeeklyReport && <WeeklyReportModal \n        setShowWeeklyReport={setShowWeeklyReport}\n        club={club}\n      />}\n\n      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n        <button className=\"fc-card navy\" onClick={() => setShowSquad(true)} style={{ cursor: 'pointer' }}>\n          KADRO<br/>{(() => {\n            const allPlayers = [...club.squad.firstTeam, ...club.squad.substitutes];\n            const totalRating = allPlayers.reduce((sum, player) => sum + player.rating, 0);\n            return Math.round(totalRating / allPlayers.length);\n          })()}\n        </button>\n        <button className=\"fc-card navy\" onClick={() => setShowPlayerStats(true)} style={{ cursor: 'pointer' }}>\n          İSTATİSTİK<br/>📊\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowManagerDetail(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          MENAJER<br/>{selectedManager ? selectedManager.name : club.menajer}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowTrainingFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ANTRENMAN<br/>{club.antrenman}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowYouthFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ALTYAPI<br/>{club.altyapi}\n        </button>\n      </div>\n\n\n\n                      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowFanSatisfaction(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    TARAFTARLAR MUTLU MU?<br/><span style={{fontSize: '1.2em'}}>{club.taraftarMutlu}% MENAJER<br/>{club.baskanMutlu}% BAŞKAN</span>\n                  </button>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowStadium(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    STADYUM<br/><span style={{fontSize: '1.2em'}}>🏟️</span>\n                  </button>\n                </div>\n\n                {/* Zaman İlerletme Butonu */}\n                <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => {\n                      if (currentMatch) {\n                        setShowMatchPlay(true);\n                      } else {\n                        // Zaman ilerlet\n                        const nextDay = gameTime.day === 'Hafta Başı' ? 'Hafta İçi' : \n                                       gameTime.day === 'Hafta İçi' ? 'Hafta Sonu' : 'Hafta Başı';\n                        const nextWeek = nextDay === 'Hafta Başı' ? gameTime.week + 1 : gameTime.week;\n                        setGameTime({ week: nextWeek, day: nextDay });\n                      }\n                    }}\n                    style={{ \n                      cursor: 'pointer',\n                      background: currentMatch ? 'var(--win)' : 'var(--green)',\n                      color: 'white',\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      padding: '15px 30px',\n                      borderRadius: '8px',\n                      border: 'none'\n                    }}\n                  >\n                    {currentMatch ? `${currentMatch.awayTeam}` : 'Devam Et'}\n                  </button>\n                </div>\n\n      <div className=\"fc-dots\">\n        {club.matchResults.length > 0 ? (\n          club.matchResults.map((result, idx) => (\n            <div key={idx} className=\"fc-dot\" style={{ background: getResultColor(result) }}>\n              {typeof result === 'string' ? result : `${result.homeScore}-${result.awayScore}`}\n            </div>\n          ))\n        ) : (\n          <div style={{ textAlign: 'center', color: '#ccc', fontSize: '14px' }}>\n            Henüz maç oynanmadı\n          </div>\n        )}\n      </div>\n\n\n\n\n\n      {showTrainingMenu && (\n        <div className=\"fc-modal-backdrop\">\n          <TrainingMenu setShowTrainingMenu={setShowTrainingMenu} />\n          <button\n            className=\"fc-btn\"\n            style={{ position: 'absolute', top: '20px', right: '20px', background: 'red' }}\n            onClick={() => setShowTrainingMenu(false)}\n          >\n            Kapat\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}