{"ast":null,"code":"import _objectSpread from\"C:/Users/PC/fcpro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import TrainingMenu from'./TrainingMenu';import{createClubData}from'./data';import'./styles.css';import FinanceModal from'./components/FinanceModal';import StandingsModal from'./components/StandingsModal';import FixtureModal from'./components/FixtureModal';import SquadModal from'./components/SquadModal';import TeamSelection from'./components/TeamSelection';import ManagerSelectionModal from'./components/ManagerSelectionModal';import ManagerDetailModal from'./components/ManagerDetailModal';import TrainingFacilitiesModal from'./components/TrainingFacilitiesModal';import YouthFacilitiesModal from'./components/YouthFacilitiesModal';import YouthSquadModal from'./components/YouthSquadModal';import FanSatisfactionModal from'./components/FanSatisfactionModal';import StadiumModal from'./components/StadiumModal';import PitchImprovementModal from'./components/PitchImprovementModal';import StadiumFacilitiesModal from'./components/StadiumFacilitiesModal';import TribuneUpgradeModal from'./components/TribuneUpgradeModal';import MatchPlayModal from'./components/MatchPlayModal';import OtherMatchesModal from'./components/OtherMatchesModal';import PlayerStatsModal from'./components/PlayerStatsModal';import{turkishLeagues,fixtureData,advanceWeek,allManagers}from'./data';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getResultColor=result=>{if(typeof result==='string'){if(result==='M')return'var(--loss)';if(result==='G')return'var(--win)';if(result==='B')return'var(--draw)';return'#ccc';}else if(typeof result==='object'&&result.homeScore!==undefined){// Yeni format: obje\nif(result.homeScore>result.awayScore)return'var(--win)';if(result.homeScore<result.awayScore)return'var(--loss)';return'var(--draw)';}return'#ccc';};function App(){const[club,setClub]=useState(null);const[showFixture,setShowFixture]=useState(false);const[showStandings,setShowStandings]=useState(false);const[showFinance,setShowFinance]=useState(false);const[showSquad,setShowSquad]=useState(false);const[showTrainingMenu,setShowTrainingMenu]=useState(false);const[showTeamSelection,setShowTeamSelection]=useState(true);const[showManagerSelection,setShowManagerSelection]=useState(false);const[showManagerDetail,setShowManagerDetail]=useState(false);const[showTrainingFacilities,setShowTrainingFacilities]=useState(false);const[showYouthFacilities,setShowYouthFacilities]=useState(false);const[showYouthSquad,setShowYouthSquad]=useState(false);const[showFanSatisfaction,setShowFanSatisfaction]=useState(false);const[showStadium,setShowStadium]=useState(false);const[showPitchImprovement,setShowPitchImprovement]=useState(false);const[showStadiumFacilities,setShowStadiumFacilities]=useState(false);const[showTribuneUpgrade,setShowTribuneUpgrade]=useState(false);const[selectedTribune,setSelectedTribune]=useState(null);const[showMatchPlay,setShowMatchPlay]=useState(false);const[currentMatch,setCurrentMatch]=useState(null);const[gameTime,setGameTime]=useState({week:1,day:'Hafta Başı'});const[showOtherMatches,setShowOtherMatches]=useState(false);const[showPlayerStats,setShowPlayerStats]=useState(false);const[selectedManager,setSelectedManager]=useState(null);const[selectedTeamForSquad,setSelectedTeamForSquad]=useState(null);// Oyuncu istatistikleri state'i\nconst[playerStats,setPlayerStats]=useState({});const[technicalStaff,setTechnicalStaff]=useState({assistant:[{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:false}],physio:[{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:false}],coach:[{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:false},{name:'Boş',avatar:'',filled:false,available:false}],scout:[{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:true},{name:'Boş',avatar:'',filled:false,available:false},{name:'Boş',avatar:'',filled:false,available:false}]});const handleTeamSelect=async(selectedTeam,selectedLeague)=>{const newClubData=await createClubData(selectedTeam,selectedLeague);setClub(newClubData);setShowTeamSelection(false);setShowManagerSelection(true);// Menajer seçim ekranını göster\n};const handleManagerSelect=manager=>{setSelectedManager(manager);setShowManagerSelection(false);};// Hafta geçişi fonksiyonu\nconst handleWeekAdvance=()=>{if(!club)return;const updatedClub=advanceWeek(club);setClub(updatedClub);setGameTime(updatedClub.gameTime);// Hafta sonu mesajı göster\nalert(\"Hafta \".concat(club.gameTime.week,\" tamamland\\u0131!\\nHaftal\\u0131k giderler: \").concat(club.money-updatedClub.money,\"\\u20BA\\nYeni bakiye: \").concat(updatedClub.money,\"\\u20BA\"));};// Hazırlık maçları - global state olarak tut\nconst[preSeasonFixtures,setPreSeasonFixtures]=useState(()=>{if(!club)return[];// Rastgele takımlar seç\nconst allTeams=[];Object.values(turkishLeagues).forEach(league=>{league.forEach(team=>{if(team.name!==club.name){allTeams.push(team.name);}});});// 3 rastgele takım seç\nconst randomTeams=[];for(let i=0;i<3;i++){const randomIndex=Math.floor(Math.random()*allTeams.length);randomTeams.push(allTeams[randomIndex]);allTeams.splice(randomIndex,1);}return[{homeTeam:club.name,awayTeam:randomTeams[0],matchday:-1,isPreSeason:true,result:null,played:false,week:null},{homeTeam:club.name,awayTeam:randomTeams[1],matchday:-2,isPreSeason:true,result:null,played:false,week:null},{homeTeam:club.name,awayTeam:randomTeams[2],matchday:-3,isPreSeason:true,result:null,played:false,week:null}];});const generateRandomMatch=()=>{// Bu hafta için hazırlık maçını bul\nconst currentWeek=gameTime.week;const currentFixture=preSeasonFixtures.find(fixture=>Math.abs(fixture.matchday)===currentWeek&&!fixture.played);if(currentFixture){return{awayTeam:currentFixture.awayTeam,type:'friendly',fixture:currentFixture};}// Eğer fikstürde yoksa rastgele takım seç\nconst teams=['Galatasaray','Fenerbahçe','Beşiktaş','Trabzonspor','Adana Demirspor','Konyaspor'];const randomTeam=teams[Math.floor(Math.random()*teams.length)];return{awayTeam:randomTeam,type:'friendly'};};const generateOtherTeamResults=()=>{if(!club)return;const currentWeek=gameTime.week-3;// İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\nconst leagueFixtures=fixtureData[club.league]||[];console.log(\"Lig haftas\\u0131 \".concat(currentWeek,\" i\\xE7in di\\u011Fer ma\\xE7lar oynan\\u0131yor...\"));// Bu hafta için tüm maçları al\nconst weekFixtures=leagueFixtures.filter(fixture=>fixture.week===currentWeek);console.log(\"Hafta \".concat(currentWeek,\" i\\xE7in \").concat(weekFixtures.length,\" ma\\xE7 bulundu\"));// Sadece kullanıcının maçı oynanmışsa diğer maçları oyna\nconst userMatchPlayed=weekFixtures.some(fixture=>(fixture.homeTeam===club.name||fixture.awayTeam===club.name)&&fixture.played);console.log(\"Kullan\\u0131c\\u0131n\\u0131n ma\\xE7\\u0131 oynanm\\u0131\\u015F m\\u0131: \".concat(userMatchPlayed));if(!userMatchPlayed){console.log('Kullanıcının maçı henüz oynanmamış, diğer maçlar oynanmayacak');return;}// Diğer maçları oyna\nlet playedCount=0;weekFixtures.forEach(fixture=>{if(!fixture.played&&fixture.homeTeam!==club.name&&fixture.awayTeam!==club.name){// Rastgele skor üret (0-4 arası)\nconst homeScore=Math.floor(Math.random()*5);const awayScore=Math.floor(Math.random()*5);fixture.result=\"\".concat(homeScore,\"-\").concat(awayScore);fixture.played=true;playedCount++;console.log(\"Di\\u011Fer ma\\xE7: \".concat(fixture.homeTeam,\" \").concat(homeScore,\"-\").concat(awayScore,\" \").concat(fixture.awayTeam));}});console.log(\"Toplam \".concat(playedCount,\" di\\u011Fer ma\\xE7 oynand\\u0131\"));};// Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\nconst getCurrentFixture=()=>{// Fikstürden mevcut haftanın maçını al\nconst currentWeek=gameTime.week-3;// İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\nconst leagueFixtures=fixtureData[club.league]||[];console.log(\"Lig ma\\xE7\\u0131 aran\\u0131yor: Hafta \".concat(currentWeek,\", \").concat(club.league,\", \").concat(club.name));const currentFixture=leagueFixtures.find(fixture=>fixture.week===currentWeek&&(fixture.homeTeam===club.name||fixture.awayTeam===club.name)&&!fixture.played);if(currentFixture){return{awayTeam:currentFixture.homeTeam===club.name?currentFixture.awayTeam:currentFixture.homeTeam,type:'league',fixture:currentFixture,isHome:currentFixture.homeTeam===club.name};}return null;};// Hafta sonu maç kontrolü\nuseEffect(()=>{if(gameTime.day==='Hafta Sonu'&&!currentMatch){// İlk 3 hafta hazırlık maçları\nif(gameTime.week<=3){const newMatch=generateRandomMatch();setCurrentMatch(newMatch);}else{// 4. haftadan itibaren lig maçları\nconst fixtureMatch=getCurrentFixture();if(fixtureMatch){setCurrentMatch(fixtureMatch);}else{// Lig maçı bulunamadıysa maç yok\nconsole.log('Bu hafta için lig maçı bulunamadı');}}}},[gameTime.day]);// HF SONU güncelleme\nuseEffect(()=>{if(club){if(gameTime.day==='Hafta Başı'){club.hfSonu=\"Hafta \".concat(gameTime.week,\" Ba\\u015F\\u0131\");}else if(gameTime.day==='Hafta İçi'){club.hfSonu=\"Hafta \".concat(gameTime.week,\" \\u0130\\xE7i\");}else if(gameTime.day==='Hafta Sonu'){club.hfSonu=\"Hafta \".concat(gameTime.week,\" Sonu\");}}},[gameTime,club]);// Hazırlık maçlarını club değiştiğinde güncelle\nuseEffect(()=>{if(club){// Rastgele takımlar seç\nconst allTeams=[];Object.values(turkishLeagues).forEach(league=>{league.forEach(team=>{if(team.name!==club.name){allTeams.push(team.name);}});});// 3 rastgele takım seç\nconst randomTeams=[];for(let i=0;i<3;i++){const randomIndex=Math.floor(Math.random()*allTeams.length);randomTeams.push(allTeams[randomIndex]);allTeams.splice(randomIndex,1);}setPreSeasonFixtures([{homeTeam:club.name,awayTeam:randomTeams[0],matchday:-1,isPreSeason:true,result:null,played:false,week:null},{homeTeam:club.name,awayTeam:randomTeams[1],matchday:-2,isPreSeason:true,result:null,played:false,week:null},{homeTeam:club.name,awayTeam:randomTeams[2],matchday:-3,isPreSeason:true,result:null,played:false,week:null}]);}},[club]);const handleStaffHire=(staffType,index,staffName)=>{// Teknik kadroyu güncelle\nconst newStaff=_objectSpread({},technicalStaff);newStaff[staffType][index]={name:staffName,avatar:staffName.split(' ')[0][0],filled:true,available:true};setTechnicalStaff(newStaff);// Menajer puanlarını güncelle\nconst updatedManager=_objectSpread({},selectedManager);if(staffType==='assistant'||staffType==='physio'){updatedManager.management=Math.min(100,updatedManager.management+1);}else if(staffType==='coach'){updatedManager.attacking=Math.min(100,updatedManager.attacking+1);}else if(staffType==='scout'){updatedManager.tactical=Math.min(100,updatedManager.tactical+1);}setSelectedManager(updatedManager);};const handleTrainingUpgrade=(expense,newLevel)=>{// Ana paradan masrafı düş\nconst updatedClub=_objectSpread({},club);updatedClub.money-=expense;updatedClub.antrenman=newLevel;setClub(updatedClub);};const handleYouthUpgrade=(expense,newLevel)=>{// Ana paradan masrafı düş\nconst updatedClub=_objectSpread({},club);updatedClub.money-=expense;updatedClub.altyapi=newLevel;setClub(updatedClub);};// Takım seçilmemişse seçim ekranını göster\nif(showTeamSelection||!club){return/*#__PURE__*/_jsx(TeamSelection,{onTeamSelect:handleTeamSelect});}if(showManagerSelection){return/*#__PURE__*/_jsx(ManagerSelectionModal,{setShowManagerSelection:setShowManagerSelection,onManagerSelect:handleManagerSelect,leagueName:club.league,teamValue:club.kadro});}return/*#__PURE__*/_jsxs(\"div\",{className:\"fc-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fc-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fc-title\",children:\"FOOTBALL CHAIRMAN\"}),/*#__PURE__*/_jsx(\"div\",{className:\"fc-ribbon\",children:club.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"fc-sub\",children:[club.season,\" \\xA0|\\xA0 \",club.league,\" \\xA0|\\xA0 \",club.date]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fc-grid\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card white\",onClick:()=>setShowFixture(true),children:[\"HF SONU\",/*#__PURE__*/_jsx(\"span\",{className:\"big\",children:club.hfSonu})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card white\",onClick:()=>setShowStandings(true),children:[\"L\\u0130G\",/*#__PURE__*/_jsxs(\"span\",{className:\"big\",children:[club.lig,\".\"]})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card white\",onClick:()=>setShowFinance(true),children:[\"PARA\",/*#__PURE__*/_jsx(\"span\",{className:\"big\",style:{color:'var(--win)'},children:new Intl.NumberFormat('tr-TR',{style:'currency',currency:'TRY',maximumFractionDigits:0}).format(club.money)})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card green\",onClick:handleWeekAdvance,children:[\"HAFTA GE\\xC7\\u0130\\u015E\\u0130\",/*#__PURE__*/_jsx(\"span\",{className:\"big\",children:\"\\u2192\"})]})]}),showFixture&&/*#__PURE__*/_jsx(FixtureModal,{setShowFixture:setShowFixture,club:club,preSeasonFixtures:preSeasonFixtures,onShowSquad:teamName=>{setSelectedTeamForSquad(teamName);setShowSquad(true);}}),showStandings&&/*#__PURE__*/_jsx(StandingsModal,{setShowStandings:setShowStandings,club:club,onShowSquad:teamName=>{setSelectedTeamForSquad(teamName);setShowSquad(true);}}),showFinance&&/*#__PURE__*/_jsx(FinanceModal,{setShowFinance:setShowFinance,club:club}),showSquad&&/*#__PURE__*/_jsx(SquadModal,{setShowSquad:setShowSquad,club:club,selectedTeam:selectedTeamForSquad,playerStats:playerStats}),showManagerDetail&&/*#__PURE__*/_jsx(ManagerDetailModal,{setShowManagerDetail:setShowManagerDetail,selectedManager:selectedManager,technicalStaff:technicalStaff,onStaffHire:handleStaffHire}),showTrainingFacilities&&/*#__PURE__*/_jsx(TrainingFacilitiesModal,{setShowTrainingFacilities:setShowTrainingFacilities,club:club,onUpgrade:handleTrainingUpgrade}),showYouthFacilities&&/*#__PURE__*/_jsx(YouthFacilitiesModal,{setShowYouthFacilities:setShowYouthFacilities,club:club,onUpgrade:handleYouthUpgrade,onShowYouthSquad:()=>setShowYouthSquad(true)}),showYouthSquad&&/*#__PURE__*/_jsx(YouthSquadModal,{setShowYouthSquad:setShowYouthSquad,club:club}),showFanSatisfaction&&/*#__PURE__*/_jsx(FanSatisfactionModal,{setShowFanSatisfaction:setShowFanSatisfaction,club:club,turkishLeagues:turkishLeagues}),showStadium&&/*#__PURE__*/_jsx(StadiumModal,{setShowStadium:setShowStadium,onShowFacilities:()=>setShowStadiumFacilities(true),onShowTribuneUpgrade:tribune=>{setSelectedTribune(tribune);setShowTribuneUpgrade(true);},onShowPitchImprovement:()=>setShowPitchImprovement(true)}),showPitchImprovement&&/*#__PURE__*/_jsx(PitchImprovementModal,{setShowPitchImprovement:setShowPitchImprovement,club:club,onShowStadium:()=>setShowStadium(true)}),showStadiumFacilities&&/*#__PURE__*/_jsx(StadiumFacilitiesModal,{setShowStadiumFacilities:setShowStadiumFacilities,onShowStadium:()=>setShowStadium(true)}),showTribuneUpgrade&&selectedTribune&&/*#__PURE__*/_jsx(TribuneUpgradeModal,{setShowTribuneUpgrade:setShowTribuneUpgrade,selectedTribune:selectedTribune,club:club}),showMatchPlay&&currentMatch&&/*#__PURE__*/_jsx(MatchPlayModal,{setShowMatchPlay:setShowMatchPlay,club:club,matchData:currentMatch,onMatchEnd:result=>{console.log('Maç sonucu:',result);// Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\nif(result.events){const newPlayerStats=_objectSpread({},playerStats);result.events.forEach(event=>{if(event.player){if(!newPlayerStats[event.player]){newPlayerStats[event.player]={goals:0,assists:0,yellowCards:0,redCards:0,injuries:[]};}// Hazırlık maçlarında sadece sakatlıkları kaydet\nif(currentMatch.type==='friendly'){if(event.type==='injury'){const matchesOut=Math.floor(Math.random()*10)+1;// 1-10 maç\nnewPlayerStats[event.player].injuries.push({type:event.injuryType||'Sakatlık',matchesOut:matchesOut,week:gameTime.week});}}else{// Lig maçlarında tüm istatistikleri kaydet\nswitch(event.type){case'goal':newPlayerStats[event.player].goals++;break;case'assist':newPlayerStats[event.player].assists++;break;case'yellow':newPlayerStats[event.player].yellowCards++;break;case'red':newPlayerStats[event.player].redCards++;break;case'injury':{const matchesOut=Math.floor(Math.random()*10)+1;// 1-10 maç\nnewPlayerStats[event.player].injuries.push({type:event.injuryType||'Sakatlık',matchesOut:matchesOut,week:gameTime.week});break;}}}}});setPlayerStats(newPlayerStats);}// Maç sonucunu fikstüre ekle\nif(currentMatch.type==='league'&&currentMatch.fixture){// Lig fikstüründen doğru maçı bul ve güncelle\nconst currentWeek=gameTime.week-3;const leagueFixtures=fixtureData[club.league]||[];const fixtureToUpdate=leagueFixtures.find(f=>f.week===currentWeek&&(f.homeTeam===club.name&&f.awayTeam===currentMatch.awayTeam||f.awayTeam===club.name&&f.homeTeam===currentMatch.awayTeam));if(fixtureToUpdate){// Ev sahibi/deplasman durumuna göre doğru skoru kaydet\nif(currentMatch.isHome){// Kullanıcı ev sahibi, skor doğru\nfixtureToUpdate.result=\"\".concat(result.homeScore,\"-\").concat(result.awayScore);}else{// Kullanıcı deplasman, skoru ters çevir\nfixtureToUpdate.result=\"\".concat(result.awayScore,\"-\").concat(result.homeScore);}fixtureToUpdate.played=true;console.log('Lig maçı sonucu fikstüre kaydedildi:',fixtureToUpdate);}// Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n// Diğer takımların maçlarını da çalıştır (sadece kullanıcı maç yaptıktan sonra)\ngenerateOtherTeamResults();}else if(currentMatch.type==='friendly'&&currentMatch.fixture){// Hazırlık maçı sonucunu fikstüre ekle\nconst currentWeek=gameTime.week;// Bu hafta için hazırlık maçını bul ve güncelle\nconst fixtureToUpdate=preSeasonFixtures.find(fixture=>Math.abs(fixture.matchday)===currentWeek&&fixture.awayTeam===currentMatch.awayTeam);if(fixtureToUpdate){fixtureToUpdate.result=\"\".concat(result.homeScore,\"-\").concat(result.awayScore);fixtureToUpdate.played=true;setPreSeasonFixtures([...preSeasonFixtures]);// State'i güncelle\nconsole.log('Hazırlık maçı sonucu fikstüre kaydedildi:',fixtureToUpdate);}}else if(currentMatch.type==='friendly'){// Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\nconsole.log('Rastgele hazırlık maçı sonucu kaydedildi');}// Maç sonucunu kulüp geçmişine ekle\nconst matchResult={homeTeam:club.name,awayTeam:currentMatch.awayTeam,homeScore:result.homeScore,awayScore:result.awayScore,type:currentMatch.type,week:gameTime.week};club.matchResults.push(matchResult);setCurrentMatch(null);// Sadece lig maçlarından sonra diğer maç sonuçlarını göster\nif(currentMatch.type==='league'){setShowOtherMatches(true);}}}),showOtherMatches&&/*#__PURE__*/_jsx(OtherMatchesModal,{setShowOtherMatches:setShowOtherMatches,club:club,fixtureData:fixtureData,gameTime:gameTime}),showPlayerStats&&/*#__PURE__*/_jsx(PlayerStatsModal,{setShowPlayerStats:setShowPlayerStats,club:club,playerStats:playerStats}),/*#__PURE__*/_jsxs(\"div\",{className:\"fc-grid\",style:{marginTop:'10px'},children:[/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card navy\",onClick:()=>setShowSquad(true),style:{cursor:'pointer'},children:[\"KADRO\",/*#__PURE__*/_jsx(\"br\",{}),(()=>{const allPlayers=[...club.squad.firstTeam,...club.squad.substitutes];const totalRating=allPlayers.reduce((sum,player)=>sum+player.rating,0);return Math.round(totalRating/allPlayers.length);})()]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card navy\",onClick:()=>setShowPlayerStats(true),style:{cursor:'pointer'},children:[\"\\u0130STAT\\u0130ST\\u0130K\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDCCA\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card navy\",onClick:()=>setShowManagerDetail(true),style:{cursor:'pointer'},children:[\"MENAJER\",/*#__PURE__*/_jsx(\"br\",{}),selectedManager?selectedManager.name:club.menajer]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card navy\",onClick:()=>setShowTrainingFacilities(true),style:{cursor:'pointer'},children:[\"ANTRENMAN\",/*#__PURE__*/_jsx(\"br\",{}),club.antrenman]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card navy\",onClick:()=>setShowYouthFacilities(true),style:{cursor:'pointer'},children:[\"ALTYAPI\",/*#__PURE__*/_jsx(\"br\",{}),club.altyapi]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fc-grid\",style:{marginTop:'10px'},children:[/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card light\",onClick:()=>setShowFanSatisfaction(true),style:{cursor:'pointer'},children:[\"TARAFTARLAR MUTLU MU?\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'1.2em'},children:[club.taraftarMutlu,\"% MENAJER\",/*#__PURE__*/_jsx(\"br\",{}),club.baskanMutlu,\"% BA\\u015EKAN\"]})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fc-card light\",onClick:()=>setShowStadium(true),style:{cursor:'pointer'},children:[\"STADYUM\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1.2em'},children:\"\\uD83C\\uDFDF\\uFE0F\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px',textAlign:'center'},children:/*#__PURE__*/_jsx(\"button\",{className:\"fc-card light\",onClick:()=>{if(currentMatch){setShowMatchPlay(true);}else{// Zaman ilerlet\nconst nextDay=gameTime.day==='Hafta Başı'?'Hafta İçi':gameTime.day==='Hafta İçi'?'Hafta Sonu':'Hafta Başı';const nextWeek=nextDay==='Hafta Başı'?gameTime.week+1:gameTime.week;setGameTime({week:nextWeek,day:nextDay});}},style:{cursor:'pointer',background:currentMatch?'var(--win)':'var(--green)',color:'white',fontSize:'16px',fontWeight:'bold',padding:'15px 30px',borderRadius:'8px',border:'none'},children:currentMatch?\"\".concat(currentMatch.awayTeam):'Devam Et'})}),/*#__PURE__*/_jsx(\"div\",{className:\"fc-dots\",children:club.matchResults.length>0?club.matchResults.map((result,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"fc-dot\",style:{background:getResultColor(result)},children:typeof result==='string'?result:\"\".concat(result.homeScore,\"-\").concat(result.awayScore)},idx)):/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',color:'#ccc',fontSize:'14px'},children:\"Hen\\xFCz ma\\xE7 oynanmad\\u0131\"})}),showTrainingMenu&&/*#__PURE__*/_jsxs(\"div\",{className:\"fc-modal-backdrop\",children:[/*#__PURE__*/_jsx(TrainingMenu,{setShowTrainingMenu:setShowTrainingMenu}),/*#__PURE__*/_jsx(\"button\",{className:\"fc-btn\",style:{position:'absolute',top:'20px',right:'20px',background:'red'},onClick:()=>setShowTrainingMenu(false),children:\"Kapat\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TrainingMenu","createClubData","FinanceModal","StandingsModal","FixtureModal","SquadModal","TeamSelection","ManagerSelectionModal","ManagerDetailModal","TrainingFacilitiesModal","YouthFacilitiesModal","YouthSquadModal","FanSatisfactionModal","StadiumModal","PitchImprovementModal","StadiumFacilitiesModal","TribuneUpgradeModal","MatchPlayModal","OtherMatchesModal","PlayerStatsModal","turkishLeagues","fixtureData","advanceWeek","allManagers","jsx","_jsx","jsxs","_jsxs","getResultColor","result","homeScore","undefined","awayScore","App","club","setClub","showFixture","setShowFixture","showStandings","setShowStandings","showFinance","setShowFinance","showSquad","setShowSquad","showTrainingMenu","setShowTrainingMenu","showTeamSelection","setShowTeamSelection","showManagerSelection","setShowManagerSelection","showManagerDetail","setShowManagerDetail","showTrainingFacilities","setShowTrainingFacilities","showYouthFacilities","setShowYouthFacilities","showYouthSquad","setShowYouthSquad","showFanSatisfaction","setShowFanSatisfaction","showStadium","setShowStadium","showPitchImprovement","setShowPitchImprovement","showStadiumFacilities","setShowStadiumFacilities","showTribuneUpgrade","setShowTribuneUpgrade","selectedTribune","setSelectedTribune","showMatchPlay","setShowMatchPlay","currentMatch","setCurrentMatch","gameTime","setGameTime","week","day","showOtherMatches","setShowOtherMatches","showPlayerStats","setShowPlayerStats","selectedManager","setSelectedManager","selectedTeamForSquad","setSelectedTeamForSquad","playerStats","setPlayerStats","technicalStaff","setTechnicalStaff","assistant","name","avatar","filled","available","physio","coach","scout","handleTeamSelect","selectedTeam","selectedLeague","newClubData","handleManagerSelect","manager","handleWeekAdvance","updatedClub","alert","concat","money","preSeasonFixtures","setPreSeasonFixtures","allTeams","Object","values","forEach","league","team","push","randomTeams","i","randomIndex","Math","floor","random","length","splice","homeTeam","awayTeam","matchday","isPreSeason","played","generateRandomMatch","currentWeek","currentFixture","find","fixture","abs","type","teams","randomTeam","generateOtherTeamResults","leagueFixtures","console","log","weekFixtures","filter","userMatchPlayed","some","playedCount","getCurrentFixture","isHome","newMatch","fixtureMatch","hfSonu","handleStaffHire","staffType","index","staffName","newStaff","_objectSpread","split","updatedManager","management","min","attacking","tactical","handleTrainingUpgrade","expense","newLevel","antrenman","handleYouthUpgrade","altyapi","onTeamSelect","onManagerSelect","leagueName","teamValue","kadro","className","children","season","date","onClick","lig","style","color","Intl","NumberFormat","currency","maximumFractionDigits","format","onShowSquad","teamName","onStaffHire","onUpgrade","onShowYouthSquad","onShowFacilities","onShowTribuneUpgrade","tribune","onShowPitchImprovement","onShowStadium","matchData","onMatchEnd","events","newPlayerStats","event","player","goals","assists","yellowCards","redCards","injuries","matchesOut","injuryType","fixtureToUpdate","f","matchResult","matchResults","marginTop","cursor","allPlayers","squad","firstTeam","substitutes","totalRating","reduce","sum","rating","round","menajer","fontSize","taraftarMutlu","baskanMutlu","textAlign","nextDay","nextWeek","background","fontWeight","padding","borderRadius","border","map","idx","position","top","right"],"sources":["C:/Users/PC/fcpro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TrainingMenu from './TrainingMenu';\nimport { createClubData } from './data';\nimport './styles.css';\nimport FinanceModal from './components/FinanceModal';\nimport StandingsModal from './components/StandingsModal';\nimport FixtureModal from './components/FixtureModal';\nimport SquadModal from './components/SquadModal';\nimport TeamSelection from './components/TeamSelection';\nimport ManagerSelectionModal from './components/ManagerSelectionModal';\nimport ManagerDetailModal from './components/ManagerDetailModal';\nimport TrainingFacilitiesModal from './components/TrainingFacilitiesModal';\nimport YouthFacilitiesModal from './components/YouthFacilitiesModal';\nimport YouthSquadModal from './components/YouthSquadModal';\nimport FanSatisfactionModal from './components/FanSatisfactionModal';\nimport StadiumModal from './components/StadiumModal';\nimport PitchImprovementModal from './components/PitchImprovementModal';\nimport StadiumFacilitiesModal from './components/StadiumFacilitiesModal';\nimport TribuneUpgradeModal from './components/TribuneUpgradeModal';\nimport MatchPlayModal from './components/MatchPlayModal';\nimport OtherMatchesModal from './components/OtherMatchesModal';\nimport PlayerStatsModal from './components/PlayerStatsModal';\nimport { turkishLeagues, fixtureData, advanceWeek, allManagers } from './data';\n\nconst getResultColor = (result) => {\n  if (typeof result === 'string') {\n    if (result === 'M') return 'var(--loss)';\n    if (result === 'G') return 'var(--win)';\n    if (result === 'B') return 'var(--draw)';\n    return '#ccc';\n  } else if (typeof result === 'object' && result.homeScore !== undefined) {\n    // Yeni format: obje\n    if (result.homeScore > result.awayScore) return 'var(--win)';\n    if (result.homeScore < result.awayScore) return 'var(--loss)';\n    return 'var(--draw)';\n  }\n  return '#ccc';\n};\n\nfunction App() {\n  const [club, setClub] = useState(null);\n  const [showFixture, setShowFixture] = useState(false);\n  const [showStandings, setShowStandings] = useState(false);\n  const [showFinance, setShowFinance] = useState(false);\n  const [showSquad, setShowSquad] = useState(false);\n  const [showTrainingMenu, setShowTrainingMenu] = useState(false);\n  const [showTeamSelection, setShowTeamSelection] = useState(true);\n  const [showManagerSelection, setShowManagerSelection] = useState(false);\n  const [showManagerDetail, setShowManagerDetail] = useState(false);\n  const [showTrainingFacilities, setShowTrainingFacilities] = useState(false);\n  const [showYouthFacilities, setShowYouthFacilities] = useState(false);\n  const [showYouthSquad, setShowYouthSquad] = useState(false);\n  const [showFanSatisfaction, setShowFanSatisfaction] = useState(false);\n  const [showStadium, setShowStadium] = useState(false);\n  const [showPitchImprovement, setShowPitchImprovement] = useState(false);\n  const [showStadiumFacilities, setShowStadiumFacilities] = useState(false);\n  const [showTribuneUpgrade, setShowTribuneUpgrade] = useState(false);\n  const [selectedTribune, setSelectedTribune] = useState(null);\n  const [showMatchPlay, setShowMatchPlay] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [gameTime, setGameTime] = useState({ week: 1, day: 'Hafta Başı' });\n  const [showOtherMatches, setShowOtherMatches] = useState(false);\n  const [showPlayerStats, setShowPlayerStats] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const [selectedTeamForSquad, setSelectedTeamForSquad] = useState(null);\n  \n  // Oyuncu istatistikleri state'i\n  const [playerStats, setPlayerStats] = useState({});\n\n  const [technicalStaff, setTechnicalStaff] = useState({\n    assistant: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    physio: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    coach: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ],\n    scout: [\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: true },\n      { name: 'Boş', avatar: '', filled: false, available: false },\n      { name: 'Boş', avatar: '', filled: false, available: false }\n    ]\n  });\n\n  const handleTeamSelect = async (selectedTeam, selectedLeague) => {\n    const newClubData = await createClubData(selectedTeam, selectedLeague);\n    setClub(newClubData);\n    setShowTeamSelection(false);\n    setShowManagerSelection(true); // Menajer seçim ekranını göster\n  };\n\n  const handleManagerSelect = (manager) => {\n    setSelectedManager(manager);\n    setShowManagerSelection(false);\n  };\n\n  // Hafta geçişi fonksiyonu\n  const handleWeekAdvance = () => {\n    if (!club) return;\n    \n    const updatedClub = advanceWeek(club);\n    setClub(updatedClub);\n    setGameTime(updatedClub.gameTime);\n    \n    // Hafta sonu mesajı göster\n    alert(`Hafta ${club.gameTime.week} tamamlandı!\\nHaftalık giderler: ${club.money - updatedClub.money}₺\\nYeni bakiye: ${updatedClub.money}₺`);\n  };\n\n  // Hazırlık maçları - global state olarak tut\n  const [preSeasonFixtures, setPreSeasonFixtures] = useState(() => {\n    if (!club) return [];\n    \n    // Rastgele takımlar seç\n    const allTeams = [];\n    Object.values(turkishLeagues).forEach(league => {\n      league.forEach(team => {\n        if (team.name !== club.name) {\n          allTeams.push(team.name);\n        }\n      });\n    });\n    \n    // 3 rastgele takım seç\n    const randomTeams = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * allTeams.length);\n      randomTeams.push(allTeams[randomIndex]);\n      allTeams.splice(randomIndex, 1);\n    }\n    \n    return [\n      { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n      { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n      { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n    ];\n  });\n\n  const generateRandomMatch = () => {\n    // Bu hafta için hazırlık maçını bul\n    const currentWeek = gameTime.week;\n    const currentFixture = preSeasonFixtures.find(fixture => Math.abs(fixture.matchday) === currentWeek && !fixture.played);\n    \n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.awayTeam,\n        type: 'friendly',\n        fixture: currentFixture\n      };\n    }\n    \n    // Eğer fikstürde yoksa rastgele takım seç\n    const teams = ['Galatasaray', 'Fenerbahçe', 'Beşiktaş', 'Trabzonspor', 'Adana Demirspor', 'Konyaspor'];\n    const randomTeam = teams[Math.floor(Math.random() * teams.length)];\n    return {\n      awayTeam: randomTeam,\n      type: 'friendly'\n    };\n  };\n\n  const generateOtherTeamResults = () => {\n    if (!club) return;\n    \n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig haftası ${currentWeek} için diğer maçlar oynanıyor...`);\n    \n    // Bu hafta için tüm maçları al\n    const weekFixtures = leagueFixtures.filter(fixture => fixture.week === currentWeek);\n    \n    console.log(`Hafta ${currentWeek} için ${weekFixtures.length} maç bulundu`);\n    \n    // Sadece kullanıcının maçı oynanmışsa diğer maçları oyna\n    const userMatchPlayed = weekFixtures.some(fixture => \n      (fixture.homeTeam === club.name || fixture.awayTeam === club.name) && fixture.played\n    );\n    \n    console.log(`Kullanıcının maçı oynanmış mı: ${userMatchPlayed}`);\n    \n    if (!userMatchPlayed) {\n      console.log('Kullanıcının maçı henüz oynanmamış, diğer maçlar oynanmayacak');\n      return;\n    }\n    \n    // Diğer maçları oyna\n    let playedCount = 0;\n    weekFixtures.forEach(fixture => {\n      if (!fixture.played && fixture.homeTeam !== club.name && fixture.awayTeam !== club.name) {\n        // Rastgele skor üret (0-4 arası)\n        const homeScore = Math.floor(Math.random() * 5);\n        const awayScore = Math.floor(Math.random() * 5);\n        \n        fixture.result = `${homeScore}-${awayScore}`;\n        fixture.played = true;\n        playedCount++;\n        \n        console.log(`Diğer maç: ${fixture.homeTeam} ${homeScore}-${awayScore} ${fixture.awayTeam}`);\n      }\n    });\n    \n    console.log(`Toplam ${playedCount} diğer maç oynandı`);\n  };\n\n  // Lig tablosu artık fikstürden otomatik hesaplanıyor, ayrı state'e gerek yok\n\n  const getCurrentFixture = () => {\n    // Fikstürden mevcut haftanın maçını al\n    const currentWeek = gameTime.week - 3; // İlk 3 hafta hazırlık, 4. haftadan itibaren lig maçları\n    const leagueFixtures = fixtureData[club.league] || [];\n    \n    console.log(`Lig maçı aranıyor: Hafta ${currentWeek}, ${club.league}, ${club.name}`);\n    \n    const currentFixture = leagueFixtures.find(fixture => \n      fixture.week === currentWeek && \n      (fixture.homeTeam === club.name || fixture.awayTeam === club.name) &&\n      !fixture.played\n    );\n    \n    if (currentFixture) {\n      return {\n        awayTeam: currentFixture.homeTeam === club.name ? currentFixture.awayTeam : currentFixture.homeTeam,\n        type: 'league',\n        fixture: currentFixture,\n        isHome: currentFixture.homeTeam === club.name\n      };\n    }\n    return null;\n  };\n\n  // Hafta sonu maç kontrolü\n  useEffect(() => {\n    if (gameTime.day === 'Hafta Sonu' && !currentMatch) {\n      // İlk 3 hafta hazırlık maçları\n      if (gameTime.week <= 3) {\n        const newMatch = generateRandomMatch();\n        setCurrentMatch(newMatch);\n      } else {\n        // 4. haftadan itibaren lig maçları\n        const fixtureMatch = getCurrentFixture();\n        if (fixtureMatch) {\n          setCurrentMatch(fixtureMatch);\n        } else {\n          // Lig maçı bulunamadıysa maç yok\n          console.log('Bu hafta için lig maçı bulunamadı');\n        }\n      }\n    }\n  }, [gameTime.day]);\n\n  // HF SONU güncelleme\n  useEffect(() => {\n    if (club) {\n      if (gameTime.day === 'Hafta Başı') {\n        club.hfSonu = `Hafta ${gameTime.week} Başı`;\n      } else if (gameTime.day === 'Hafta İçi') {\n        club.hfSonu = `Hafta ${gameTime.week} İçi`;\n      } else if (gameTime.day === 'Hafta Sonu') {\n        club.hfSonu = `Hafta ${gameTime.week} Sonu`;\n      }\n    }\n  }, [gameTime, club]);\n\n  // Hazırlık maçlarını club değiştiğinde güncelle\n  useEffect(() => {\n    if (club) {\n      // Rastgele takımlar seç\n      const allTeams = [];\n      Object.values(turkishLeagues).forEach(league => {\n        league.forEach(team => {\n          if (team.name !== club.name) {\n            allTeams.push(team.name);\n          }\n        });\n      });\n      \n      // 3 rastgele takım seç\n      const randomTeams = [];\n      for (let i = 0; i < 3; i++) {\n        const randomIndex = Math.floor(Math.random() * allTeams.length);\n        randomTeams.push(allTeams[randomIndex]);\n        allTeams.splice(randomIndex, 1);\n      }\n      \n      setPreSeasonFixtures([\n        { homeTeam: club.name, awayTeam: randomTeams[0], matchday: -1, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[1], matchday: -2, isPreSeason: true, result: null, played: false, week: null },\n        { homeTeam: club.name, awayTeam: randomTeams[2], matchday: -3, isPreSeason: true, result: null, played: false, week: null }\n      ]);\n    }\n  }, [club]);\n\n  const handleStaffHire = (staffType, index, staffName) => {\n    // Teknik kadroyu güncelle\n    const newStaff = { ...technicalStaff };\n    newStaff[staffType][index] = {\n      name: staffName,\n      avatar: staffName.split(' ')[0][0],\n      filled: true,\n      available: true\n    };\n    setTechnicalStaff(newStaff);\n\n    // Menajer puanlarını güncelle\n    const updatedManager = { ...selectedManager };\n    if (staffType === 'assistant' || staffType === 'physio') {\n      updatedManager.management = Math.min(100, updatedManager.management + 1);\n    } else if (staffType === 'coach') {\n      updatedManager.attacking = Math.min(100, updatedManager.attacking + 1);\n    } else if (staffType === 'scout') {\n      updatedManager.tactical = Math.min(100, updatedManager.tactical + 1);\n    }\n    setSelectedManager(updatedManager);\n  };\n\n  const handleTrainingUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.antrenman = newLevel;\n    setClub(updatedClub);\n  };\n\n  const handleYouthUpgrade = (expense, newLevel) => {\n    // Ana paradan masrafı düş\n    const updatedClub = { ...club };\n    updatedClub.money -= expense;\n    updatedClub.altyapi = newLevel;\n    setClub(updatedClub);\n  };\n\n  // Takım seçilmemişse seçim ekranını göster\n  if (showTeamSelection || !club) {\n    return <TeamSelection onTeamSelect={handleTeamSelect} />;\n  }\n\n  if (showManagerSelection) {\n    return (\n      <ManagerSelectionModal \n        setShowManagerSelection={setShowManagerSelection}\n        onManagerSelect={handleManagerSelect}\n        leagueName={club.league}\n        teamValue={club.kadro}\n      />\n    );\n  }\n\n  return (\n    <div className=\"fc-container\">\n      <div className=\"fc-header\">\n        <div className=\"fc-title\">FOOTBALL CHAIRMAN</div>\n        <div className=\"fc-ribbon\">{club.name}</div>\n        <div className=\"fc-sub\">{club.season} &nbsp;|&nbsp; {club.league} &nbsp;|&nbsp; {club.date}</div>\n      </div>\n\n      <div className=\"fc-grid\">\n        <button className=\"fc-card white\" onClick={() => setShowFixture(true)}>\n          HF SONU<span className=\"big\">{club.hfSonu}</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowStandings(true)}>\n          LİG<span className=\"big\">{club.lig}.</span>\n        </button>\n        <button className=\"fc-card white\" onClick={() => setShowFinance(true)}>\n          PARA<span className=\"big\" style={{ color: 'var(--win)' }}>{new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY', maximumFractionDigits: 0 }).format(club.money)}</span>\n        </button>\n        <button className=\"fc-card green\" onClick={handleWeekAdvance}>\n          HAFTA GEÇİŞİ<span className=\"big\">→</span>\n        </button>\n      </div>\n\n      {showFixture && <FixtureModal \n        setShowFixture={setShowFixture} \n        club={club} \n        preSeasonFixtures={preSeasonFixtures}\n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showStandings && <StandingsModal \n        setShowStandings={setShowStandings} \n        club={club} \n        onShowSquad={(teamName) => {\n          setSelectedTeamForSquad(teamName);\n          setShowSquad(true);\n        }}\n      />}\n      {showFinance && <FinanceModal setShowFinance={setShowFinance} club={club} />}\n      {showSquad && <SquadModal \n        setShowSquad={setShowSquad} \n        club={club} \n        selectedTeam={selectedTeamForSquad}\n        playerStats={playerStats}\n      />}\n      {showManagerDetail && <ManagerDetailModal \n        setShowManagerDetail={setShowManagerDetail} \n        selectedManager={selectedManager}\n        technicalStaff={technicalStaff}\n        onStaffHire={handleStaffHire}\n      />}\n      {showTrainingFacilities && <TrainingFacilitiesModal \n        setShowTrainingFacilities={setShowTrainingFacilities}\n        club={club}\n        onUpgrade={handleTrainingUpgrade}\n      />}\n      {showYouthFacilities && <YouthFacilitiesModal \n        setShowYouthFacilities={setShowYouthFacilities}\n        club={club}\n        onUpgrade={handleYouthUpgrade}\n        onShowYouthSquad={() => setShowYouthSquad(true)}\n      />}\n      {showYouthSquad && <YouthSquadModal \n        setShowYouthSquad={setShowYouthSquad}\n        club={club}\n      />}\n      {showFanSatisfaction && <FanSatisfactionModal \n        setShowFanSatisfaction={setShowFanSatisfaction}\n        club={club}\n        turkishLeagues={turkishLeagues}\n      />}\n      {showStadium && <StadiumModal \n        setShowStadium={setShowStadium}\n        onShowFacilities={() => setShowStadiumFacilities(true)}\n        onShowTribuneUpgrade={(tribune) => {\n          setSelectedTribune(tribune);\n          setShowTribuneUpgrade(true);\n        }}\n        onShowPitchImprovement={() => setShowPitchImprovement(true)}\n      />}\n      {showPitchImprovement && <PitchImprovementModal \n        setShowPitchImprovement={setShowPitchImprovement}\n        club={club}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showStadiumFacilities && <StadiumFacilitiesModal \n        setShowStadiumFacilities={setShowStadiumFacilities}\n        onShowStadium={() => setShowStadium(true)}\n      />}\n      {showTribuneUpgrade && selectedTribune && <TribuneUpgradeModal \n        setShowTribuneUpgrade={setShowTribuneUpgrade}\n        selectedTribune={selectedTribune}\n        club={club}\n      />}\n      {showMatchPlay && currentMatch && <MatchPlayModal \n        setShowMatchPlay={setShowMatchPlay}\n        club={club}\n        matchData={currentMatch}\n                  onMatchEnd={(result) => {\n            console.log('Maç sonucu:', result);\n            \n            // Oyuncu istatistiklerini güncelle (hem lig hem hazırlık maçları için)\n            if (result.events) {\n              const newPlayerStats = { ...playerStats };\n              \n              result.events.forEach(event => {\n                if (event.player) {\n                  if (!newPlayerStats[event.player]) {\n                    newPlayerStats[event.player] = {\n                      goals: 0,\n                      assists: 0,\n                      yellowCards: 0,\n                      redCards: 0,\n                      injuries: []\n                    };\n                  }\n                  \n                  // Hazırlık maçlarında sadece sakatlıkları kaydet\n                  if (currentMatch.type === 'friendly') {\n                    if (event.type === 'injury') {\n                      const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                      newPlayerStats[event.player].injuries.push({\n                        type: event.injuryType || 'Sakatlık',\n                        matchesOut: matchesOut,\n                        week: gameTime.week\n                      });\n                    }\n                  } else {\n                    // Lig maçlarında tüm istatistikleri kaydet\n                    switch (event.type) {\n                      case 'goal':\n                        newPlayerStats[event.player].goals++;\n                        break;\n                      case 'assist':\n                        newPlayerStats[event.player].assists++;\n                        break;\n                      case 'yellow':\n                        newPlayerStats[event.player].yellowCards++;\n                        break;\n                      case 'red':\n                        newPlayerStats[event.player].redCards++;\n                        break;\n                      case 'injury': {\n                        const matchesOut = Math.floor(Math.random() * 10) + 1; // 1-10 maç\n                        newPlayerStats[event.player].injuries.push({\n                          type: event.injuryType || 'Sakatlık',\n                          matchesOut: matchesOut,\n                          week: gameTime.week\n                        });\n                        break;\n                      }\n                    }\n                  }\n                }\n              });\n              \n              setPlayerStats(newPlayerStats);\n            }\n            \n            // Maç sonucunu fikstüre ekle\n            if (currentMatch.type === 'league' && currentMatch.fixture) {\n              // Lig fikstüründen doğru maçı bul ve güncelle\n              const currentWeek = gameTime.week - 3;\n              const leagueFixtures = fixtureData[club.league] || [];\n              const fixtureToUpdate = leagueFixtures.find(f => \n                f.week === currentWeek && \n                ((f.homeTeam === club.name && f.awayTeam === currentMatch.awayTeam) ||\n                 (f.awayTeam === club.name && f.homeTeam === currentMatch.awayTeam))\n              );\n              \n              if (fixtureToUpdate) {\n                // Ev sahibi/deplasman durumuna göre doğru skoru kaydet\n                if (currentMatch.isHome) {\n                  // Kullanıcı ev sahibi, skor doğru\n                  fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                } else {\n                  // Kullanıcı deplasman, skoru ters çevir\n                  fixtureToUpdate.result = `${result.awayScore}-${result.homeScore}`;\n                }\n                fixtureToUpdate.played = true;\n                console.log('Lig maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              }\n              \n              // Maç sonucu fikstüre kaydedildi, lig tablosu otomatik güncellenecek\n              \n              // Diğer takımların maçlarını da çalıştır (sadece kullanıcı maç yaptıktan sonra)\n              generateOtherTeamResults();\n            } else if (currentMatch.type === 'friendly' && currentMatch.fixture) {\n              // Hazırlık maçı sonucunu fikstüre ekle\n              const currentWeek = gameTime.week;\n              \n              // Bu hafta için hazırlık maçını bul ve güncelle\n              const fixtureToUpdate = preSeasonFixtures.find(fixture => \n                Math.abs(fixture.matchday) === currentWeek && fixture.awayTeam === currentMatch.awayTeam\n              );\n              \n              if (fixtureToUpdate) {\n                fixtureToUpdate.result = `${result.homeScore}-${result.awayScore}`;\n                fixtureToUpdate.played = true;\n                setPreSeasonFixtures([...preSeasonFixtures]); // State'i güncelle\n                console.log('Hazırlık maçı sonucu fikstüre kaydedildi:', fixtureToUpdate);\n              }\n            } else if (currentMatch.type === 'friendly') {\n              // Rastgele hazırlık maçı sonucunu sadece kulüp geçmişine ekle\n              console.log('Rastgele hazırlık maçı sonucu kaydedildi');\n            }\n            \n            // Maç sonucunu kulüp geçmişine ekle\n            const matchResult = {\n              homeTeam: club.name,\n              awayTeam: currentMatch.awayTeam,\n              homeScore: result.homeScore,\n              awayScore: result.awayScore,\n              type: currentMatch.type,\n              week: gameTime.week\n            };\n            \n            club.matchResults.push(matchResult);\n            setCurrentMatch(null);\n            \n            // Sadece lig maçlarından sonra diğer maç sonuçlarını göster\n            if (currentMatch.type === 'league') {\n              setShowOtherMatches(true);\n            }\n          }}\n      />}\n      {showOtherMatches && <OtherMatchesModal \n        setShowOtherMatches={setShowOtherMatches}\n        club={club}\n        fixtureData={fixtureData}\n        gameTime={gameTime}\n      />}\n      {showPlayerStats && <PlayerStatsModal \n        setShowPlayerStats={setShowPlayerStats}\n        club={club}\n        playerStats={playerStats}\n      />}\n\n      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n        <button className=\"fc-card navy\" onClick={() => setShowSquad(true)} style={{ cursor: 'pointer' }}>\n          KADRO<br/>{(() => {\n            const allPlayers = [...club.squad.firstTeam, ...club.squad.substitutes];\n            const totalRating = allPlayers.reduce((sum, player) => sum + player.rating, 0);\n            return Math.round(totalRating / allPlayers.length);\n          })()}\n        </button>\n        <button className=\"fc-card navy\" onClick={() => setShowPlayerStats(true)} style={{ cursor: 'pointer' }}>\n          İSTATİSTİK<br/>📊\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowManagerDetail(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          MENAJER<br/>{selectedManager ? selectedManager.name : club.menajer}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowTrainingFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ANTRENMAN<br/>{club.antrenman}\n        </button>\n        <button \n          className=\"fc-card navy\" \n          onClick={() => setShowYouthFacilities(true)}\n          style={{ cursor: 'pointer' }}\n        >\n          ALTYAPI<br/>{club.altyapi}\n        </button>\n      </div>\n\n\n\n                      <div className=\"fc-grid\" style={{ marginTop: '10px' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowFanSatisfaction(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    TARAFTARLAR MUTLU MU?<br/><span style={{fontSize: '1.2em'}}>{club.taraftarMutlu}% MENAJER<br/>{club.baskanMutlu}% BAŞKAN</span>\n                  </button>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => setShowStadium(true)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    STADYUM<br/><span style={{fontSize: '1.2em'}}>🏟️</span>\n                  </button>\n                </div>\n\n                {/* Zaman İlerletme Butonu */}\n                <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                  <button\n                    className=\"fc-card light\"\n                    onClick={() => {\n                      if (currentMatch) {\n                        setShowMatchPlay(true);\n                      } else {\n                        // Zaman ilerlet\n                        const nextDay = gameTime.day === 'Hafta Başı' ? 'Hafta İçi' : \n                                       gameTime.day === 'Hafta İçi' ? 'Hafta Sonu' : 'Hafta Başı';\n                        const nextWeek = nextDay === 'Hafta Başı' ? gameTime.week + 1 : gameTime.week;\n                        setGameTime({ week: nextWeek, day: nextDay });\n                      }\n                    }}\n                    style={{ \n                      cursor: 'pointer',\n                      background: currentMatch ? 'var(--win)' : 'var(--green)',\n                      color: 'white',\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      padding: '15px 30px',\n                      borderRadius: '8px',\n                      border: 'none'\n                    }}\n                  >\n                    {currentMatch ? `${currentMatch.awayTeam}` : 'Devam Et'}\n                  </button>\n                </div>\n\n      <div className=\"fc-dots\">\n        {club.matchResults.length > 0 ? (\n          club.matchResults.map((result, idx) => (\n            <div key={idx} className=\"fc-dot\" style={{ background: getResultColor(result) }}>\n              {typeof result === 'string' ? result : `${result.homeScore}-${result.awayScore}`}\n            </div>\n          ))\n        ) : (\n          <div style={{ textAlign: 'center', color: '#ccc', fontSize: '14px' }}>\n            Henüz maç oynanmadı\n          </div>\n        )}\n      </div>\n\n\n\n\n\n      {showTrainingMenu && (\n        <div className=\"fc-modal-backdrop\">\n          <TrainingMenu setShowTrainingMenu={setShowTrainingMenu} />\n          <button\n            className=\"fc-btn\"\n            style={{ position: 'absolute', top: '20px', right: '20px', background: 'red' }}\n            onClick={() => setShowTrainingMenu(false)}\n          >\n            Kapat\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}