{"ast":null,"code":"import{turkishFirstNames,turkishLastNames,positions}from'./turkishNames';// Altyapı kadrosu oluşturma fonksiyonu\nexport const generateYouthSquad=facilityLevel=>{const youthPlayers=[];const maxRating=Math.max(10,facilityLevel-4);// Min 10, max (tesis seviyesi - 4)\n// 12 genç oyuncu oluştur (16-18 yaş arası)\nfor(let i=0;i<12;i++){const firstName=turkishFirstNames[Math.floor(Math.random()*turkishFirstNames.length)];const lastName=turkishLastNames[Math.floor(Math.random()*turkishLastNames.length)];const position=positions[Math.floor(Math.random()*positions.length)];const age=Math.floor(Math.random()*3)+16;// 16-18 yaş arası\nconst rating=Math.floor(Math.random()*(maxRating-10+1))+10;// 10 ile maxRating arası\nyouthPlayers.push({id:\"youth_\".concat(i),name:\"\".concat(firstName,\" \").concat(lastName),position:position,age:age,rating:rating});}return youthPlayers;};// Tüm takımların altyapı kadrolarını oluştur\nexport const generateAllYouthSquads=turkishLeagues=>{const allYouthSquads={};Object.keys(turkishLeagues).forEach(leagueName=>{allYouthSquads[leagueName]={};turkishLeagues[leagueName].forEach(team=>{// Her takım için sabit bir altyapı seviyesi (30-50 arası)\nconst facilityLevel=Math.floor(Math.random()*21)+30;allYouthSquads[leagueName][team.name]={squad:generateYouthSquad(facilityLevel),facilityLevel:facilityLevel};});});return allYouthSquads;};","map":{"version":3,"names":["turkishFirstNames","turkishLastNames","positions","generateYouthSquad","facilityLevel","youthPlayers","maxRating","Math","max","i","firstName","floor","random","length","lastName","position","age","rating","push","id","concat","name","generateAllYouthSquads","turkishLeagues","allYouthSquads","Object","keys","forEach","leagueName","team","squad"],"sources":["C:/Users/PC/fcpro/src/data/youthSquadGenerator.js"],"sourcesContent":["import { turkishFirstNames, turkishLastNames, positions } from './turkishNames';\r\n\r\n// Altyapı kadrosu oluşturma fonksiyonu\r\nexport const generateYouthSquad = (facilityLevel) => {\r\n  const youthPlayers = [];\r\n  const maxRating = Math.max(10, facilityLevel - 4); // Min 10, max (tesis seviyesi - 4)\r\n  \r\n  // 12 genç oyuncu oluştur (16-18 yaş arası)\r\n  for (let i = 0; i < 12; i++) {\r\n    const firstName = turkishFirstNames[Math.floor(Math.random() * turkishFirstNames.length)];\r\n    const lastName = turkishLastNames[Math.floor(Math.random() * turkishLastNames.length)];\r\n    const position = positions[Math.floor(Math.random() * positions.length)];\r\n    const age = Math.floor(Math.random() * 3) + 16; // 16-18 yaş arası\r\n    const rating = Math.floor(Math.random() * (maxRating - 10 + 1)) + 10; // 10 ile maxRating arası\r\n    \r\n    youthPlayers.push({\r\n      id: `youth_${i}`,\r\n      name: `${firstName} ${lastName}`,\r\n      position: position,\r\n      age: age,\r\n      rating: rating\r\n    });\r\n  }\r\n  \r\n  return youthPlayers;\r\n};\r\n\r\n// Tüm takımların altyapı kadrolarını oluştur\r\nexport const generateAllYouthSquads = (turkishLeagues) => {\r\n  const allYouthSquads = {};\r\n  \r\n  Object.keys(turkishLeagues).forEach(leagueName => {\r\n    allYouthSquads[leagueName] = {};\r\n    \r\n    turkishLeagues[leagueName].forEach(team => {\r\n      // Her takım için sabit bir altyapı seviyesi (30-50 arası)\r\n      const facilityLevel = Math.floor(Math.random() * 21) + 30;\r\n      allYouthSquads[leagueName][team.name] = {\r\n        squad: generateYouthSquad(facilityLevel),\r\n        facilityLevel: facilityLevel\r\n      };\r\n    });\r\n  });\r\n  \r\n  return allYouthSquads;\r\n};\r\n"],"mappings":"AAAA,OAASA,iBAAiB,CAAEC,gBAAgB,CAAEC,SAAS,KAAQ,gBAAgB,CAE/E;AACA,MAAO,MAAM,CAAAC,kBAAkB,CAAIC,aAAa,EAAK,CACnD,KAAM,CAAAC,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,CAAEJ,aAAa,CAAG,CAAC,CAAC,CAAE;AAEnD;AACA,IAAK,GAAI,CAAAK,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CAC3B,KAAM,CAAAC,SAAS,CAAGV,iBAAiB,CAACO,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAGZ,iBAAiB,CAACa,MAAM,CAAC,CAAC,CACzF,KAAM,CAAAC,QAAQ,CAAGb,gBAAgB,CAACM,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAGX,gBAAgB,CAACY,MAAM,CAAC,CAAC,CACtF,KAAM,CAAAE,QAAQ,CAAGb,SAAS,CAACK,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAGV,SAAS,CAACW,MAAM,CAAC,CAAC,CACxE,KAAM,CAAAG,GAAG,CAAGT,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,EAAE,CAAE;AAChD,KAAM,CAAAK,MAAM,CAAGV,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,EAAIN,SAAS,CAAG,EAAE,CAAG,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE;AAEtED,YAAY,CAACa,IAAI,CAAC,CAChBC,EAAE,UAAAC,MAAA,CAAWX,CAAC,CAAE,CAChBY,IAAI,IAAAD,MAAA,CAAKV,SAAS,MAAAU,MAAA,CAAIN,QAAQ,CAAE,CAChCC,QAAQ,CAAEA,QAAQ,CAClBC,GAAG,CAAEA,GAAG,CACRC,MAAM,CAAEA,MACV,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAZ,YAAY,CACrB,CAAC,CAED;AACA,MAAO,MAAM,CAAAiB,sBAAsB,CAAIC,cAAc,EAAK,CACxD,KAAM,CAAAC,cAAc,CAAG,CAAC,CAAC,CAEzBC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACI,OAAO,CAACC,UAAU,EAAI,CAChDJ,cAAc,CAACI,UAAU,CAAC,CAAG,CAAC,CAAC,CAE/BL,cAAc,CAACK,UAAU,CAAC,CAACD,OAAO,CAACE,IAAI,EAAI,CACzC;AACA,KAAM,CAAAzB,aAAa,CAAGG,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,EAAE,CACzDY,cAAc,CAACI,UAAU,CAAC,CAACC,IAAI,CAACR,IAAI,CAAC,CAAG,CACtCS,KAAK,CAAE3B,kBAAkB,CAACC,aAAa,CAAC,CACxCA,aAAa,CAAEA,aACjB,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAoB,cAAc,CACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}