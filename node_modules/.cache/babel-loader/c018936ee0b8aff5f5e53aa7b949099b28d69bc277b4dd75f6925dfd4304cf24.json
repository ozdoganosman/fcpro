{"ast":null,"code":"// CSV verilerini yükleme fonksiyonları\nconst loadCSVData = async () => {\n  try {\n    console.log('CSV verileri yükleniyor...');\n    const [kadroResponse, maasResponse] = await Promise.all([fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv'), fetch('/Manager_Salary_Table__20_100__step_1_.csv')]);\n    if (!kadroResponse.ok || !maasResponse.ok) {\n      throw new Error('CSV dosyaları yüklenemedi');\n    }\n    const kadroText = await kadroResponse.text();\n    const maasText = await maasResponse.text();\n    console.log('Kadro CSV ilk 3 satır:', kadroText.split('\\n').slice(0, 3));\n    console.log('Maaş CSV ilk 3 satır:', maasText.split('\\n').slice(0, 3));\n\n    // CSV'leri parse et\n    const kadroData = kadroText.split('\\n').slice(1).map(line => {\n      const [kadroDegeri, yetenek] = line.split(',');\n      return {\n        kadroDegeri: parseFloat(kadroDegeri),\n        yetenek: parseFloat(yetenek)\n      };\n    });\n    const maasData = maasText.split('\\n').slice(1).map(line => {\n      const [yetenek, maas] = line.split(',');\n      return {\n        yetenek: parseFloat(yetenek),\n        maas: parseFloat(maas)\n      };\n    });\n    console.log('Kadro verileri:', kadroData.slice(0, 5));\n    console.log('Maaş verileri:', maasData.slice(0, 5));\n    return {\n      kadroData,\n      maasData\n    };\n  } catch (error) {\n    console.error('CSV yükleme hatası:', error);\n    return null;\n  }\n};\n\n// Kadro değerine göre önerilen menajer yeteneği hesaplama\nconst getRecommendedManagerSkill = (kadroDegeri, kadroData) => {\n  if (!kadroData || kadroData.length === 0) return 50; // Varsayılan değer\n\n  // Tam eşleşme varsa onu döndür\n  const exactMatch = kadroData.find(data => data.kadroDegeri === kadroDegeri);\n  if (exactMatch) return exactMatch.yetenek;\n\n  // Değerleri sırala\n  const sortedData = [...kadroData].sort((a, b) => a.kadroDegeri - b.kadroDegeri);\n\n  // Değer aralığının dışındaysa en yakın değeri döndür\n  if (kadroDegeri <= sortedData[0].kadroDegeri) return sortedData[0].yetenek;\n  if (kadroDegeri >= sortedData[sortedData.length - 1].kadroDegeri) return sortedData[sortedData.length - 1].yetenek;\n\n  // İki değer arasında interpolasyon yap\n  let lower = sortedData[0];\n  let upper = sortedData[sortedData.length - 1];\n  for (let i = 0; i < sortedData.length - 1; i++) {\n    if (kadroDegeri >= sortedData[i].kadroDegeri && kadroDegeri <= sortedData[i + 1].kadroDegeri) {\n      lower = sortedData[i];\n      upper = sortedData[i + 1];\n      break;\n    }\n  }\n\n  // Linear interpolasyon\n  const ratio = (kadroDegeri - lower.kadroDegeri) / (upper.kadroDegeri - lower.kadroDegeri);\n  const interpolatedSkill = lower.yetenek + ratio * (upper.yetenek - lower.yetenek);\n  return Math.round(interpolatedSkill * 100) / 100; // 2 ondalık basamağa yuvarla\n};\n\n// Yeteneğe göre maaş hesaplama\nconst getManagerSalary = (yetenek, maasData) => {\n  if (!maasData || maasData.length === 0) return 1000; // Varsayılan değer\n\n  // En yakın yetenek değerini bul\n  let closest = maasData[0];\n  let minDiff = Math.abs(yetenek - closest.yetenek);\n  for (const data of maasData) {\n    const diff = Math.abs(yetenek - data.yetenek);\n    if (diff < minDiff) {\n      minDiff = diff;\n      closest = data;\n    }\n  }\n  return closest.maas;\n};\n\n// Türk menajer isimleri\nexport const turkishManagerNames = ['Ahmet Yılmaz', 'Mehmet Kaya', 'Ali Demir', 'Mustafa Çelik', 'Hasan Şahin', 'Hüseyin Yıldız', 'İbrahim Yıldırım', 'Murat Özdemir', 'Ömer Arslan', 'Yusuf Doğan', 'Emre Kılıç', 'Can Aydın', 'Burak Özkan', 'Deniz Erdoğan', 'Ege Koç', 'Kaan Aslan', 'Mert Çetin', 'Ozan Kurt', 'Serkan Özkan', 'Tolga Şen', 'Uğur Güneş', 'Volkan Yalçın', 'Yasin Polat', 'Zeki Taş', 'Arda Korkmaz', 'Berk Özer', 'Cem Aktaş', 'Derya Keskin', 'Eren Türk', 'Furkan Güler'];\n\n// Menajer taktikleri\nexport const managerTactics = ['4-4-2 Dikine Oyun', '4-4-2 Pas Oyunu', '3-4-3 Dikine Oyun', '3-4-3 Pas Oyunu', '4-3-3 Dikine Oyun', '4-3-3 Pas Oyunu', '3-5-2 Dikine Oyun', '3-5-2 Pas Oyunu', '4-2-3-1 Dikine Oyun', '4-2-3-1 Pas Oyunu', '5-3-2 Dikine Oyun', '5-3-2 Pas Oyunu'];\n\n// Menajer oluşturma fonksiyonu\nexport const generateManager = async (name, leagueName, teamValue = 50) => {\n  // CSV verilerini yükle\n  const csvData = await loadCSVData();\n\n  // Kadro değerine göre önerilen menajer yeteneği hesapla\n  const recommendedSkill = getRecommendedManagerSkill(teamValue, csvData === null || csvData === void 0 ? void 0 : csvData.kadroData);\n  console.log(`DEBUG: ${teamValue} kadro değeri için önerilen yetenek: ${recommendedSkill}`);\n\n  // Ortalama yetenek ±3 aralığında rastgele değer üret\n  const minSkill = Math.max(20, Math.floor(recommendedSkill - 3));\n  const maxSkill = Math.min(92, Math.ceil(recommendedSkill + 3));\n  const baseSkill = Math.floor(Math.random() * (maxSkill - minSkill + 1)) + minSkill;\n  console.log(`DEBUG: Min: ${minSkill}, Max: ${maxSkill}, Base: ${baseSkill}`);\n\n  // M, A, T değerleri (Menajerlik, Hücum, Taktik) - birbirine yakın olsun\n  const variation = Math.floor(Math.random() * 5) - 2; // -2 ile +2 arası\n  const management = Math.max(20, Math.min(92, baseSkill + variation));\n  const attacking = Math.max(20, Math.min(92, baseSkill + Math.floor(Math.random() * 3) - 1));\n  const tactical = Math.max(20, Math.min(92, baseSkill + Math.floor(Math.random() * 3) - 1));\n\n  // Ortalama yetenek\n  const averageSkill = Math.round((management + attacking + tactical) / 3);\n\n  // Maaş hesapla\n  const salary = getManagerSalary(averageSkill, csvData === null || csvData === void 0 ? void 0 : csvData.maasData);\n\n  // Taktik seçimi\n  const tactic = managerTactics[Math.floor(Math.random() * managerTactics.length)];\n\n  // Taraftar desteği\n  const fanSupport = Math.random() > 0.3 ? 'TAMAM' : 'Kararsız';\n\n  // Tazminat ödemesi\n  const hasCompensation = Math.random() > 0.4;\n  const compensation = hasCompensation ? Math.floor(Math.random() * 5) + 1 // 1-5k arası\n  : 0;\n  return {\n    name: name,\n    management: management,\n    attacking: attacking,\n    tactical: tactical,\n    averageSkill: averageSkill,\n    salary: salary,\n    tactic: tactic,\n    fanSupport: fanSupport,\n    compensation: compensation,\n    league: leagueName\n  };\n};\n\n// 5 rastgele menajer oluşturma\nexport const generateManagerCandidates = async (leagueName, teamValue = 50) => {\n  const candidates = [];\n  const availableNames = [...turkishManagerNames];\n  for (let i = 0; i < 5; i++) {\n    const randomIndex = Math.floor(Math.random() * availableNames.length);\n    const managerName = availableNames[randomIndex];\n    availableNames.splice(randomIndex, 1); // İsmi listeden çıkar\n\n    const manager = await generateManager(managerName, leagueName, teamValue);\n    candidates.push(manager);\n  }\n  return candidates;\n};","map":{"version":3,"names":["loadCSVData","console","log","kadroResponse","maasResponse","Promise","all","fetch","ok","Error","kadroText","text","maasText","split","slice","kadroData","map","line","kadroDegeri","yetenek","parseFloat","maasData","maas","error","getRecommendedManagerSkill","length","exactMatch","find","data","sortedData","sort","a","b","lower","upper","i","ratio","interpolatedSkill","Math","round","getManagerSalary","closest","minDiff","abs","diff","turkishManagerNames","managerTactics","generateManager","name","leagueName","teamValue","csvData","recommendedSkill","minSkill","max","floor","maxSkill","min","ceil","baseSkill","random","variation","management","attacking","tactical","averageSkill","salary","tactic","fanSupport","hasCompensation","compensation","league","generateManagerCandidates","candidates","availableNames","randomIndex","managerName","splice","manager","push"],"sources":["C:/Users/PC/fcpro/src/data/managerData.js"],"sourcesContent":["// CSV verilerini yükleme fonksiyonları\r\nconst loadCSVData = async () => {\r\n  try {\r\n    console.log('CSV verileri yükleniyor...');\r\n    const [kadroResponse, maasResponse] = await Promise.all([\r\n      fetch('/Kadro_Yetenek_Listesi__Vmin_2__Vmax_350__Ymin_20__Ymax_92_.csv'),\r\n      fetch('/Manager_Salary_Table__20_100__step_1_.csv')\r\n    ]);\r\n    \r\n    if (!kadroResponse.ok || !maasResponse.ok) {\r\n      throw new Error('CSV dosyaları yüklenemedi');\r\n    }\r\n    \r\n    const kadroText = await kadroResponse.text();\r\n    const maasText = await maasResponse.text();\r\n    \r\n    console.log('Kadro CSV ilk 3 satır:', kadroText.split('\\n').slice(0, 3));\r\n    console.log('Maaş CSV ilk 3 satır:', maasText.split('\\n').slice(0, 3));\r\n    \r\n    // CSV'leri parse et\r\n    const kadroData = kadroText.split('\\n').slice(1).map(line => {\r\n      const [kadroDegeri, yetenek] = line.split(',');\r\n      return { kadroDegeri: parseFloat(kadroDegeri), yetenek: parseFloat(yetenek) };\r\n    });\r\n    \r\n    const maasData = maasText.split('\\n').slice(1).map(line => {\r\n      const [yetenek, maas] = line.split(',');\r\n      return { yetenek: parseFloat(yetenek), maas: parseFloat(maas) };\r\n    });\r\n    \r\n    console.log('Kadro verileri:', kadroData.slice(0, 5));\r\n    console.log('Maaş verileri:', maasData.slice(0, 5));\r\n    \r\n    return { kadroData, maasData };\r\n  } catch (error) {\r\n    console.error('CSV yükleme hatası:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Kadro değerine göre önerilen menajer yeteneği hesaplama\r\nconst getRecommendedManagerSkill = (kadroDegeri, kadroData) => {\r\n  if (!kadroData || kadroData.length === 0) return 50; // Varsayılan değer\r\n  \r\n  // Tam eşleşme varsa onu döndür\r\n  const exactMatch = kadroData.find(data => data.kadroDegeri === kadroDegeri);\r\n  if (exactMatch) return exactMatch.yetenek;\r\n  \r\n  // Değerleri sırala\r\n  const sortedData = [...kadroData].sort((a, b) => a.kadroDegeri - b.kadroDegeri);\r\n  \r\n  // Değer aralığının dışındaysa en yakın değeri döndür\r\n  if (kadroDegeri <= sortedData[0].kadroDegeri) return sortedData[0].yetenek;\r\n  if (kadroDegeri >= sortedData[sortedData.length - 1].kadroDegeri) return sortedData[sortedData.length - 1].yetenek;\r\n  \r\n  // İki değer arasında interpolasyon yap\r\n  let lower = sortedData[0];\r\n  let upper = sortedData[sortedData.length - 1];\r\n  \r\n  for (let i = 0; i < sortedData.length - 1; i++) {\r\n    if (kadroDegeri >= sortedData[i].kadroDegeri && kadroDegeri <= sortedData[i + 1].kadroDegeri) {\r\n      lower = sortedData[i];\r\n      upper = sortedData[i + 1];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  // Linear interpolasyon\r\n  const ratio = (kadroDegeri - lower.kadroDegeri) / (upper.kadroDegeri - lower.kadroDegeri);\r\n  const interpolatedSkill = lower.yetenek + ratio * (upper.yetenek - lower.yetenek);\r\n  \r\n  return Math.round(interpolatedSkill * 100) / 100; // 2 ondalık basamağa yuvarla\r\n};\r\n\r\n// Yeteneğe göre maaş hesaplama\r\nconst getManagerSalary = (yetenek, maasData) => {\r\n  if (!maasData || maasData.length === 0) return 1000; // Varsayılan değer\r\n  \r\n  // En yakın yetenek değerini bul\r\n  let closest = maasData[0];\r\n  let minDiff = Math.abs(yetenek - closest.yetenek);\r\n  \r\n  for (const data of maasData) {\r\n    const diff = Math.abs(yetenek - data.yetenek);\r\n    if (diff < minDiff) {\r\n      minDiff = diff;\r\n      closest = data;\r\n    }\r\n  }\r\n  \r\n  return closest.maas;\r\n};\r\n\r\n// Türk menajer isimleri\r\nexport const turkishManagerNames = [\r\n  'Ahmet Yılmaz', 'Mehmet Kaya', 'Ali Demir', 'Mustafa Çelik', 'Hasan Şahin',\r\n  'Hüseyin Yıldız', 'İbrahim Yıldırım', 'Murat Özdemir', 'Ömer Arslan', 'Yusuf Doğan',\r\n  'Emre Kılıç', 'Can Aydın', 'Burak Özkan', 'Deniz Erdoğan', 'Ege Koç',\r\n  'Kaan Aslan', 'Mert Çetin', 'Ozan Kurt', 'Serkan Özkan', 'Tolga Şen',\r\n  'Uğur Güneş', 'Volkan Yalçın', 'Yasin Polat', 'Zeki Taş', 'Arda Korkmaz',\r\n  'Berk Özer', 'Cem Aktaş', 'Derya Keskin', 'Eren Türk', 'Furkan Güler'\r\n];\r\n\r\n// Menajer taktikleri\r\nexport const managerTactics = [\r\n  '4-4-2 Dikine Oyun',\r\n  '4-4-2 Pas Oyunu', \r\n  '3-4-3 Dikine Oyun',\r\n  '3-4-3 Pas Oyunu',\r\n  '4-3-3 Dikine Oyun',\r\n  '4-3-3 Pas Oyunu',\r\n  '3-5-2 Dikine Oyun',\r\n  '3-5-2 Pas Oyunu',\r\n  '4-2-3-1 Dikine Oyun',\r\n  '4-2-3-1 Pas Oyunu',\r\n  '5-3-2 Dikine Oyun',\r\n  '5-3-2 Pas Oyunu'\r\n];\r\n\r\n// Menajer oluşturma fonksiyonu\r\nexport const generateManager = async (name, leagueName, teamValue = 50) => {\r\n  // CSV verilerini yükle\r\n  const csvData = await loadCSVData();\r\n  \r\n  // Kadro değerine göre önerilen menajer yeteneği hesapla\r\n  const recommendedSkill = getRecommendedManagerSkill(teamValue, csvData?.kadroData);\r\n  \r\n  console.log(`DEBUG: ${teamValue} kadro değeri için önerilen yetenek: ${recommendedSkill}`);\r\n  \r\n  // Ortalama yetenek ±3 aralığında rastgele değer üret\r\n  const minSkill = Math.max(20, Math.floor(recommendedSkill - 3));\r\n  const maxSkill = Math.min(92, Math.ceil(recommendedSkill + 3));\r\n  const baseSkill = Math.floor(Math.random() * (maxSkill - minSkill + 1)) + minSkill;\r\n  \r\n  console.log(`DEBUG: Min: ${minSkill}, Max: ${maxSkill}, Base: ${baseSkill}`);\r\n  \r\n  // M, A, T değerleri (Menajerlik, Hücum, Taktik) - birbirine yakın olsun\r\n  const variation = Math.floor(Math.random() * 5) - 2; // -2 ile +2 arası\r\n  const management = Math.max(20, Math.min(92, baseSkill + variation));\r\n  const attacking = Math.max(20, Math.min(92, baseSkill + Math.floor(Math.random() * 3) - 1));\r\n  const tactical = Math.max(20, Math.min(92, baseSkill + Math.floor(Math.random() * 3) - 1));\r\n  \r\n  // Ortalama yetenek\r\n  const averageSkill = Math.round((management + attacking + tactical) / 3);\r\n  \r\n  // Maaş hesapla\r\n  const salary = getManagerSalary(averageSkill, csvData?.maasData);\r\n  \r\n  // Taktik seçimi\r\n  const tactic = managerTactics[Math.floor(Math.random() * managerTactics.length)];\r\n  \r\n  // Taraftar desteği\r\n  const fanSupport = Math.random() > 0.3 ? 'TAMAM' : 'Kararsız';\r\n  \r\n  // Tazminat ödemesi\r\n  const hasCompensation = Math.random() > 0.4;\r\n  const compensation = hasCompensation \r\n    ? Math.floor(Math.random() * 5) + 1 // 1-5k arası\r\n    : 0;\r\n  \r\n  return {\r\n    name: name,\r\n    management: management,\r\n    attacking: attacking,\r\n    tactical: tactical,\r\n    averageSkill: averageSkill,\r\n    salary: salary,\r\n    tactic: tactic,\r\n    fanSupport: fanSupport,\r\n    compensation: compensation,\r\n    league: leagueName\r\n  };\r\n};\r\n\r\n// 5 rastgele menajer oluşturma\r\nexport const generateManagerCandidates = async (leagueName, teamValue = 50) => {\r\n  const candidates = [];\r\n  const availableNames = [...turkishManagerNames];\r\n  \r\n  for (let i = 0; i < 5; i++) {\r\n    const randomIndex = Math.floor(Math.random() * availableNames.length);\r\n    const managerName = availableNames[randomIndex];\r\n    availableNames.splice(randomIndex, 1); // İsmi listeden çıkar\r\n    \r\n    const manager = await generateManager(managerName, leagueName, teamValue);\r\n    candidates.push(manager);\r\n  }\r\n  \r\n  return candidates;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}