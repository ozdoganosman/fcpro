{"ast":null,"code":"import { turkishFirstNames, turkishLastNames, positions } from './turkishNames';\n\n// Altyapı kadrosu oluşturma fonksiyonu\nexport const generateYouthSquad = facilityLevel => {\n  const youthPlayers = [];\n  const maxRating = Math.max(10, facilityLevel - 4); // Min 10, max (tesis seviyesi - 4)\n\n  // Debug için log\n  console.log(`Altyapı seviyesi: ${facilityLevel}, Max reyting: ${maxRating}`);\n\n  // 12 genç oyuncu oluştur (16-18 yaş arası)\n  for (let i = 0; i < 12; i++) {\n    const firstName = turkishFirstNames[Math.floor(Math.random() * turkishFirstNames.length)];\n    const lastName = turkishLastNames[Math.floor(Math.random() * turkishLastNames.length)];\n    const position = positions[Math.floor(Math.random() * positions.length)];\n    const age = Math.floor(Math.random() * 3) + 16; // 16-18 yaş arası\n    const rating = Math.floor(Math.random() * (maxRating - 10 + 1)) + 10; // 10 ile maxRating arası\n\n    youthPlayers.push({\n      id: `youth_${i}`,\n      name: `${firstName} ${lastName}`,\n      position: position,\n      age: age,\n      rating: rating\n    });\n  }\n  return youthPlayers;\n};\n\n// Tüm takımların altyapı kadrolarını oluştur\nexport const generateAllYouthSquads = turkishLeagues => {\n  const allYouthSquads = {};\n  Object.keys(turkishLeagues).forEach(leagueName => {\n    allYouthSquads[leagueName] = {};\n    turkishLeagues[leagueName].forEach(team => {\n      // Her takım için sabit bir altyapı seviyesi (30-40 arası)\n      const facilityLevel = Math.floor(Math.random() * 11) + 30;\n      allYouthSquads[leagueName][team.name] = generateYouthSquad(facilityLevel);\n    });\n  });\n  return allYouthSquads;\n};","map":{"version":3,"names":["turkishFirstNames","turkishLastNames","positions","generateYouthSquad","facilityLevel","youthPlayers","maxRating","Math","max","console","log","i","firstName","floor","random","length","lastName","position","age","rating","push","id","name","generateAllYouthSquads","turkishLeagues","allYouthSquads","Object","keys","forEach","leagueName","team"],"sources":["C:/Users/PC/fcpro/src/data/youthSquadGenerator.js"],"sourcesContent":["import { turkishFirstNames, turkishLastNames, positions } from './turkishNames';\r\n\r\n// Altyapı kadrosu oluşturma fonksiyonu\r\nexport const generateYouthSquad = (facilityLevel) => {\r\n  const youthPlayers = [];\r\n  const maxRating = Math.max(10, facilityLevel - 4); // Min 10, max (tesis seviyesi - 4)\r\n  \r\n  // Debug için log\r\n  console.log(`Altyapı seviyesi: ${facilityLevel}, Max reyting: ${maxRating}`);\r\n  \r\n  // 12 genç oyuncu oluştur (16-18 yaş arası)\r\n  for (let i = 0; i < 12; i++) {\r\n    const firstName = turkishFirstNames[Math.floor(Math.random() * turkishFirstNames.length)];\r\n    const lastName = turkishLastNames[Math.floor(Math.random() * turkishLastNames.length)];\r\n    const position = positions[Math.floor(Math.random() * positions.length)];\r\n    const age = Math.floor(Math.random() * 3) + 16; // 16-18 yaş arası\r\n    const rating = Math.floor(Math.random() * (maxRating - 10 + 1)) + 10; // 10 ile maxRating arası\r\n    \r\n    youthPlayers.push({\r\n      id: `youth_${i}`,\r\n      name: `${firstName} ${lastName}`,\r\n      position: position,\r\n      age: age,\r\n      rating: rating\r\n    });\r\n  }\r\n  \r\n  return youthPlayers;\r\n};\r\n\r\n// Tüm takımların altyapı kadrolarını oluştur\r\nexport const generateAllYouthSquads = (turkishLeagues) => {\r\n  const allYouthSquads = {};\r\n  \r\n  Object.keys(turkishLeagues).forEach(leagueName => {\r\n    allYouthSquads[leagueName] = {};\r\n    \r\n    turkishLeagues[leagueName].forEach(team => {\r\n      // Her takım için sabit bir altyapı seviyesi (30-40 arası)\r\n      const facilityLevel = Math.floor(Math.random() * 11) + 30;\r\n      allYouthSquads[leagueName][team.name] = generateYouthSquad(facilityLevel);\r\n    });\r\n  });\r\n  \r\n  return allYouthSquads;\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,gBAAgB,EAAEC,SAAS,QAAQ,gBAAgB;;AAE/E;AACA,OAAO,MAAMC,kBAAkB,GAAIC,aAAa,IAAK;EACnD,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEJ,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEnD;EACAK,OAAO,CAACC,GAAG,CAAC,qBAAqBN,aAAa,kBAAkBE,SAAS,EAAE,CAAC;;EAE5E;EACA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,SAAS,GAAGZ,iBAAiB,CAACO,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGd,iBAAiB,CAACe,MAAM,CAAC,CAAC;IACzF,MAAMC,QAAQ,GAAGf,gBAAgB,CAACM,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGb,gBAAgB,CAACc,MAAM,CAAC,CAAC;IACtF,MAAME,QAAQ,GAAGf,SAAS,CAACK,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGZ,SAAS,CAACa,MAAM,CAAC,CAAC;IACxE,MAAMG,GAAG,GAAGX,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAChD,MAAMK,MAAM,GAAGZ,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,IAAIR,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAEtED,YAAY,CAACe,IAAI,CAAC;MAChBC,EAAE,EAAE,SAASV,CAAC,EAAE;MAChBW,IAAI,EAAE,GAAGV,SAAS,IAAII,QAAQ,EAAE;MAChCC,QAAQ,EAAEA,QAAQ;MAClBC,GAAG,EAAEA,GAAG;MACRC,MAAM,EAAEA;IACV,CAAC,CAAC;EACJ;EAEA,OAAOd,YAAY;AACrB,CAAC;;AAED;AACA,OAAO,MAAMkB,sBAAsB,GAAIC,cAAc,IAAK;EACxD,MAAMC,cAAc,GAAG,CAAC,CAAC;EAEzBC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACI,OAAO,CAACC,UAAU,IAAI;IAChDJ,cAAc,CAACI,UAAU,CAAC,GAAG,CAAC,CAAC;IAE/BL,cAAc,CAACK,UAAU,CAAC,CAACD,OAAO,CAACE,IAAI,IAAI;MACzC;MACA,MAAM1B,aAAa,GAAGG,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;MACzDW,cAAc,CAACI,UAAU,CAAC,CAACC,IAAI,CAACR,IAAI,CAAC,GAAGnB,kBAAkB,CAACC,aAAa,CAAC;IAC3E,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOqB,cAAc;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}